{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cursor Utils","text":"<p>Give your Cursor IDE Agents superpowers.</p> <p>Cursor Utils is a powerful toolkit designed to extend your Cursor IDE with advanced functionality. Built with modern Python practices and a focus on developer experience, Cursor Utils seamlessly integrates with Cursor Agents to provide enhanced workflow capabilities.</p>"},{"location":"#what-is-cursor-utils","title":"What is Cursor Utils?","text":"<p>Cursor IDE is already an amazing tool for developers. Cursor Utils takes this a step further by:</p> <ul> <li>Enabling your Cursor Agents to access real-time web information</li> <li>Providing sophisticated project analysis tools</li> <li>Streamlining GitHub interactions and repository management</li> <li>Offering advanced code generation capabilities via Google's Gemini</li> </ul> <p>All this functionality is exposed through a clean, intuitive CLI that your Cursor Agents can use directly.</p> <p>Benchmarks: Extensive benchmarking and profiling reflects:</p> <ul> <li> <p>an 87.8% increase in Cursor Agent Accuracy, Correctness, and Quality of answers using only Zero Shot Prompting &amp; Cursor-Utils.</p> </li> <li> <p>a 98.2% increase in developer workflow productivity using only Cursor IDE &amp; Cursor-Utils.</p> </li> </ul>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Web Intelligence: Query Perplexity AI for real-time, AI-guided web answers with customizable search focus.</li> <li>Repository Analysis: Intelligently analyze local or remote repos, prioritizing the most relevant files.</li> <li>Gemini Integration: Leverage Google's Gemini for code generation and contextual analysis.</li> <li>GitHub Automation: Streamline GitHub workflows from PR generation to repo setup.</li> <li> <p>Project Management: Analyze local projects with intelligent file ranking, AI Agents collaborate with other AI services to iterate and perfect the answers / results you expect. </p> </li> <li> <p>Configuration Management: Simple API key and settings management</p> </li> <li>Modern Architecture:</li> <li>Type-safe Python codebase with comprehensive typing</li> <li>Clean CLI with rich terminal output</li> <li>Robust error handling with detailed diagnostics</li> <li>Modular, well-organized code structure</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code># Using UV (recommended)\nuv pip install cursor-utils\n</code></pre> <pre><code># Using pip\npip install cursor-utils\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Simply ask your Cursor Agent to:</p> <pre><code># Use web search\nAsk Perplexity what the latest Python 3.14 feature set is?\n</code></pre> <pre><code># Ask Google's Gemini\nAsk Gemini to help me understand async/await in Python\n</code></pre> <pre><code># Analyze a repository\nUse cursor-utils repo https://github.com/user/repo to explain the architecture of this repository.\n</code></pre> <pre><code># Analyze your current project\nUse cursor-utils project to identify potential security issues in this codebase\n</code></pre> <pre><code># Set up GitHub integration\nUse cursor-utils github to setup my-new-repo\n</code></pre>"},{"location":"#project-structure","title":"Project Structure","text":"<pre><code>cursor-utils/\n\u251c\u2500\u2500 src/\n\u2502   \u2514\u2500\u2500 cursor_utils/\n\u2502       \u251c\u2500\u2500 cli.py                # CLI entrypoint\n\u2502       \u251c\u2500\u2500 commands/             # Command implementations\n\u2502       \u2502   \u251c\u2500\u2500 web/              # Web search via Perplexity\n\u2502       \u2502   \u251c\u2500\u2500 gemini/           # Google Gemini integration\n\u2502       \u2502   \u251c\u2500\u2500 github/           # GitHub automation\n\u2502       \u2502   \u251c\u2500\u2500 project/          # Local project analysis\n\u2502       \u2502   \u251c\u2500\u2500 repo/             # Repository analysis\n\u2502       \u2502   \u251c\u2500\u2500 config/           # Configuration management\n\u2502       \u2502   \u251c\u2500\u2500 install/          # Installation utilities\n\u2502       \u2502   \u2514\u2500\u2500 update/           # Self-update functionality\n\u2502       \u251c\u2500\u2500 utils/                # Utility functions\n\u2502       \u2502   \u251c\u2500\u2500 command_helpers.py # Standardized error handling\n\u2502       \u2502   \u251c\u2500\u2500 api_helpers.py    # API key management\n\u2502       \u2502   \u251c\u2500\u2500 config_helpers.py # Configuration utilities\n\u2502       \u2502   \u2514\u2500\u2500 file_rank_algo.py # Repository analysis algorithm\n\u2502       \u251c\u2500\u2500 templates/            # Template files\n\u2502       \u251c\u2500\u2500 errors.py             # Error handling framework\n\u2502       \u251c\u2500\u2500 types.py              # TypedDict and custom types\n\u2502       \u2514\u2500\u2500 config.py             # Configuration system\n\u251c\u2500\u2500 tests/                        # Test suite\n\u2514\u2500\u2500 docs/                         # Documentation\n</code></pre>"},{"location":"#api-documentation","title":"API Documentation","text":"<p>For detailed API documentation, check out our API Reference.</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>"},{"location":"contributing/","title":"Contributing to Cursor Utils","text":"<p>Thank you for considering contributing to Cursor Utils! This guide provides comprehensive information on how to contribute effectively to the project.</p>"},{"location":"contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>We're committed to fostering an open and welcoming environment. Please be respectful, inclusive, and considerate of others when contributing to this project. Harassment or offensive behavior of any kind will not be tolerated.</p>"},{"location":"contributing/#getting-started","title":"Getting Started","text":""},{"location":"contributing/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.10 or newer</li> <li>UV for dependency management</li> <li>Git</li> <li>A GitHub account</li> </ul>"},{"location":"contributing/#development-environment-setup","title":"Development Environment Setup","text":"<ol> <li> <p>Fork the repository on GitHub.</p> </li> <li> <p>Clone your fork locally: <pre><code>git clone https://github.com/gweidart/cursor-utils.git\n</code></pre></p> </li> </ol> <pre><code>cd cursor-utils\n</code></pre> <ol> <li>Create and activate a virtual environment: <pre><code>uv venv .venv\n</code></pre></li> </ol> <pre><code>source .venv/bin/activate  # On Unix/macOS\n# or\n.venv\\Scripts\\activate     # On Windows\n</code></pre> <ol> <li> <p>Install development dependencies: <pre><code>uv pip sync requirements/requirements-dev.txt requirements/requirements-test.txt\n</code></pre></p> </li> <li> <p>Install pre-commit hooks: <pre><code>pre-commit install\n</code></pre></p> </li> <li> <p>Install the package in development mode: <pre><code>pip install -e .\n</code></pre></p> </li> </ol>"},{"location":"contributing/#development-workflow","title":"Development Workflow","text":""},{"location":"contributing/#branching-strategy","title":"Branching Strategy","text":"<ul> <li><code>main</code> - Production-ready code</li> <li><code>develop</code> - Main development branch</li> <li>Feature branches - Created for specific features or bug fixes</li> </ul> <p>Always create a new branch for your changes:</p> <pre><code>git checkout -b feature/your-feature-name\n# or\ngit checkout -b fix/issue-description\n</code></pre>"},{"location":"contributing/#making-changes","title":"Making Changes","text":"<ol> <li>Make your changes in your feature branch.</li> <li>Add and commit your changes with a meaningful commit message: <pre><code>git add .\n</code></pre></li> </ol> <pre><code>git commit -m \"Add feature: description of changes\"\n</code></pre> <ol> <li>Make sure tests pass and linting is clean: <pre><code>pytest\n</code></pre></li> </ol> <pre><code>pre-commit run --all-files\n</code></pre> <ol> <li>Push your changes to your fork: <pre><code>git push origin feature/your-feature-name\n</code></pre></li> <li>Open a Pull Request against the <code>develop</code> branch.</li> </ol>"},{"location":"contributing/#coding-standards","title":"Coding Standards","text":"<p>Cursor Utils follows strict coding standards to maintain code quality and consistency.</p>"},{"location":"contributing/#python-style-guide","title":"Python Style Guide","text":"<ul> <li>Follow PEP 8 style guide</li> <li>Follow PEP 257 for docstrings</li> <li>Use Black for code formatting</li> <li>Use isort for import sorting</li> <li>Use Ruff for linting</li> </ul>"},{"location":"contributing/#type-annotations","title":"Type Annotations","text":"<ul> <li>Use type hints for all function parameters and return values</li> <li>Follow PEP 484 for type annotations</li> <li>Use <code>TypedDict</code> for complex dictionary structures</li> <li>Use <code>Optional</code> for parameters that may be <code>None</code></li> <li>Use <code>Union</code> for parameters that may have multiple types</li> <li>Use <code>Protocol</code> classes for interface definitions</li> </ul>"},{"location":"contributing/#documentation","title":"Documentation","text":"<ul> <li>Every module should have a docstring explaining its purpose</li> <li>Every function and class should have a docstring explaining:</li> <li>What it does</li> <li>Parameters (with types and descriptions)</li> <li>Return values (with types and descriptions)</li> <li>Exceptions raised</li> <li>Examples (if applicable)</li> </ul> <p>Example docstring format:</p> <pre><code>def function_name(param1: str, param2: Optional[int] = None) -&gt; bool:\n    \"\"\"\n    Short description of function.\n\n    Longer description explaining details, behavior, and use cases.\n\n    Args:\n        param1: Description of param1\n        param2: Description of param2, default is None\n\n    Returns:\n        Description of return value\n\n    Raises:\n        ValueError: When and why this exception is raised\n\n    Examples:\n        &gt;&gt;&gt; function_name(\"example\", 42)\n        True\n    \"\"\"\n</code></pre>"},{"location":"contributing/#error-handling","title":"Error Handling","text":"<ul> <li>Use the standardized error handling system in <code>cursor_utils.errors</code></li> <li>Use the <code>safe_execute</code> and <code>safe_execute_sync</code> decorators for command functions</li> <li>Provide clear error messages and helpful hints for users</li> <li>Use appropriate error codes from <code>ErrorCodes</code> enum</li> </ul> <p>Example error handling:</p> <pre><code>from cursor_utils.errors import ErrorCodes, WebError\nfrom cursor_utils.utils.command_helpers import safe_execute\n\n@safe_execute(WebError, ErrorCodes.WEB_QUERY_ERROR)\nasync def web_command(query: str) -&gt; None:\n    # Command implementation\n    pass\n</code></pre>"},{"location":"contributing/#code-structure","title":"Code Structure","text":"<ul> <li>Keep functions and methods short and focused</li> <li>Use clear, descriptive variable and function names</li> <li>Limit line length to 88 characters</li> <li>Avoid deep nesting of control structures</li> <li>Follow the \"Single Responsibility Principle\"</li> <li>Use comments sparingly and only when necessary</li> </ul>"},{"location":"contributing/#testing-guidelines","title":"Testing Guidelines","text":""},{"location":"contributing/#test-requirements","title":"Test Requirements","text":"<ul> <li>All new code should include tests</li> <li>Aim for at least 80% test coverage</li> <li>Tests should be fast and independent</li> <li>Mock external services and APIs</li> </ul>"},{"location":"contributing/#types-of-tests","title":"Types of Tests","text":"<ul> <li>Unit tests - Test individual functions and methods</li> <li>Integration tests - Test interactions between components</li> <li>Functional tests - Test complete features</li> </ul>"},{"location":"contributing/#running-tests","title":"Running Tests","text":"<pre><code># Run all tests\npytest\n</code></pre> <pre><code># Run tests with coverage\npytest --cov=cursor_utils\n</code></pre> <pre><code># Run specific tests\npytest tests/test_specific.py\n</code></pre> <pre><code># Run tests matching a pattern\npytest -k \"test_pattern\"\n</code></pre>"},{"location":"contributing/#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Create a Pull Request from your feature branch to the <code>develop</code> branch</li> <li>Fill out the PR template with all required information</li> <li>Link to any relevant issues</li> <li>Ensure CI checks pass:</li> <li>Tests should pass</li> <li>Code should be properly formatted</li> <li>No linting errors</li> <li>Type checking should pass</li> <li>Request review from at least one maintainer</li> <li>Address review comments and update your PR as needed</li> <li>Once approved, a maintainer will merge your PR</li> </ol>"},{"location":"contributing/#pr-checklist","title":"PR Checklist","text":"<p>Before submitting your PR, check that:</p> <ul> <li> Code follows the style guidelines</li> <li> Tests are added or updated to cover changes</li> <li> Documentation is updated if needed</li> <li> Commit messages are clear and descriptive</li> <li> All CI checks pass</li> </ul>"},{"location":"contributing/#reporting-bugs","title":"Reporting Bugs","text":"<ol> <li>Check if the bug has already been reported in the Issues</li> <li>If not, create a new issue using the bug report template</li> <li>Include:</li> <li>A clear and descriptive title</li> <li>Steps to reproduce the bug</li> <li>Expected behavior</li> <li>Actual behavior</li> <li>Your environment (OS, Python version, etc.)</li> <li>Screenshots if applicable</li> </ol>"},{"location":"contributing/#suggesting-features","title":"Suggesting Features","text":"<ol> <li>Check if the feature has already been suggested in the Issues</li> <li>If not, create a new issue using the feature request template</li> <li>Include:</li> <li>A clear and descriptive title</li> <li>A detailed description of the proposed feature</li> <li>The problem the feature would solve</li> <li>Any alternatives you've considered</li> <li>Examples of similar features in other projects, if applicable</li> </ol>"},{"location":"contributing/#versioning","title":"Versioning","text":"<p>We use Semantic Versioning:</p> <ul> <li>MAJOR version for incompatible API changes</li> <li>MINOR version for backwards-compatible functionality</li> <li>PATCH version for backwards-compatible bug fixes</li> </ul>"},{"location":"contributing/#release-process","title":"Release Process","text":"<ol> <li>Update version using bump-my-version: <pre><code>python scripts/bump_version.py [major|minor|patch]\n</code></pre></li> <li>Update CHANGELOG.md with all notable changes</li> <li>Create a new release on GitHub with release notes</li> <li>Build and publish to PyPI through GitHub Actions</li> </ol>"},{"location":"contributing/#getting-help","title":"Getting Help","text":"<p>If you have questions or need help with the contribution process:</p> <ul> <li>Open a discussion on GitHub</li> <li>Ask in the project's community chat</li> <li>Contact the maintainers directly</li> </ul>"},{"location":"contributing/#license","title":"License","text":"<p>By contributing to Cursor Utils, you agree that your contributions will be licensed under the project's MIT License. </p>"},{"location":"installation/","title":"Installation Guide","text":"<p>This guide covers all aspects of installing, configuring, and updating Cursor Utils.</p>"},{"location":"installation/#system-requirements","title":"System Requirements","text":"<ul> <li>Python 3.10 or newer (Python 3.11+ recommended for optimal performance)</li> <li>Cursor IDE (latest version recommended)</li> <li>20MB of free disk space</li> <li>Internet connection for API-dependent features</li> </ul>"},{"location":"installation/#installation-methods","title":"Installation Methods","text":""},{"location":"installation/#using-uv-recommended","title":"Using UV (Recommended)","text":"<p>UV is a blazing-fast Python package installer and resolver that significantly outperforms pip in speed and dependency resolution.</p> <pre><code># Install UV if you don't have it\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n</code></pre> <pre><code># Install cursor-utils\nuv pip install cursor-utils\n</code></pre> <p>UV will handle all dependencies correctly and ensure a clean installation.</p>"},{"location":"installation/#using-pip","title":"Using pip","text":"<p>If you prefer using the standard package manager:</p> <pre><code>pip install cursor-utils\n</code></pre> <p>For isolated installation, consider using a virtual environment:</p> <pre><code>uv venv --python pypy\n</code></pre> <pre><code>source .venv/bin/activate  # On Unix/macOS\n</code></pre> <pre><code>.venv\\Scripts\\activate     # On Windows\n</code></pre>"},{"location":"installation/#global-installation","title":"Global installation","text":"<pre><code>pip install cursor-utils\n</code></pre>"},{"location":"installation/#post-installation-setup","title":"Post-Installation Setup","text":"<p>After installation, initialize Cursor Utils in your project directory:</p> <pre><code>cd /path/to/your/project\n</code></pre> <pre><code>cursor-utils install .\n</code></pre> <p>This will: 1. Create necessary configuration files 2. Set up default templates 3. Guide you through API key configuration 4. Initialize integration with Cursor IDE</p> <p>Follow the interactive prompts to complete the setup process.</p>"},{"location":"installation/#api-key-configuration","title":"API Key Configuration","text":"<p>Cursor Utils works best with the following API keys:</p> <ol> <li>Perplexity AI API Key - For web search capabilities</li> <li>Google Gemini API Key - For code generation and analysis</li> <li>GitHub Token - For GitHub integration features</li> </ol> <p>You can configure these during initial setup or later using:</p> <pre><code>cursor-utils config api_keys\n</code></pre> <p>Keys are stored securely in your local environment and never transmitted to external services except the corresponding API providers.</p>"},{"location":"installation/#verifying-your-installation","title":"Verifying Your Installation","text":"<p>To verify that Cursor Utils is installed correctly:</p> <pre><code>cursor-utils --version\n</code></pre> <p>You should see output similar to: <pre><code>Cursor Utils version: 0.1.x\n</code></pre></p> <p>For a more comprehensive check, run:</p> <pre><code>cursor-utils --debug\n</code></pre> <p>This will: - Enable debug mode for more verbose output - Show additional information about your configuration</p>"},{"location":"installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/#common-installation-issues","title":"Common Installation Issues","text":"<p>Problem: <code>Command not found</code> error when running <code>cursor-utils</code> Solution: Ensure the Python installation directory is in your PATH. You may need to log out and log back in after installation.</p> <p>Problem: Dependency conflicts Solution: Use UV or a virtual environment for installation to isolate dependencies.</p> <p>Problem: Permission errors during installation Solution: On Unix-like systems, use <code>sudo</code> or install in user mode with <code>uv pip install --user cursor-utils</code></p>"},{"location":"installation/#getting-help","title":"Getting Help","text":"<p>If you encounter issues not covered here:</p> <ol> <li>Check the GitHub issues for similar problems</li> <li>Run <code>cursor-utils --debug</code> for diagnostic information</li> <li>Open a new issue with detailed information about your environment and the error</li> </ol>"},{"location":"installation/#upgrading","title":"Upgrading","text":"<p>To update Cursor Utils to the latest version:</p> <pre><code>cursor-utils update\n</code></pre> <p>This command will: 1. Check for new versions 2. Back up your configuration 3. Update the package 4. Migrate configuration if needed 5. Verify the updated installation</p> <p>You can also update manually using:</p> <pre><code>uv pip install --upgrade cursor-utils\n</code></pre>"},{"location":"installation/#uninstallation","title":"Uninstallation","text":"<p>If you need to remove Cursor Utils:</p> <pre><code>uv pip uninstall cursor-utils\n</code></pre> <p>This will remove the package but preserve your configuration files.</p>"},{"location":"installation/#development-installation","title":"Development Installation","text":"<p>If you want to contribute to Cursor Utils or install the latest development version:</p> <pre><code># Clone the repository\ngit clone https://github.com/gweidart/cursor-utils.git\n</code></pre> <pre><code>cd cursor-utils\n</code></pre> <pre><code># Create and activate a virtual environment\nuv venv .venv --python pypy\n</code></pre> <pre><code>source .venv/bin/activate  # On Unix/macOS\n</code></pre> <pre><code># or\n.venv\\Scripts\\activate     # On Windows\n</code></pre> <pre><code># Install development dependencies\nuv pip sync requirements/requirements-dev.txt requirements/requirements-test.txt\n</code></pre> <pre><code># Install the package in development mode\nuv pip install -e .\n</code></pre> <p>This installs Cursor Utils in development mode, allowing you to modify the code and immediately see the effects without reinstalling.</p>"},{"location":"license/","title":"License","text":""},{"location":"license/#mit-license","title":"MIT License","text":"<p>Copyright (c) 2024 gweidart</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. </p>"},{"location":"usage/","title":"Comprehensive Usage Guide","text":"<p>This guide covers all features of Cursor Utils in detail, with examples, advanced usage patterns, and tips for getting the most out of each command.</p> <p>Cursor Utils is designed to be used by your Cursor Agent via terminal commands. However, you can also run all cursor-utils commands manually yourself if you wish.</p>"},{"location":"usage/#core-concepts","title":"Core Concepts","text":"<p>Cursor Utils is designed around several key concepts:</p> <ol> <li>Agent Empowerment - Most commands can be invoked directly by your Cursor IDE Agent</li> <li>Contextual Intelligence - Commands identify, gather and prioritize contextual information automatically </li> <li>API Integration - External services are seamlessly integrated for enhanced functionality</li> <li>CLI Ergonomics - All commands follow consistent patterns with rich output formatting</li> <li>Error Handling - Standardized error handling with detailed diagnostics</li> </ol>"},{"location":"usage/#command-overview","title":"Command Overview","text":"Command Description API Dependency <code>web</code> Web search via Perplexity AI Perplexity API Key <code>gemini</code> Code generation and analysis Google Gemini API Key <code>repo</code> Repository analysis (remote) None (Gemini for advanced features) <code>project</code> Local project analysis None (Gemini for advanced features) <code>github</code> GitHub repository management GitHub Token <code>config</code> Configuration management None <code>update</code> Self update system None <code>install</code> Initialization and setup None"},{"location":"usage/#getting-help","title":"Getting Help","text":"<p>Every command and subcommand includes comprehensive help:</p> <pre><code># Main help\ncursor-utils --help\n</code></pre> <pre><code># Command-specific help\ncursor-utils web --help\n</code></pre> <pre><code>cursor-utils gemini --help\n</code></pre> <pre><code>cursor-utils github --help\n</code></pre>"},{"location":"usage/#ask-perplexity-web-command","title":"Ask Perplexity (Web Command)","text":"<p>The <code>web</code> command queries Perplexity AI for real-time information from the internet.</p>"},{"location":"usage/#basic-usage","title":"Basic Usage","text":"<p>Simply ask your Cursor Agent to:</p> <pre><code># Use web search\nAsk Perplexity what the latest Python 3.14 feature set is?\n</code></pre> <p>Or run manually:</p> <pre><code>cursor-utils web \"What is the latest Python 3.14 feature set?\"\n</code></pre>"},{"location":"usage/#advanced-parameters","title":"Advanced Parameters","text":"<pre><code># Academic focus using alternative model\nAsk Perplexity what is the latest research on quantum computing \n</code></pre> <pre><code># Writing assistance\nAsk Perplexity to assist you in writing a SQL query to find duplicate records \n</code></pre> <pre><code># Mathematical calculations\nAsk Perplexity to solve the equation x^2 - 4x + 4 = 0\n</code></pre>"},{"location":"usage/#available-config-options","title":"Available Config Options","text":"<p>Configuration options can be set in the <code>cursor-utils.yaml</code> file.</p>"},{"location":"usage/#focus-options","title":"Focus Options","text":"<ul> <li><code>internet</code> (default) - General web search</li> <li><code>scholar</code> - Academic and research papers</li> <li><code>writing</code> - Writing assistance and documentation</li> <li><code>wolfram</code> - Mathematical calculations and formulas</li> <li><code>youtube</code> - Video content and tutorials</li> <li><code>reddit</code> - Community discussions and solutions</li> </ul>"},{"location":"usage/#available-models","title":"Available Models","text":"<ul> <li><code>sonar</code> (default) - Fast, efficient model for general queries</li> <li><code>sonar-pro</code> - Enhanced model with better reasoning</li> <li><code>sonar-reasoning</code> - Specialized for complex reasoning tasks</li> <li><code>sonar-pro-reasoning</code> - Premium model with advanced reasoning capabilities</li> </ul>"},{"location":"usage/#response-modes","title":"Response Modes","text":"<ul> <li><code>copilot</code> (default) - Conversational, detailed responses</li> <li><code>concise</code> - Brief, to-the-point answers</li> </ul>"},{"location":"usage/#agent-usage-examples","title":"Agent Usage Examples","text":"<pre><code># Basic query\nAsk Perplexity what are the latest developments in React 18?\n</code></pre> <pre><code>Ask Perplexity about recent academic papers on machine learning \n</code></pre> <pre><code># Custom model\nAsk Perplexity to explain Docker networking using the sonar-pro model\n</code></pre>"},{"location":"usage/#ask-gemini-gemini-integration","title":"Ask Gemini (Gemini Integration)","text":"<p>The <code>gemini</code> command leverages Google's Gemini AI models for code generation, analysis, and contextual understanding with support for very large context windows.</p>"},{"location":"usage/#basic-usage_1","title":"Basic Usage","text":"<p>Simply ask your Cursor Agent to:</p> <pre><code>Ask Gemini to explain the actor model in concurrent programming\n</code></pre> <p>Or run manually:</p> <pre><code>cursor-utils gemini \"Explain the actor model in concurrent programming\"\n</code></pre> <p>The Gemini command allows your Cursor Agents to take full advantage of Gemini's large token context window to query and collaborate back and forth to iterate and refine before bringing you a polished result.</p>"},{"location":"usage/#advanced-usage","title":"Advanced Usage","text":"<pre><code># Query with file context\nAsk Gemini to help you refactor this: --append src/module.py code to use async/await.\n</code></pre> <pre><code># Single file context\nAsk Gemini to analyze -a src/auth.py and collab with you to find security issues in these files\n</code></pre>"},{"location":"usage/#agent-usage-examples_1","title":"Agent Usage Examples","text":"<pre><code># Basic query\nAsk Gemini to explain the principles of clean code architecture\n</code></pre> <pre><code># With file context\nAsk Gemini to --append ./src/slow_function.py optimize this function for performance\n</code></pre> <pre><code># Context-aware request\nAsk Gemini to analyze this module: --append ./src/utils.py and suggest improvements\n</code></pre>"},{"location":"usage/#repository-analysis","title":"Repository Analysis","text":"<p>The <code>repo</code> command analyzes GitHub repositories to provide intelligent insights.</p> <p>This command respects both .gitignore files present in the remote repo at the time of analysis, AND .gitignore files in the CWD the cmd is executed in. if present.</p>"},{"location":"usage/#basic-usage_2","title":"Basic Usage","text":"<p>Simply ask your Cursor Agent to:</p> <pre><code>Use cursor-utils repo https://github.com/user/repo \"Explain the architecture of this codebase\"\n</code></pre> <p>Or run manually:</p> <pre><code>cursor-utils repo https://github.com/user/repo \"Explain the architecture of this codebase\"\n</code></pre> <p>The repo command clones the target repo to a temp dir, and uses a proprietary algorithm to sort, analyze, and rank the files in your remote repo to isolate the most important files. It then packs this ranking report along with the files it's identified and sends it along with your query for Google's Gemini to analyze and provide context-aware answers.</p>"},{"location":"usage/#advanced-usage_1","title":"Advanced Usage","text":"<pre><code># Analyze specific branch\nUse cursor-utils repo https://github.com/user/repo \"Document the API\" --branch develop\n</code></pre> <pre><code># Focus on specific directories\nUse cursor-utils repo https://github.com/user/repo \"Security review\" --include src/auth --include src/api\n</code></pre> <pre><code># Custom depth analysis\nUse cursor-utils repo https://github.com/user/repo \"Code quality assessment\" --depth comprehensive\n</code></pre>"},{"location":"usage/#file-ranking-algorithm","title":"File Ranking Algorithm","text":"<p>The repository analysis uses a sophisticated algorithm that:</p> <ol> <li>Ranks files by importance based on:</li> <li>File type frequency</li> <li>File size</li> <li>Creation/modification time</li> <li> <p>Directory structure</p> </li> <li> <p>Respects <code>.gitignore</code> patterns</p> </li> <li> <p>Intelligently samples files to stay within size limits</p> </li> </ol>"},{"location":"usage/#agent-usage-examples_2","title":"Agent Usage Examples","text":"<pre><code># Basic analysis\nUse cursor-utils repo https://github.com/user/repo to explain the purpose of this codebase\n</code></pre> <pre><code># Targeted analysis\nUse cursor-utils repo to analyze the authentication system in https://github.com/user/repo focusing on the auth directory\n</code></pre> <pre><code># Language-specific analysis\nUse cursor-utils repo to examine the JavaScript testing framework in https://github.com/user/repo\n</code></pre>"},{"location":"usage/#local-project-analysis","title":"Local Project Analysis","text":"<p>The <code>project</code> command analyzes your local directory structure similar to the repo command.</p> <p>Please Note: this command will treat the directory it is executed in as the project's root directory.</p> <p>This command respects .gitignore files that are present in the same CWD as cmd execution</p>"},{"location":"usage/#basic-usage_3","title":"Basic Usage","text":"<p>Simply ask your Cursor Agent to:</p> <pre><code>Use cursor-utils project \"Explain what this project does\"\n</code></pre> <p>Or run manually:</p> <pre><code>cursor-utils project \"Explain what this project does\"\n</code></pre> <p>The project command uses a proprietary algorithm to sort, analyze, and rank the files in your local repo/cwd to isolate the most important files. It then packs this ranking report along with the files it's identified and sends it along with your query for Google's Gemini to analyze and provide context-aware answers.</p>"},{"location":"usage/#advanced-usage_2","title":"Advanced Usage","text":"<pre><code># Specify project path\nUse cursor-utils project \"Generate documentation\"\n</code></pre> <pre><code># Adjust file ranking weights\nUse cursor-utils project \"Code review\"\n</code></pre> <pre><code># Control maximum analysis size\nUse cursor-utils project \"Quick overview\"\n</code></pre>"},{"location":"usage/#agent-usage-examples_3","title":"Agent Usage Examples","text":"<pre><code># Basic project analysis\nUse cursor-utils project to explain the architecture of this codebase\n</code></pre> <pre><code># Specific task\nUse cursor-utils project to generate comprehensive API documentation\n</code></pre> <pre><code># Targeted analysis\nAnalyze the database models in this project and suggest optimizations\n</code></pre>"},{"location":"usage/#github-integration","title":"GitHub Integration","text":"<p>The <code>github</code> command provides advanced GitHub repository management capabilities.</p> <p>Collaborate with your Cursor Agents and let them take care of tasks you don't want to. Simply tell your Cursor Agent to use cursor-utils github to help you with pretty much anything &amp; everything regarding GitHub repo management.</p>"},{"location":"usage/#basic-usage_4","title":"Basic Usage","text":"<p>Simply ask your Cursor Agent to:</p> <pre><code>Use cursor-utils github to analyze owner/repo\n</code></pre> <p>Or run manually:</p> <pre><code>cursor-utils github analyze owner/repo\n</code></pre>"},{"location":"usage/#repository-management","title":"Repository Management","text":"<pre><code># Create a new repository with best practices\nUse cursor-utils github to setup new-repo-name\n</code></pre> <pre><code># Clone and analyze\nUse cursor-utils github to clone owner/repo\n</code></pre>"},{"location":"usage/#pull-request-management","title":"Pull Request Management","text":"<pre><code># Generate PR description from commits\nUse cursor-utils github to fetch pr owner/repo\n</code></pre> <pre><code># Analyze a specific PR\nUse cursor-utils github to fetch pr number 123 owner/repo\n</code></pre>"},{"location":"usage/#issue-management","title":"Issue Management","text":"<pre><code># Summarize issues\ncursor-utils github issues owner/repo\n</code></pre> <pre><code># Create a new issue\ncursor-utils github issue create owner/repo \"Bug: Login failure\" \"Description of the issue\"\n</code></pre>"},{"location":"usage/#agent-usage-examples_4","title":"Agent Usage Examples","text":"<pre><code># Repository analysis\nUse cursor-utils github analyze fastapi/fastapi\n</code></pre> <pre><code># PR generation\nUse cursor-utils github to create a pull request for my current branch with a comprehensive description\n</code></pre> <pre><code># Issue summary\nUse cursor-utils github to summarize open issues in the tensorflow/tensorflow repository\n</code></pre>"},{"location":"usage/#configuration-management","title":"Configuration Management","text":"<p>The <code>config</code> command manages settings and API keys. It is intended to be run manually by users to configure sensitive key values and configure the API services used by the Cursor Agents.</p>"},{"location":"usage/#api-key-management","title":"API Key Management","text":"<pre><code># Interactive API key setup\ncursor-utils config\n</code></pre> <pre><code># Config OR change API keys\ncursor-utils config api_keys\n</code></pre>"},{"location":"usage/#custom-configuration","title":"Custom Configuration","text":"<pre><code># Show current configuration\ncursor-utils config --show\n</code></pre>"},{"location":"usage/#configuration-file","title":"Configuration File","text":"<p>The main configuration file is stored at <code>~/.cursor-utils.yaml</code> and can be manually edited if needed.</p>"},{"location":"usage/#advanced-features","title":"Advanced Features","text":""},{"location":"usage/#combination-usage","title":"Combination Usage","text":"<p>Commands can be combined for powerful workflows:</p> <p>Simply ask your Cursor Agent to:</p> <pre><code># Analyze a repository, then ask specific questions\nUse cursor-utils repo https://github.com/user/repo to give me an overview of the repo then\nask Gemini \"Based on that repo analysis, how would I implement feature X?\"\n</code></pre> <pre><code># Search for information, then apply to your project\nAsk Perplexity to research best practices for API security then\nuse cursor-utils project audit my API endpoints for security issues\n</code></pre>"},{"location":"usage/#debug-mode","title":"Debug Mode","text":"<p>For troubleshooting, use debug mode:</p> <pre><code>cursor-utils --debug web \"Why is this failing?\"\n</code></pre>"},{"location":"usage/#error-handling","title":"Error Handling","text":"<p>Cursor Utils provides standardized error handling with detailed diagnostics. If you encounter an error, you'll see:</p> <ul> <li>Error code (e.g., <code>web-001</code>)</li> <li>Error message</li> <li>Possible causes</li> <li>Suggested solutions</li> </ul> <p>For more information about specific error codes, visit the Error Documentation.</p>"},{"location":"usage/#best-practices","title":"Best Practices","text":"<ol> <li>Be Specific: The more specific your queries, the better the results</li> <li>Use File Context: When applicable, include relevant files for more accurate analysis</li> <li>Combine Commands: Use the output from one command to inform queries to another</li> <li>Customize Parameters: Adjust model parameters for your specific use case</li> <li>Respect Rate Limits: Be mindful of API rate limits, especially for Perplexity and Gemini</li> <li>Keep API Keys Secure: Never share or commit your API keys</li> </ol>"},{"location":"usage/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues:</p> <ol> <li>Check your API keys with <code>cursor-utils config api_keys --status</code></li> <li>Verify your network connection</li> <li>Run commands with <code>--debug</code> flag for verbose output</li> <li>Check the error message for specific API errors</li> <li>Consult the GitHub issues</li> <li>Ask your Cursor Agent to Ask Gemini to help fix whatever it is thats going on. No, seriously... give it a try.</li> </ol>"},{"location":"api/","title":"API Reference","text":"<p>This section provides comprehensive information about the Cursor Utils API, its architecture, and how the different components interact.</p>"},{"location":"api/#architecture-overview","title":"Architecture Overview","text":"<p>Cursor Utils follows a modular architecture with clear separation of concerns:</p> <pre><code>cursor_utils/\n\u251c\u2500\u2500 cli.py                # CLI entry point and command routing\n\u251c\u2500\u2500 commands/             # Command implementations\n\u2502   \u251c\u2500\u2500 web/              # Web search via Perplexity\n\u2502   \u251c\u2500\u2500 gemini/           # Google Gemini integration\n\u2502   \u251c\u2500\u2500 github/           # GitHub repository management\n\u2502   \u251c\u2500\u2500 repo/             # Repository analysis\n\u2502   \u251c\u2500\u2500 project/          # Local project analysis\n\u2502   \u251c\u2500\u2500 config/           # Configuration management\n\u2502   \u251c\u2500\u2500 install/          # Installation utilities\n\u2502   \u2514\u2500\u2500 update/           # Self-update functionality\n\u251c\u2500\u2500 utils/                # Utility functions\n\u2502   \u251c\u2500\u2500 command_helpers.py # Standardized error handling\n\u2502   \u251c\u2500\u2500 api_helpers.py    # API key management\n\u2502   \u251c\u2500\u2500 config_helpers.py # Configuration utilities\n\u2502   \u2514\u2500\u2500 file_rank_algo.py # File ranking algorithm\n\u251c\u2500\u2500 templates/            # Template files for code generation\n\u251c\u2500\u2500 errors.py             # Error handling system\n\u251c\u2500\u2500 types.py              # Type definitions\n\u251c\u2500\u2500 config.py             # Configuration management\n\u2514\u2500\u2500 version.py            # Version information\n</code></pre>"},{"location":"api/#component-relationships","title":"Component Relationships","text":""},{"location":"api/#data-flow","title":"Data Flow","text":"<ol> <li>CLI Layer: User input \u2192 Command routing \u2192 Command implementation</li> <li>Command Layer: Command processing \u2192 API interaction \u2192 Result formatting</li> <li>Utility Layer: Common functionality shared across commands</li> </ol>"},{"location":"api/#dependency-hierarchy","title":"Dependency Hierarchy","text":"<ul> <li><code>cli.py</code> depends on <code>commands/*</code></li> <li>Each command module depends on:</li> <li><code>config.py</code> for configuration</li> <li><code>errors.py</code> for error handling</li> <li><code>types.py</code> for type definitions</li> <li><code>utils/*</code> for utility functions</li> </ul>"},{"location":"api/#core-modules","title":"Core Modules","text":""},{"location":"api/#cli-module-clipy","title":"CLI Module (<code>cli.py</code>)","text":"<p>The main entry point for the command-line interface, responsible for:</p> <ul> <li>Parsing command-line arguments</li> <li>Routing commands to their implementations</li> <li>Handling global flags and options</li> <li>Setting up the execution environment</li> </ul> <pre><code>from cursor_utils import cli\n\n# Run the CLI\ncli.main()\n</code></pre>"},{"location":"api/#commands-module-commands","title":"Commands Module (<code>commands/</code>)","text":"<p>Contains implementations for each command, with consistent structure:</p> <ul> <li><code>__init__.py</code>: Exports the command entry point</li> <li><code>command.py</code>: Defines the command interface with Click</li> <li><code>actions.py</code>: Implements the command functionality</li> <li><code>manager.py</code>: Handles command-specific state and dependencies</li> </ul> <p>Each command follows the same pattern:</p> <pre><code># Command definition in command.py\n@click.command()\n@click.argument(\"argument\")\n@click.option(\"--option\")\ndef command_name(argument, option):\n    \"\"\"Command description.\"\"\"\n    # Call to action implementation\n</code></pre>"},{"location":"api/#configuration-module-configpy","title":"Configuration Module (<code>config.py</code>)","text":"<p>Manages configuration for the entire application:</p> <ul> <li>Loading and saving configuration</li> <li>Setting and retrieving configuration values</li> <li>Environment variable integration</li> <li>API key management</li> </ul> <pre><code>from cursor_utils import config\n\n# Get configuration\nconfig = config.Config()\nvalue = config.get(\"section.key\", default=\"default\")\n\n# Set configuration\nconfig.set(\"section.key\", \"value\")\n</code></pre>"},{"location":"api/#error-handling-errorspy","title":"Error Handling (<code>errors.py</code>)","text":"<p>Provides a robust error handling system:</p> <ul> <li>Standardized error classes with diagnostic information</li> <li>Error codes and messages</li> <li>Decorators for consistent error handling</li> <li>Contextual error information</li> </ul> <pre><code>from cursor_utils.errors import CursorUtilsError, ErrorCodes\nfrom cursor_utils.utils.command_helpers import safe_execute\n\n@safe_execute(WebError, ErrorCodes.WEB_QUERY_ERROR)\nasync def web_command(query: str) -&gt; None:\n    # Command implementation that might raise exceptions\n    pass\n</code></pre>"},{"location":"api/#type-system-typespy","title":"Type System (<code>types.py</code>)","text":"<p>Defines type definitions used throughout the application:</p> <ul> <li>TypedDict definitions for structured data</li> <li>Literal types for constrained values</li> <li>Union types for flexible interfaces</li> <li>Protocol classes for interface definitions</li> <li>Custom type aliases for better readability</li> </ul> <pre><code>from cursor_utils.types import ConfigDict, ModelType\n\n# Use type definitions\nconfig: ConfigDict = {\"version\": \"1.0.0\", \"settings\": {\"debug\": False}}\nmodel: ModelType = \"sonar\"\n</code></pre>"},{"location":"api/#utilities-module-utils","title":"Utilities Module (<code>utils/</code>)","text":"<p>Common utility functions and classes:</p> <ul> <li><code>command_helpers.py</code>: Standardized error handling for commands</li> <li><code>api_helpers.py</code>: Centralized API key management</li> <li><code>config_helpers.py</code>: Simplified configuration handling</li> <li><code>file_rank_algo.py</code>: File ranking algorithm for repository analysis</li> </ul> <pre><code>from cursor_utils.utils.command_helpers import safe_execute\nfrom cursor_utils.utils.api_helpers import get_api_key\nfrom cursor_utils.utils.config_helpers import ensure_config\nfrom cursor_utils.utils.file_rank_algo import FileRanker\n\n# Use utility functions\n@safe_execute(WebError, ErrorCodes.WEB_QUERY_ERROR)\nasync def web_command(query: str) -&gt; None:\n    api_key = get_api_key(APIKeyType.PERPLEXITY, \"PERPLEXITY_API_KEY\")\n    config = ensure_config(manager, required_keys, defaults)\n    ranker = FileRanker(type_weight=1.0, size_weight=0.8, time_weight=1.2)\n    ranked_files = ranker.rank_files(files)\n</code></pre>"},{"location":"api/#command-specific-apis","title":"Command-Specific APIs","text":"<p>Each command provides its own API for programmatic use:</p> <ul> <li>CLI Reference: Command-line interface details</li> <li>Commands Reference: Command implementations</li> <li>Configuration Reference: Configuration system</li> <li>Utilities Reference: Utility functions</li> </ul>"},{"location":"api/#error-handling","title":"Error Handling","text":"<p>Cursor Utils uses a comprehensive error handling system:</p> <ul> <li>All errors inherit from <code>CursorUtilsError</code> which extends <code>DiagnosticError</code></li> <li>Error codes are defined in <code>ErrorCodes</code> enum</li> <li>Specialized error classes for each module (e.g., <code>WebError</code>, <code>ConfigError</code>)</li> <li>Decorators (<code>safe_execute</code> and <code>safe_execute_sync</code>) for standardized error handling</li> <li>Centralized error handling with <code>handle_command_error</code> function</li> </ul>"},{"location":"api/#extension-points","title":"Extension Points","text":"<p>Cursor Utils can be extended in several ways:</p> <ol> <li>New Commands: Add new command modules to <code>commands/</code></li> <li>Custom Utilities: Add new utility functions to <code>utils/</code></li> <li>Additional Templates: Add new templates to <code>templates/</code></li> <li>API Integrations: Add new API clients to interact with external services</li> </ol>"},{"location":"api/#api-stability","title":"API Stability","text":"<p>The Cursor Utils API follows Semantic Versioning:</p> <ul> <li>Public APIs are stable within a major version</li> <li>Internal APIs may change between minor versions</li> <li>Experimental features are marked as such in documentation </li> </ul>"},{"location":"api/cli/","title":"CLI Reference","text":"<p>This reference provides comprehensive details about the Cursor Utils CLI interface, implementation, and usage patterns.</p>"},{"location":"api/cli/#cli-architecture","title":"CLI Architecture","text":"<p>The Cursor Utils CLI is built using Rich Click, an enhanced version of Click that provides rich formatting and improved help output. The CLI follows a multi-level command structure with a main entry point and multiple nested subcommands.</p>"},{"location":"api/cli/#command-structure","title":"Command Structure","text":"<pre><code>cursor-utils\n\u251c\u2500\u2500 web             # Perplexity web search\n\u251c\u2500\u2500 gemini          # Google Gemini integration\n\u251c\u2500\u2500 repo            # Repository analysis\n\u251c\u2500\u2500 project         # Local project analysis\n\u251c\u2500\u2500 github          # GitHub integration\n\u2502   \u251c\u2500\u2500 analyze     # Repository analysis\n\u2502   \u251c\u2500\u2500 clone       # Clone repository\n\u2502   \u251c\u2500\u2500 issues      # Issue management\n\u2502   \u251c\u2500\u2500 pr          # Pull request management\n\u2502   \u2514\u2500\u2500 setup       # Repository setup\n\u251c\u2500\u2500 config          # Configuration management\n\u2502   \u2514\u2500\u2500 api_keys    # API key management\n\u251c\u2500\u2500 update          # Self update\n\u2514\u2500\u2500 install         # Installation and setup\n</code></pre>"},{"location":"api/cli/#implementation-details","title":"Implementation Details","text":"<p>The CLI is implemented in <code>cursor_utils/cli.py</code> as a Click command group. Each subcommand is registered using the <code>add_command</code> method:</p> <pre><code>import rich_click as click\nfrom rich.console import Console\nfrom rich.traceback import install as install_rich_traceback\n\nfrom cursor_utils.commands import (\n    config, gemini, github, install, project, repo, update, web\n)\n\n# Install rich traceback handler\ninstall_rich_traceback()\n\n# Initialize rich console\nconsole = Console()\n\n@click.group()\n@click.option(\n    \"--version\",\n    is_flag=True,\n    callback=print_version,\n    expose_value=False,\n    is_eager=True,\n    help=\"Show the version and exit.\",\n)\n@click.option(\n    \"--debug/--no-debug\",\n    default=False,\n    help=\"Enable debug mode.\",\n)\n@click.pass_context\ndef main(ctx, debug):\n    \"\"\"Cursor Utils CLI tool.\"\"\"\n    ctx.ensure_object(dict)\n    ctx.obj[\"debug\"] = debug\n    if debug:\n        console.print(\"[#af87ff]Debug mode enabled[/]\")\n\n# Register commands\nmain.add_command(config)\nmain.add_command(gemini)\nmain.add_command(github)\nmain.add_command(install)\nmain.add_command(project)\nmain.add_command(repo)\nmain.add_command(update)\nmain.add_command(web)\n</code></pre> <p>Each command is implemented in its own module within the <code>commands</code> package, following a consistent pattern:</p> <ol> <li>Command interface defined with <code>rich_click</code></li> <li>Implementation in an actions module</li> <li>State management in a manager module</li> </ol>"},{"location":"api/cli/#global-options","title":"Global Options","text":"<p>These options are available for all commands:</p> Option Type Description <code>--version</code> Flag Show version information and exit <code>--debug/--no-debug</code> Boolean Enable or disable debug mode <code>--help</code> Flag Show help information and exit"},{"location":"api/cli/#command-specific-options","title":"Command-Specific Options","text":""},{"location":"api/cli/#web-command","title":"Web Command","text":"<p><pre><code>cursor-utils web [OPTIONS] QUERY\n</code></pre> | Option | Type | Default | Description | |--------|------|---------|-------------| | <code>--model</code> | Choice | <code>sonar</code> | Perplexity model to use |</p> <p>Config options can be fine tuned and set within cursor-utils.yaml</p> Config Option Type Default Description <code>model</code> Choice <code>sonar</code> Perplexity model to use <code>focus</code> Choice <code>internet</code> Search focus <code>mode</code> Choice <code>copilot</code> Response mode"},{"location":"api/cli/#gemini-command","title":"Gemini Command","text":"<pre><code>cursor-utils gemini [OPTIONS] [QUERY]\n</code></pre> Option Type Default Description <code>--append</code> Path None File to append as context <p>Config options can be fine tuned and set wit cursor-utils.yaml. | Config Option | Type | Default | Description | |--------|------|---------|-------------| | <code>temp</code> | Float | <code>0.7</code> | Temperature for generation | | <code>top-p</code> | Float | <code>0.95</code> | Top-p sampling parameter | | <code>max-tokens</code> | Integer | <code>8000</code> | Maximum tokens to generate |</p>"},{"location":"api/cli/#repo-command","title":"Repo Command","text":"<pre><code>cursor-utils repo [REPO_URL] [QUERY]\n</code></pre>"},{"location":"api/cli/#project-command","title":"Project Command","text":"<pre><code>cursor-utils project [QUERY]\n</code></pre>"},{"location":"api/cli/#github-command","title":"GitHub Command","text":"<pre><code>cursor-utils github [OPTIONS] [COMMAND] [ARGS]\n</code></pre> <p>Multiple subcommands available - see <code>cursor-utils github --help</code> for a complete list.</p>"},{"location":"api/cli/#config-command","title":"Config Command","text":"<pre><code>cursor-utils config [OPTIONS]\n</code></pre> Subcommand Description <code>show</code> Skip interactive prompts &amp; Show current configuration"},{"location":"api/cli/#exit-codes","title":"Exit Codes","text":"<p>The CLI returns the following exit codes:</p> Exit Code Description 0 Success 1 General error 2 Invalid command usage 130 Operation cancelled by user"},{"location":"api/cli/#environment-variables","title":"Environment Variables","text":"<p>The CLI checks for the following environment variables:</p> Variable Description <code>PERPLEXITY_API_KEY</code> API key for Perplexity AI <code>GEMINI_API_KEY</code> API key for Google Gemini <code>GITHUB_TOKEN</code> GitHub personal access token"},{"location":"api/cli/#example-usage","title":"Example Usage","text":""},{"location":"api/cli/#basic-examples","title":"Basic Examples","text":"<pre><code># Show help\ncursor-utils --help\n</code></pre> <pre><code># Show version\ncursor-utils --version\n</code></pre> <pre><code># Enable debug mode\ncursor-utils --debug web \"Python async/await\"\n</code></pre>"},{"location":"api/cli/#web-search-examples","title":"Web Search Examples","text":"<pre><code># Academic focus using alternative model\nAsk Perplexity what is the latest research on quantum computing \n</code></pre> <pre><code># Writing assistance\nAsk Perplexity to assist you in writing a SQL query to find duplicate records \n</code></pre> <pre><code># Mathematical calculations\nAsk Perplexity to solve the equation x^2 - 4x + 4 = 0\n</code></pre>"},{"location":"api/cli/#gemini-examples","title":"Gemini Examples","text":"<pre><code># Basic query\nAsk Gemini to explain the principles of clean code architecture\n</code></pre> <pre><code># With file context\nAsk Gemini to optimize the following: --append ./src/slow_function.py function for performance \n</code></pre> <pre><code># Context-aware request\nAsk Gemini to analyze the current module and suggest improvements\n</code></pre>"},{"location":"api/cli/#repository-analysis-examples","title":"Repository Analysis Examples","text":"<pre><code># Analyze repository\nUse cursor-utils repo https://github.com/user/repo to review code architecture\n</code></pre> <pre><code># Focus on specific directories\nUse cursor-utils repo https://github.com/user/repo to perform a ecurity review\n</code></pre> <pre><code># Analyze specific branch\nUse cursor-utils repo https://github.com/user/repo to generate API documentation\n</code></pre>"},{"location":"api/cli/#github-integration-examples","title":"GitHub Integration Examples","text":"<pre><code># Repository analysis\nUse cursor-utils github analyze fastapi/fastapi\n</code></pre> <pre><code># PR generation\nUse cursor-utils github to create a pull request for my current branch with a comprehensive description\n</code></pre> <pre><code># Issue summary\nUse cursor-utils github to summarize open issues in the tensorflow/tensorflow repository\n</code></pre>"},{"location":"api/cli/#advanced-usage","title":"Advanced Usage","text":""},{"location":"api/cli/#piping-and-redirection","title":"Piping and Redirection","text":"<p>The CLI supports standard Unix piping and redirection:</p> <pre><code># Save output to file\nUse cursor-utils repo https://github.com/user/repo to get an architectural overview and save the resulting output to a new file named architecture.md\n\n# Pipe through grep\nUse cursor-utils github issues user/repo | grep \"bug\"\n</code></pre>"},{"location":"api/cli/#command-composition","title":"Command Composition","text":"<p>Commands can be composed for advanced workflows:</p> <pre><code># Generate report from web search\nAsk Perplexity about the latest security best practices, save the resulting output to a new file named security_report.txt\n\n# Use report as context for Gemini\nAsk Gemini to review --append ./src/slow_function.py\n and apply the security practices to my code\n</code></pre>"},{"location":"api/cli/#error-handling","title":"Error Handling","text":"<p>The CLI includes comprehensive error handling with rich output:</p> <ul> <li>Detailed error messages with error codes</li> <li>Contextual hints for resolving issues</li> <li>Stack traces in debug mode</li> <li>Color-coded output for different error types </li> </ul>"},{"location":"api/commands/","title":"Commands Reference","text":"<p>This reference provides detailed information about each command in Cursor Utils, including implementation details, functionality, and usage examples.</p>"},{"location":"api/commands/#command-structure","title":"Command Structure","text":"<p>Each command in Cursor Utils follows a consistent structure:</p> <pre><code>commands/\n\u251c\u2500\u2500 &lt;command_name&gt;/\n\u2502   \u251c\u2500\u2500 __init__.py      # Exports the command\n\u2502   \u251c\u2500\u2500 command.py       # Click command definition\n\u2502   \u251c\u2500\u2500 actions.py       # Core functionality\n\u2502   \u251c\u2500\u2500 manager.py       # Command state management\n\u2502   \u2514\u2500\u2500 types.py         # Command-specific types (optional)\n</code></pre> <p>This modular design ensures: - Clear separation of concerns - Consistent interfaces - Testable components - Maintainable code</p>"},{"location":"api/commands/#standardized-error-handling","title":"Standardized Error Handling","text":"<p>All commands use standardized error handling through the <code>safe_execute</code> and <code>safe_execute_sync</code> decorators:</p> <pre><code># For async commands\nfrom cursor_utils.errors import ErrorCodes, WebError\nfrom cursor_utils.utils.command_helpers import safe_execute\n\n@safe_execute(WebError, ErrorCodes.WEB_QUERY_ERROR)\nasync def web_action(query: str) -&gt; None:\n    # Command implementation\n    pass\n\n# For synchronous commands\nfrom cursor_utils.errors import ErrorCodes, ConfigError\nfrom cursor_utils.utils.command_helpers import safe_execute_sync\n\n@safe_execute_sync(ConfigError, ErrorCodes.CONFIG_FILE_ERROR)\ndef config_action() -&gt; None:\n    # Command implementation\n    pass\n</code></pre> <p>This approach ensures: - Consistent error messages - Proper error categorization - Helpful diagnostic information - Clear suggestions for resolution</p>"},{"location":"api/commands/#web-command","title":"Web Command","text":"<p>The web command interfaces with Perplexity AI to provide real-time web search capabilities.</p>"},{"location":"api/commands/#implementation","title":"Implementation","text":"<pre><code># commands/web/command.py\n@click.command()\n@click.argument(\"query\", nargs=-1, required=True)\n@click.option(\n    \"--model\",\n    type=click.Choice(MODELS),\n    help=\"Override the model specified in config\",\n)\ndef web(query, model=None, focus=None, mode=None):\n    \"\"\"Query Perplexity AI with your question.\"\"\"\n    # Implementation\n</code></pre>"},{"location":"api/commands/#core-functionality","title":"Core Functionality","text":"<p>The web command: 1. Validates the API key using <code>get_api_key</code> 2. Configures the Perplexity client with appropriate settings 3. Streams the query to Perplexity AI 4. Formats and displays the response</p>"},{"location":"api/commands/#error-handling","title":"Error Handling","text":"<pre><code># commands/web/actions.py\nfrom cursor_utils.errors import ErrorCodes, WebError\nfrom cursor_utils.utils.command_helpers import safe_execute\nfrom cursor_utils.utils.api_helpers import get_api_key\n\n@safe_execute(WebError, ErrorCodes.WEB_QUERY_ERROR)\nasync def execute_web(query: str, model: Optional[str] = None, focus: Optional[str] = None, mode: Optional[str] = None) -&gt; None:\n    # Get API key\n    api_key = get_api_key(APIKeyType.PERPLEXITY, \"PERPLEXITY_API_KEY\")\n\n    # Configure client\n    client = PerplexityClient(api_key=api_key)\n\n    # Execute query\n    await client.query(query, model=model, focus=focus, mode=mode)\n</code></pre>"},{"location":"api/commands/#gemini-command","title":"Gemini Command","text":"<p>The Gemini command leverages Google's Gemini AI models for code generation and analysis.</p>"},{"location":"api/commands/#implementation_1","title":"Implementation","text":"<pre><code># commands/gemini/command.py\n@click.command()\n@click.argument(\"query\", nargs=-1, required=True)\n@click.option(\n    \"--append\", \"-a\",\n    help=\"Append file content to the query\",\n)\ndef gemini(query, append=None):\n    \"\"\"Query Google Gemini with your question.\"\"\"\n    # Implementation\n</code></pre>"},{"location":"api/commands/#core-functionality_1","title":"Core Functionality","text":"<p>The Gemini command: 1. Validates the API key using <code>get_api_key</code> 2. Loads file content if specified with <code>--append</code> 3. Configures the Gemini client with appropriate settings 4. Sends the query to Gemini AI 5. Formats and displays the response</p>"},{"location":"api/commands/#error-handling_1","title":"Error Handling","text":"<pre><code># commands/gemini/actions.py\nfrom cursor_utils.errors import ErrorCodes, GeminiError\nfrom cursor_utils.utils.command_helpers import safe_execute\nfrom cursor_utils.utils.api_helpers import get_api_key\n\n@safe_execute(GeminiError, ErrorCodes.GEMINI_API_ERROR)\nasync def execute_gemini(query: str, file_path: Optional[str] = None) -&gt; None:\n    # Get API key\n    api_key = get_api_key(APIKeyType.GEMINI, \"GEMINI_API_KEY\")\n\n    # Load file content if specified\n    file_content = None\n    if file_path:\n        with open(file_path, \"r\") as f:\n            file_content = f.read()\n\n    # Configure client\n    client = GeminiClient(api_key=api_key)\n\n    # Execute query\n    await client.query(query, context=file_content)\n</code></pre>"},{"location":"api/commands/#repo-command","title":"Repo Command","text":"<p>The repo command analyzes GitHub repositories to provide intelligent insights.</p>"},{"location":"api/commands/#implementation_2","title":"Implementation","text":"<pre><code># commands/repo/command.py\n@click.command()\n@click.argument(\"repo_url\", required=True)\n@click.argument(\"query\", nargs=-1, required=True)\n@click.option(\n    \"--branch\",\n    help=\"Specify a branch to analyze\",\n)\ndef repo(repo_url, query, branch=None):\n    \"\"\"Analyze a GitHub repository.\"\"\"\n    # Implementation\n</code></pre>"},{"location":"api/commands/#core-functionality_2","title":"Core Functionality","text":"<p>The repo command: 1. Clones the repository to a temporary directory 2. Analyzes the repository structure 3. Ranks files by importance using <code>FileRanker</code> 4. Sends the query and ranked files to Gemini AI 5. Formats and displays the response</p>"},{"location":"api/commands/#error-handling_2","title":"Error Handling","text":"<pre><code># commands/repo/actions.py\nfrom cursor_utils.errors import ErrorCodes, RepoError\nfrom cursor_utils.utils.command_helpers import safe_execute\nfrom cursor_utils.utils.file_rank_algo import FileRanker\n\n@safe_execute(RepoError, ErrorCodes.REPO_CLONE_ERROR)\nasync def execute_repo(repo_url: str, query: str, branch: Optional[str] = None) -&gt; None:\n    # Clone repository\n    repo_path = await clone_repository(repo_url, branch)\n\n    # Analyze repository\n    files = analyze_repository(repo_path)\n\n    # Rank files\n    ranker = FileRanker()\n    ranked_files = ranker.rank_files(files)\n\n    # Execute query\n    await execute_query(query, ranked_files)\n</code></pre>"},{"location":"api/commands/#project-command","title":"Project Command","text":"<p>The project command analyzes local projects to provide intelligent insights.</p>"},{"location":"api/commands/#implementation_3","title":"Implementation","text":"<pre><code># commands/project/command.py\n@click.command()\n@click.argument(\"query\", nargs=-1, required=True)\n@click.option(\n    \"--path\",\n    help=\"Specify a project path to analyze\",\n)\ndef project(query, path=None):\n    \"\"\"Analyze a local project.\"\"\"\n    # Implementation\n</code></pre>"},{"location":"api/commands/#core-functionality_3","title":"Core Functionality","text":"<p>The project command: 1. Analyzes the project structure 2. Ranks files by importance using <code>FileRanker</code> 3. Sends the query and ranked files to Gemini AI 4. Formats and displays the response</p>"},{"location":"api/commands/#error-handling_3","title":"Error Handling","text":"<pre><code># commands/project/actions.py\nfrom cursor_utils.errors import ErrorCodes, ProjectError\nfrom cursor_utils.utils.command_helpers import safe_execute\nfrom cursor_utils.utils.file_rank_algo import FileRanker\n\n@safe_execute(ProjectError, ErrorCodes.PROJECT_ANALYZE_ERROR)\nasync def execute_project(query: str, path: Optional[str] = None) -&gt; None:\n    # Determine project path\n    project_path = path or os.getcwd()\n\n    # Analyze project\n    files = analyze_project(project_path)\n\n    # Rank files\n    ranker = FileRanker()\n    ranked_files = ranker.rank_files(files)\n\n    # Execute query\n    await execute_query(query, ranked_files)\n</code></pre>"},{"location":"api/commands/#github-command","title":"GitHub Command","text":"<p>The GitHub command provides advanced GitHub repository management capabilities.</p>"},{"location":"api/commands/#implementation_4","title":"Implementation","text":"<pre><code># commands/github/command.py\n@click.group()\ndef github():\n    \"\"\"GitHub repository management.\"\"\"\n    pass\n\n@github.command()\n@click.argument(\"owner_repo\", required=True)\ndef analyze(owner_repo):\n    \"\"\"Analyze a GitHub repository.\"\"\"\n    # Implementation\n\n@github.command()\n@click.argument(\"name\", required=True)\n@click.option(\n    \"--private/--public\",\n    default=True,\n    help=\"Create a private repository\",\n)\ndef setup(name, private):\n    \"\"\"Set up a new GitHub repository.\"\"\"\n    # Implementation\n</code></pre>"},{"location":"api/commands/#core-functionality_4","title":"Core Functionality","text":"<p>The GitHub command: 1. Validates the GitHub token using <code>get_api_key</code> 2. Performs the requested GitHub operation 3. Formats and displays the response</p>"},{"location":"api/commands/#error-handling_4","title":"Error Handling","text":"<pre><code># commands/github/actions.py\nfrom cursor_utils.errors import ErrorCodes, GitHubError\nfrom cursor_utils.utils.command_helpers import safe_execute\nfrom cursor_utils.utils.api_helpers import get_api_key\n\n@safe_execute(GitHubError, ErrorCodes.GITHUB_API_ERROR)\nasync def execute_github_analyze(owner_repo: str) -&gt; None:\n    # Get GitHub token\n    token = get_api_key(APIKeyType.GITHUB, \"GITHUB_TOKEN\")\n\n    # Configure client\n    client = GitHubClient(token=token)\n\n    # Execute analysis\n    await client.analyze_repository(owner_repo)\n</code></pre>"},{"location":"api/commands/#config-command","title":"Config Command","text":"<p>The config command manages settings and API keys.</p>"},{"location":"api/commands/#implementation_5","title":"Implementation","text":"<pre><code># commands/config/command.py\n@click.group()\ndef config():\n    \"\"\"Configuration management.\"\"\"\n    pass\n\n@config.command()\n@click.option(\n    \"--show\",\n    is_flag=True,\n    help=\"Show current configuration\",\n)\ndef api_keys(show):\n    \"\"\"Manage API keys.\"\"\"\n    # Implementation\n</code></pre>"},{"location":"api/commands/#core-functionality_5","title":"Core Functionality","text":"<p>The config command: 1. Loads and validates configuration 2. Performs the requested configuration operation 3. Saves configuration changes</p>"},{"location":"api/commands/#error-handling_5","title":"Error Handling","text":"<pre><code># commands/config/actions.py\nfrom cursor_utils.errors import ErrorCodes, ConfigError\nfrom cursor_utils.utils.command_helpers import safe_execute_sync\nfrom cursor_utils.utils.config_helpers import load_config, save_config\n\n@safe_execute_sync(ConfigError, ErrorCodes.CONFIG_FILE_ERROR)\ndef execute_config_api_keys(show: bool = False) -&gt; None:\n    # Load configuration\n    config = load_config(manager, \"api_keys\")\n\n    # Show configuration if requested\n    if show:\n        display_config(config)\n        return\n\n    # Update configuration\n    updated_config = update_api_keys(config)\n\n    # Save configuration\n    save_config(manager, \"api_keys\", updated_config)\n</code></pre>"},{"location":"api/commands/#install-command","title":"Install Command","text":"<p>The install command initializes Cursor Utils in a project.</p>"},{"location":"api/commands/#implementation_6","title":"Implementation","text":"<pre><code># commands/install/command.py\n@click.command()\n@click.option(\n    \"--force\",\n    is_flag=True,\n    help=\"Force installation even if already installed\",\n)\ndef install(force):\n    \"\"\"Initialize Cursor Utils in the current directory.\"\"\"\n    # Implementation\n</code></pre>"},{"location":"api/commands/#core-functionality_6","title":"Core Functionality","text":"<p>The install command: 1. Checks if Cursor Utils is already installed 2. Creates necessary configuration files 3. Sets up default templates 4. Guides the user through API key configuration</p>"},{"location":"api/commands/#error-handling_6","title":"Error Handling","text":"<pre><code># commands/install/actions.py\nfrom cursor_utils.errors import ErrorCodes, InstallError\nfrom cursor_utils.utils.command_helpers import safe_execute_sync\n\n@safe_execute_sync(InstallError, ErrorCodes.INSTALL_ALREADY_INSTALLED)\ndef execute_install(force: bool = False) -&gt; None:\n    # Check if already installed\n    if is_installed() and not force:\n        raise ValueError(\"Cursor Utils is already installed\")\n\n    # Create configuration files\n    create_config_files()\n\n    # Set up templates\n    setup_templates()\n\n    # Guide through API key configuration\n    configure_api_keys()\n</code></pre>"},{"location":"api/commands/#update-command","title":"Update Command","text":"<p>The update command updates Cursor Utils to the latest version.</p>"},{"location":"api/commands/#implementation_7","title":"Implementation","text":"<pre><code># commands/update/command.py\n@click.command()\ndef update():\n    \"\"\"Update Cursor Utils to the latest version.\"\"\"\n    # Implementation\n</code></pre>"},{"location":"api/commands/#core-functionality_7","title":"Core Functionality","text":"<p>The update command: 1. Checks for new versions 2. Backs up configuration 3. Updates the package 4. Migrates configuration if needed 5. Verifies the updated installation</p>"},{"location":"api/commands/#error-handling_7","title":"Error Handling","text":"<pre><code># commands/update/actions.py\nfrom cursor_utils.errors import ErrorCodes, UpdateError\nfrom cursor_utils.utils.command_helpers import safe_execute_sync\n\n@safe_execute_sync(UpdateError, ErrorCodes.UPDATE_FAILED)\ndef execute_update() -&gt; None:\n    # Check for new versions\n    new_version = check_for_updates()\n\n    # Back up configuration\n    backup_configuration()\n\n    # Update package\n    update_package(new_version)\n\n    # Migrate configuration\n    migrate_configuration()\n\n    # Verify installation\n    verify_installation()\n</code></pre>"},{"location":"api/commands/#best-practices-for-command-implementation","title":"Best Practices for Command Implementation","text":"<p>When implementing commands:</p> <ol> <li>Use standardized error handling:</li> <li>Use <code>safe_execute</code> for async functions</li> <li>Use <code>safe_execute_sync</code> for synchronous functions</li> <li> <p>Provide appropriate error classes and codes</p> </li> <li> <p>Centralize API key management:</p> </li> <li>Use <code>get_api_key</code> to retrieve API keys</li> <li>Use <code>validate_api_key</code> to validate API keys</li> <li> <p>Handle missing or invalid keys gracefully</p> </li> <li> <p>Simplify configuration handling:</p> </li> <li>Use <code>ensure_config</code> to validate and apply defaults</li> <li>Use <code>load_config</code> to load configuration sections</li> <li> <p>Use <code>save_config</code> to save configuration changes</p> </li> <li> <p>Follow consistent command structure:</p> </li> <li>Define command interface in <code>command.py</code></li> <li>Implement core functionality in <code>actions.py</code></li> <li>Manage command state in <code>manager.py</code></li> <li>Export command from <code>__init__.py</code> </li> </ol>"},{"location":"api/config/","title":"Configuration System Reference","text":"<p>This reference provides detailed information about the Cursor Utils configuration system, including the implementation architecture, configuration storage, and API key management.</p>"},{"location":"api/config/#configuration-architecture","title":"Configuration Architecture","text":"<p>Cursor Utils uses a hierarchical configuration system with multiple sources of configuration values:</p> <ol> <li>Default values - Built-in defaults for all settings</li> <li>Configuration file - User-defined settings in YAML format</li> <li>Environment variables - System-level configuration</li> <li>Command-line arguments - Run-time overrides</li> </ol> <p>The configuration system follows a cascading priority model where command-line arguments override environment variables, which override the configuration file, which override defaults.</p>"},{"location":"api/config/#implementation-details","title":"Implementation Details","text":"<p>The configuration system is implemented in <code>cursor_utils/config.py</code> with the <code>Config</code> class as the primary interface:</p> <pre><code>class Config:\n    \"\"\"Manages configuration and API keys.\"\"\"\n\n    def __init__(self) -&gt; None:\n        \"\"\"Initialize configuration manager.\"\"\"\n        self.console = Console()\n        self.env_file = Path.cwd() / \".env\"\n        self.config_dir = Path.cwd() / \"config\"\n        self.yaml_config = Path.cwd() / \"cursor-utils.yaml\"\n        self.config_path = self.yaml_config\n\n        # Ensure required files and directories exist\n        self._ensure_env_file()\n        self._ensure_config_dir()\n        self._load_env()\n\n        # Load configuration\n        self.config = self.load_config()\n</code></pre> <p>The <code>APIKeyConfig</code> class handles API key validation and storage:</p> <pre><code>@dataclass\nclass APIKeyConfig:\n    \"\"\"Configuration for an API key.\"\"\"\n\n    key_type: APIKeyType\n    value: Optional[str] = None\n    is_set: bool = False\n</code></pre>"},{"location":"api/config/#configuration-loading-process","title":"Configuration Loading Process","text":"<p>The configuration loading process follows these steps:</p> <ol> <li>Check for default configuration template</li> <li>Look for user configuration file</li> <li>Load and parse the configuration</li> <li>Validate configuration structure</li> <li>Apply type coercion to ensure correct types</li> <li>Set default values for missing fields</li> </ol>"},{"location":"api/config/#configuration-file","title":"Configuration File","text":"<p>Cursor Utils stores its configuration in <code>cursor-utils.yaml</code> in the current working directory. Here's a complete example configuration file with all available options:</p> <pre><code># Cursor Utils configuration\nversion: \"0.1.0\"\n\n# General settings\nsettings:\n  # Enable debug mode for verbose logging\n  debug: false\n\n  # Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)\n  log_level: \"INFO\"\n\n# Web/Perplexity settings\nweb:\n  # Model to use for Perplexity queries (sonar, sonar-pro, sonar-reasoning, sonar-pro-reasoning)\n  model: \"sonar\"\n\n  # Response mode (copilot, concise)\n  mode: \"copilot\"\n\n  # Search focus (internet, scholar, writing, wolfram, youtube, reddit)\n  search_focus: \"internet\"\n\n  # Enable streaming responses\n  stream: true\n\n# Gemini settings\ngemini:\n  # Gemini model to use\n  model: \"gemini-pro\"\n\n  # Maximum tokens to generate\n  max_output_tokens: 8000\n\n  # Temperature for generation (0.0-1.0)\n  temperature: 0.7\n\n  # Top-p sampling parameter (0.0-1.0)\n  top_p: 0.95\n\n  # Top-k sampling parameter\n  top_k: 40\n\n# GitHub settings\ngithub:\n  # Source for GitHub token (env or config)\n  token_source: \"env\"\n\n  # Default GitHub owner/organization\n  default_owner: \"\"\n\n  # Default GitHub repository\n  default_repo: \"\"\n\n  # Directory for GitHub templates\n  template_dir: \"~/.cursor-utils/github-templates\"\n</code></pre>"},{"location":"api/config/#api-key-management","title":"API Key Management","text":"<p>Cursor Utils manages API keys securely using the following methods:</p>"},{"location":"api/config/#api-key-types","title":"API Key Types","text":"<pre><code>class APIKeyType(str, Enum):\n    \"\"\"Supported API key types.\"\"\"\n\n    GEMINI = \"GEMINI_API_KEY\"\n    PERPLEXITY = \"PERPLEXITY_API_KEY\"\n    GITHUB = \"GITHUB_TOKEN\"\n</code></pre>"},{"location":"api/config/#api-key-storage","title":"API Key Storage","text":"<p>API keys are stored primarily in environment variables, with support for:</p> <ol> <li>Environment variables - Direct access to system environment variables</li> <li><code>.env</code> file - Local environment variable storage</li> <li>Secure keyring - System keyring integration (if available)</li> </ol> <p>API keys are never stored in plain text in the configuration file for security reasons.</p>"},{"location":"api/config/#api-key-validation","title":"API Key Validation","text":"<p>API keys are validated before use to ensure they are:</p> <ol> <li>Properly formatted</li> <li>Not expired</li> <li>Have correct permissions</li> </ol> <p>The validation process varies by API provider:</p> <pre><code>def validate_api_key(key_type: APIKeyType, value: str) -&gt; bool:\n    \"\"\"\n    Validate an API key.\n\n    Args:\n        key_type: Type of API key\n        value: API key value\n\n    Returns:\n        True if valid, False otherwise\n    \"\"\"\n    if not value:\n        return False\n\n    if key_type == APIKeyType.PERPLEXITY:\n        # Perplexity keys are 32 character alphanumeric strings\n        return bool(re.match(r'^[A-Za-z0-9]{32}$', value))\n    elif key_type == APIKeyType.GEMINI:\n        # Gemini keys typically start with 'AI' and are 39 characters\n        return bool(re.match(r'^AI[A-Za-z0-9_-]{37}$', value))\n    elif key_type == APIKeyType.GITHUB:\n        # GitHub tokens are 40 character hexadecimal strings\n        # or new fine-grained tokens with 'github_pat_' prefix\n        return bool(re.match(r'^(ghp_[A-Za-z0-9]{36}|github_pat_[A-Za-z0-9_]{82})$', value))\n\n    return False\n</code></pre>"},{"location":"api/config/#environment-variables","title":"Environment Variables","text":"<p>Cursor Utils recognizes the following environment variables:</p> Environment Variable Description Default <code>PERPLEXITY_API_KEY</code> API key for Perplexity AI None <code>GEMINI_API_KEY</code> API key for Google Gemini None <code>GITHUB_TOKEN</code> GitHub personal access token None <code>CURSOR_UTILS_DEBUG</code> Enable debug mode <code>False</code> <code>CURSOR_UTILS_LOG_LEVEL</code> Set logging level <code>INFO</code> <code>CURSOR_UTILS_CONFIG_PATH</code> Custom config file path <code>./cursor-utils.yaml</code>"},{"location":"api/config/#configuration-api","title":"Configuration API","text":""},{"location":"api/config/#basic-usage","title":"Basic Usage","text":"<pre><code>from cursor_utils.config import Config\n\n# Initialize configuration\nconfig = Config()\n\n# Get a configuration value with a default fallback\ndebug_mode = config.get(\"settings.debug\", default=False)\n\n# Set a configuration value\nconfig.set(\"web.model\", \"sonar-pro\")\n\n# Save changes to the configuration file\nconfig.save()\n</code></pre>"},{"location":"api/config/#api-key-management_1","title":"API Key Management","text":"<pre><code>from cursor_utils.config import Config, APIKeyType\n\n# Initialize configuration\nconfig = Config()\n\n# Get an API key\nperplexity_key = config.get_api_key(APIKeyType.PERPLEXITY)\n\n# Set an API key (stores in environment or .env file)\nconfig.set_api_key(APIKeyType.GEMINI, \"YOUR_API_KEY\")\n\n# Check if API key is valid\nis_valid = config.validate_api_key(APIKeyType.GITHUB, \"github_pat_...\")\n</code></pre>"},{"location":"api/config/#advanced-configuration","title":"Advanced Configuration","text":"<pre><code>from cursor_utils.config import Config\n\n# Initialize configuration\nconfig = Config()\n\n# Get all Gemini settings\ngemini_config = config.get_section(\"gemini\")\n\n# Update multiple settings\nconfig.update({\n    \"gemini.temperature\": 0.5,\n    \"gemini.max_output_tokens\": 4000\n})\n\n# Reset a section to defaults\nconfig.reset_section(\"web\")\n</code></pre>"},{"location":"api/config/#command-line-interface","title":"Command Line Interface","text":"<p>The configuration system is accessible through the <code>config</code> command:</p> <pre><code># Show current configuration\ncursor-utils config show\n\n# Configure API keys\ncursor-utils config api_keys\n\n# Set a configuration value\ncursor-utils config set web.model sonar-pro\n\n# Reset to defaults\ncursor-utils config reset gemini\n</code></pre>"},{"location":"api/config/#configuration-migration","title":"Configuration Migration","text":"<p>When the configuration version changes, Cursor Utils automatically migrates the configuration:</p> <pre><code>def migrate_config(config: dict, current_version: str, target_version: str) -&gt; dict:\n    \"\"\"\n    Migrate configuration from current version to target version.\n\n    Args:\n        config: Current configuration\n        current_version: Current version\n        target_version: Target version\n\n    Returns:\n        Migrated configuration\n    \"\"\"\n    # Migration logic here\n    return config\n</code></pre>"},{"location":"api/config/#custom-configuration-options","title":"Custom Configuration Options","text":"<p>Users can add custom configuration options that aren't predefined:</p> <pre><code># Add a custom option\nconfig.set(\"custom_options.my_setting\", \"my_value\")\n\n# Get a custom option\nvalue = config.get(\"custom_options.my_setting\", default=\"default_value\")\n</code></pre>"},{"location":"api/config/#configuration-validation","title":"Configuration Validation","text":"<p>Configuration is validated to ensure it's properly structured:</p> <pre><code>def validate_config(config: dict) -&gt; tuple[bool, list[str]]:\n    \"\"\"\n    Validate configuration structure.\n\n    Args:\n        config: Configuration to validate\n\n    Returns:\n        Tuple of (is_valid, error_messages)\n    \"\"\"\n    errors = []\n\n    # Required sections\n    if \"settings\" not in config:\n        errors.append(\"Missing 'settings' section\")\n\n    # Type checking\n    if \"settings\" in config and not isinstance(config[\"settings\"], dict):\n        errors.append(\"'settings' must be a dictionary\")\n\n    # Value validation\n    if \"web\" in config and \"model\" in config[\"web\"]:\n        if config[\"web\"][\"model\"] not in [\"sonar\", \"sonar-pro\", \"sonar-reasoning\", \"sonar-pro-reasoning\"]:\n            errors.append(f\"Invalid web model: {config['web']['model']}\")\n\n    return len(errors) == 0, errors\n</code></pre>"},{"location":"api/config/#best-practices","title":"Best Practices","text":"<ol> <li>Use the API: Always use the Config class instead of direct dictionary access</li> <li>Default Values: Always provide default values when getting configuration</li> <li>Type Checking: Validate types when processing configuration values</li> <li>Validate Early: Check configuration at startup to catch errors early</li> <li>Handle Errors: Gracefully handle missing or invalid configuration</li> <li>Security: Never store sensitive API keys in the configuration file</li> <li>Migration: Provide migration paths for configuration changes</li> </ol>"},{"location":"api/config/#configuration-options","title":"Configuration Options","text":""},{"location":"api/config/#webperplexity-options","title":"Web/Perplexity Options","text":"Option Description Default <code>perplexity_api_key</code> API key for Perplexity - <code>perplexity_model</code> Perplexity model to use <code>sonar</code> <code>perplexity_mode</code> Mode for responses <code>copilot</code> <code>perplexity_focus</code> Search focus <code>internet</code>"},{"location":"api/config/#gemini-options","title":"Gemini Options","text":"Option Description Default <code>gemini_api_key</code> API key for Google Gemini - <code>gemini_model</code> Gemini model to use <code>gemini-2.0-pro-exp-02-05</code> <code>gemini_max_tokens</code> Maximum tokens for responses 8000"},{"location":"api/config/#github-options","title":"GitHub Options","text":"Option Description Default <code>github_token</code> GitHub personal access token - <code>github_default_owner</code> Default GitHub owner/organization - <code>github_default_repo</code> Default GitHub repository -"},{"location":"api/config/#managing-configuration","title":"Managing Configuration","text":""},{"location":"api/config/#using-the-cli","title":"Using the CLI","text":"<pre><code># Show current configuration\ncursor-utils config show\n\n# Set a configuration value\ncursor-utils config set perplexity_api_key YOUR_API_KEY\n\n# Reset a configuration value\ncursor-utils config reset perplexity_model\n</code></pre>"},{"location":"api/config/#environment-variables_1","title":"Environment Variables","text":"<p>Configuration can also be provided via environment variables:</p> <ul> <li><code>PERPLEXITY_API_KEY</code></li> <li><code>GEMINI_API_KEY</code></li> <li><code>GITHUB_TOKEN</code> </li> </ul>"},{"location":"api/extension/","title":"Extending Cursor Utils","text":"<p>This guide provides detailed information on how to extend Cursor Utils with new commands, extend existing functionality, and integrate with the core architecture.</p>"},{"location":"api/extension/#command-architecture","title":"Command Architecture","text":"<p>Cursor Utils follows a modular command architecture that makes it easy to add new functionality:</p> <pre><code>cursor_utils/commands/\n\u251c\u2500\u2500 __init__.py           # Command registry\n\u251c\u2500\u2500 base.py               # Command base class\n\u251c\u2500\u2500 command_template/     # Template for new commands\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 command.py        # Command implementation\n\u2502   \u2514\u2500\u2500 models.py         # Command data models\n\u2514\u2500\u2500 your_command/         # Your new command\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 command.py\n    \u2514\u2500\u2500 models.py\n</code></pre>"},{"location":"api/extension/#command-implementation-pattern","title":"Command Implementation Pattern","text":"<p>Each command in Cursor Utils follows a standard implementation pattern:</p>"},{"location":"api/extension/#1-command-class","title":"1. Command Class","text":"<p>The command class handles the main functionality and CLI interface:</p> <pre><code>from typing import Optional, List, Dict, Any\nfrom pathlib import Path\nfrom rich.console import Console\n\nfrom cursor_utils.commands.base import BaseCommand\nfrom cursor_utils.config import Config\nfrom .models import YourCommandOptions\n\n\nclass YourCommand(BaseCommand):\n    \"\"\"\n    Your command description.\n\n    This command handles [describe what your command does].\n    \"\"\"\n\n    name = \"your_command\"  # Command name used in CLI\n    description = \"Description of your command\"  # Used in help text\n\n    def __init__(self) -&gt; None:\n        \"\"\"Initialize your command.\"\"\"\n        super().__init__()\n        self.console = Console()\n        self.config = Config()\n\n    def setup_parser(self, parser) -&gt; None:\n        \"\"\"\n        Configure the command line argument parser.\n\n        Args:\n            parser: The argument parser to configure\n        \"\"\"\n        # Add command-specific arguments\n        parser.add_argument(\n            \"--option\",\n            help=\"Description of option\",\n            default=\"default_value\",\n        )\n\n        # Add subcommands if needed\n        subparsers = parser.add_subparsers(dest=\"subcommand\")\n\n        # Example subcommand\n        sub_cmd = subparsers.add_parser(\"sub\", help=\"Subcommand help\")\n        sub_cmd.add_argument(\"--sub-option\", help=\"Subcommand option\")\n\n    def run(self, options: Dict[str, Any]) -&gt; int:\n        \"\"\"\n        Run the command with the provided options.\n\n        Args:\n            options: Command options parsed from CLI arguments\n\n        Returns:\n            Exit code (0 for success, non-zero for failure)\n        \"\"\"\n        # Convert raw options to typed options model\n        opts = YourCommandOptions(**options)\n\n        # Implement command logic\n        try:\n            # Your command implementation\n            self.console.print(f\"[bold green]Running your command with {opts}[/]\")\n\n            # Handle subcommands\n            if opts.subcommand == \"sub\":\n                return self._handle_subcommand(opts)\n\n            # Main command logic\n            result = self._process(opts)\n\n            self.console.print(\"[bold green]Command completed successfully![/]\")\n            return 0\n        except Exception as e:\n            self.console.print(f\"[bold red]Error executing command: {str(e)}[/]\")\n            if self.config.get(\"settings.debug\", False):\n                import traceback\n                self.console.print(traceback.format_exc())\n            return 1\n\n    def _process(self, options: YourCommandOptions) -&gt; Any:\n        \"\"\"\n        Internal method for processing the command.\n\n        Args:\n            options: Command options\n\n        Returns:\n            Command result\n        \"\"\"\n        # Implement your command's core functionality\n        pass\n\n    def _handle_subcommand(self, options: YourCommandOptions) -&gt; int:\n        \"\"\"\n        Handle subcommand execution.\n\n        Args:\n            options: Command options\n\n        Returns:\n            Exit code\n        \"\"\"\n        # Implement subcommand logic\n        self.console.print(f\"Running subcommand with {options.sub_option}\")\n        return 0\n</code></pre>"},{"location":"api/extension/#2-command-options-model","title":"2. Command Options Model","text":"<p>Define a Pydantic model to represent the command's options:</p> <pre><code>from typing import Optional, List, Dict, Any\nfrom enum import Enum\nfrom pydantic import BaseModel, Field\n\n\nclass SubcommandType(str, Enum):\n    \"\"\"Subcommand types.\"\"\"\n\n    SUB = \"sub\"\n    # Add other subcommands\n\n\nclass YourCommandOptions(BaseModel):\n    \"\"\"Options for your command.\"\"\"\n\n    # Basic options\n    option: str = Field(\n        default=\"default_value\",\n        description=\"Description of the option\",\n    )\n\n    # Subcommand handling\n    subcommand: Optional[SubcommandType] = Field(\n        default=None,\n        description=\"Subcommand to execute\",\n    )\n\n    # Subcommand options\n    sub_option: Optional[str] = Field(\n        default=None,\n        description=\"Option for sub subcommand\",\n    )\n\n    class Config:\n        \"\"\"Pydantic configuration.\"\"\"\n\n        extra = \"ignore\"  # Ignore extra fields from CLI parser\n</code></pre>"},{"location":"api/extension/#3-command-registration","title":"3. Command Registration","text":"<p>Register your command in <code>cursor_utils/commands/__init__.py</code>:</p> <pre><code>from .your_command.command import YourCommand\n\n# Register commands\nCOMMANDS = {\n    # ... existing commands ...\n    \"your_command\": YourCommand,\n}\n</code></pre>"},{"location":"api/extension/#testing-your-command","title":"Testing Your Command","text":"<p>Create tests for your command in the <code>tests/commands/</code> directory:</p> <pre><code>import pytest\nfrom unittest.mock import patch, MagicMock\n\nfrom cursor_utils.commands.your_command.command import YourCommand\nfrom cursor_utils.commands.your_command.models import YourCommandOptions\n\n\nclass TestYourCommand:\n    \"\"\"Test suite for YourCommand.\"\"\"\n\n    def setup_method(self):\n        \"\"\"Set up test fixtures.\"\"\"\n        self.command = YourCommand()\n\n    def test_initialization(self):\n        \"\"\"Test command initialization.\"\"\"\n        assert self.command.name == \"your_command\"\n        assert self.command.description\n\n    def test_run_basic(self):\n        \"\"\"Test basic command execution.\"\"\"\n        options = {\"option\": \"test_value\"}\n\n        with patch.object(self.command, '_process') as mock_process:\n            result = self.command.run(options)\n\n            assert result == 0\n            mock_process.assert_called_once()\n\n    def test_subcommand(self):\n        \"\"\"Test subcommand execution.\"\"\"\n        options = {\n            \"subcommand\": \"sub\",\n            \"sub_option\": \"test_value\"\n        }\n\n        with patch.object(self.command, '_handle_subcommand') as mock_handler:\n            mock_handler.return_value = 0\n            result = self.command.run(options)\n\n            assert result == 0\n            mock_handler.assert_called_once()\n\n    def test_error_handling(self):\n        \"\"\"Test error handling during command execution.\"\"\"\n        options = {\"option\": \"test_value\"}\n\n        with patch.object(self.command, '_process') as mock_process:\n            mock_process.side_effect = ValueError(\"Test error\")\n\n            result = self.command.run(options)\n\n            assert result != 0\n</code></pre>"},{"location":"api/extension/#command-template","title":"Command Template","text":"<p>Cursor Utils includes a template for new commands that you can copy to get started quickly:</p> <pre><code>cp -r cursor_utils/commands/command_template cursor_utils/commands/your_command\n</code></pre> <p>Then edit the files to implement your command.</p>"},{"location":"api/extension/#integration-with-core-components","title":"Integration with Core Components","text":""},{"location":"api/extension/#configuration-integration","title":"Configuration Integration","text":"<p>To integrate with the configuration system:</p> <pre><code>from cursor_utils.config import Config\n\n# In your command class\ndef __init__(self) -&gt; None:\n    super().__init__()\n    self.config = Config()\n\n    # Access configuration values\n    self.debug = self.config.get(\"settings.debug\", False)\n\n    # Access command-specific configuration\n    self.cmd_config = self.config.get(f\"{self.name}\", {})\n\n    # Set default configuration\n    if f\"{self.name}\" not in self.config.config:\n        self.config.set(f\"{self.name}\", {\n            \"option1\": \"default1\",\n            \"option2\": \"default2\"\n        })\n        self.config.save()\n</code></pre>"},{"location":"api/extension/#api-key-management","title":"API Key Management","text":"<p>To integrate with the API key management system:</p> <pre><code>from cursor_utils.config import Config, APIKeyType\n\n# In your command class\ndef __init__(self) -&gt; None:\n    super().__init__()\n    self.config = Config()\n\n    # Define a new API key type if needed\n    # First update cursor_utils/config.py to add your API key type\n    # class APIKeyType(str, Enum):\n    #     ...\n    #     YOUR_API = \"YOUR_API_KEY\"\n\n    # Get an API key\n    self.api_key = self.config.get_api_key(APIKeyType.YOUR_API)\n\n    # Validate the API key\n    if not self.api_key or not self.config.validate_api_key(APIKeyType.YOUR_API, self.api_key):\n        raise ValueError(\"Invalid or missing API key. Please set it with 'cursor-utils config api_keys'\")\n</code></pre>"},{"location":"api/extension/#logging-integration","title":"Logging Integration","text":"<p>To integrate with the logging system:</p> <pre><code>import logging\nfrom cursor_utils.utils.logging import get_logger\n\n# In your command class\ndef __init__(self) -&gt; None:\n    super().__init__()\n\n    # Get a logger for your command\n    self.logger = get_logger(self.name)\n\n    # Log messages\n    self.logger.debug(\"Debug message\")\n    self.logger.info(\"Info message\")\n    self.logger.warning(\"Warning message\")\n    self.logger.error(\"Error message\")\n</code></pre>"},{"location":"api/extension/#progress-display","title":"Progress Display","text":"<p>To display progress for long-running operations:</p> <pre><code>from rich.progress import Progress, SpinnerColumn, TextColumn, BarColumn, TimeElapsedColumn\n\n# In your command method\ndef _process(self, options: YourCommandOptions) -&gt; Any:\n    \"\"\"Process the command with a progress bar.\"\"\"\n    with Progress(\n        SpinnerColumn(),\n        TextColumn(\"[bold blue]{task.description}\"),\n        BarColumn(),\n        TimeElapsedColumn(),\n        console=self.console,\n    ) as progress:\n        # Create a task\n        task = progress.add_task(\"Processing...\", total=100)\n\n        # Update progress\n        for i in range(100):\n            # Do some work\n            time.sleep(0.1)\n\n            # Update progress\n            progress.update(task, advance=1)\n\n        # Mark task as complete\n        progress.update(task, completed=100)\n</code></pre>"},{"location":"api/extension/#advanced-integration-patterns","title":"Advanced Integration Patterns","text":""},{"location":"api/extension/#web-api-integration","title":"Web API Integration","text":"<p>For commands that interact with web APIs:</p> <pre><code>import httpx\nfrom cursor_utils.utils.http import create_client\n\n# In your command method\nasync def _fetch_data(self, url: str, api_key: str) -&gt; Dict[str, Any]:\n    \"\"\"Fetch data from a web API.\"\"\"\n    async with create_client() as client:\n        headers = {\n            \"Authorization\": f\"Bearer {api_key}\",\n            \"Content-Type\": \"application/json\",\n        }\n\n        response = await client.get(url, headers=headers)\n        response.raise_for_status()\n\n        return response.json()\n</code></pre>"},{"location":"api/extension/#file-system-operations","title":"File System Operations","text":"<p>For commands that interact with the file system:</p> <pre><code>from pathlib import Path\nimport json\n\n# In your command method\ndef _save_results(self, results: Dict[str, Any], output_path: Path) -&gt; None:\n    \"\"\"Save results to a file.\"\"\"\n    # Ensure directory exists\n    output_path.parent.mkdir(parents=True, exist_ok=True)\n\n    # Write results\n    with open(output_path, \"w\") as f:\n        json.dump(results, f, indent=2)\n\n    self.console.print(f\"[green]Results saved to {output_path}[/]\")\n</code></pre>"},{"location":"api/extension/#command-composition","title":"Command Composition","text":"<p>For commands that use other commands:</p> <pre><code>from cursor_utils.commands import COMMANDS\n\n# In your command method\ndef _process(self, options: YourCommandOptions) -&gt; Any:\n    \"\"\"Process using other commands.\"\"\"\n    # Instantiate another command\n    other_cmd = COMMANDS[\"other_command\"]()\n\n    # Prepare options for the other command\n    other_options = {\n        \"option1\": \"value1\",\n        \"option2\": \"value2\",\n    }\n\n    # Run the other command\n    result = other_cmd.run(other_options)\n\n    # Check result\n    if result != 0:\n        raise ValueError(\"Failed to execute other command\")\n\n    # Continue with your command\n    return \"Success\"\n</code></pre>"},{"location":"api/extension/#best-practices-for-command-development","title":"Best Practices for Command Development","text":"<ol> <li>Follow the Command Pattern: Use the established command pattern for consistency</li> <li>Use Type Annotations: Always use proper type annotations for better maintainability</li> <li>Document Thoroughly: Document your command's purpose, options, and usage</li> <li>Handle Errors Gracefully: Catch and handle exceptions, provide useful error messages</li> <li>Use Configuration: Store command-specific configuration in the config system</li> <li>Write Tests: Write comprehensive tests for your command</li> <li>Support Debug Mode: Add detailed logging when debug mode is enabled</li> <li>Be User-Friendly: Provide helpful error messages and progress information</li> <li>Support Dry Run: For destructive operations, add a dry-run option</li> <li>Validate Input: Validate input options before processing</li> <li>Use Rich for Output: Use Rich for attractive console output</li> <li>Handle Signal Interrupts: Gracefully handle Ctrl+C and other interrupts</li> </ol>"},{"location":"api/extension/#command-line-interface-guidelines","title":"Command Line Interface Guidelines","text":"<p>When extending the CLI:</p> <ol> <li>Consistent Naming: Use kebab-case for subcommand and option names</li> <li>Descriptive Help: Provide clear help text for all options</li> <li>Sensible Defaults: Set reasonable default values for options</li> <li>Short and Long Options: Support both short (-o) and long (--option) forms</li> <li>Group Related Options: Use argument groups to organize options</li> <li>Validate Early: Validate command line arguments as early as possible</li> <li>Exit Codes: Return appropriate exit codes (0 for success, non-zero for failure)</li> </ol>"},{"location":"api/extension/#plugin-system","title":"Plugin System","text":"<p>For more advanced extensions, Cursor Utils supports a plugin system:</p> <pre><code>from cursor_utils.plugins import register_plugin, PluginMeta\n\n# Define your plugin\nclass YourPlugin(metaclass=PluginMeta):\n    \"\"\"Your plugin description.\"\"\"\n\n    name = \"your_plugin\"\n    version = \"0.1.0\"\n\n    def __init__(self):\n        \"\"\"Initialize your plugin.\"\"\"\n        pass\n\n    def initialize(self):\n        \"\"\"Initialize the plugin when Cursor Utils starts.\"\"\"\n        pass\n\n    def get_commands(self):\n        \"\"\"Return commands provided by this plugin.\"\"\"\n        from .commands import YourCommand\n        return {\"your_command\": YourCommand}\n\n    def cleanup(self):\n        \"\"\"Clean up resources when Cursor Utils exits.\"\"\"\n        pass\n\n# Register your plugin\nregister_plugin(YourPlugin)\n</code></pre>"},{"location":"api/extension/#event-system","title":"Event System","text":"<p>Cursor Utils includes an event system that allows commands to communicate:</p> <pre><code>from cursor_utils.events import EventBus, Event\n\n# Define an event\nclass YourEvent(Event):\n    \"\"\"Event fired when something happens.\"\"\"\n\n    def __init__(self, data: Dict[str, Any]):\n        \"\"\"Initialize the event.\"\"\"\n        self.data = data\n\n# In your command\ndef __init__(self) -&gt; None:\n    super().__init__()\n\n    # Get the event bus\n    self.event_bus = EventBus()\n\n    # Register an event handler\n    self.event_bus.subscribe(\"other_event\", self._handle_event)\n\ndef _handle_event(self, event: Event) -&gt; None:\n    \"\"\"Handle an event.\"\"\"\n    self.logger.debug(f\"Received event: {event}\")\n\ndef _process(self, options: YourCommandOptions) -&gt; Any:\n    \"\"\"Process and fire an event.\"\"\"\n    # Do processing\n\n    # Fire an event\n    self.event_bus.publish(YourEvent({\"result\": \"success\"}))\n</code></pre>"},{"location":"api/extension/#packaging-your-extension","title":"Packaging Your Extension","text":"<p>You can package your extension as a separate Python package:</p> <pre><code>your_cursor_extension/\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 src/\n\u2502   \u2514\u2500\u2500 your_cursor_extension/\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u251c\u2500\u2500 plugin.py       # Plugin definition\n\u2502       \u2514\u2500\u2500 commands/       # Your commands\n\u2514\u2500\u2500 tests/\n</code></pre> <p>Example <code>pyproject.toml</code>:</p> <pre><code>[build-system]\nrequires = [\"setuptools&gt;=61.0\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"your-cursor-extension\"\nversion = \"0.1.0\"\ndescription = \"Your extension for Cursor Utils\"\nauthors = [\n    {name = \"Your Name\", email = \"your.email@example.com\"},\n]\ndependencies = [\n    \"cursor-utils&gt;=0.1.0\",\n]\nrequires-python = \"&gt;=3.8\"\n\n[project.entry_points.cursor_utils_plugins]\nyour_plugin = \"your_cursor_extension.plugin:YourPlugin\"\n</code></pre>"},{"location":"api/extension/#cookiecutter-template","title":"Cookiecutter Template","text":"<p>Cursor Utils provides a Cookiecutter template for creating new commands and extensions:</p> <pre><code>pip install cookiecutter\ncookiecutter gh:cursor-utils/extension-template\n</code></pre> <p>This will guide you through creating a new extension with all the necessary files and structure.</p>"},{"location":"api/extension/#documentation","title":"Documentation","text":"<p>Always document your extension thoroughly:</p> <ol> <li>Command Help: Update the command's <code>description</code> and argument help text</li> <li>README: Create a README.md for your extension</li> <li>Examples: Provide usage examples</li> <li>Integration: Document how your extension integrates with other commands</li> <li>Configuration: Document configuration options</li> </ol>"},{"location":"api/extension/#contributing-back","title":"Contributing Back","text":"<p>If your extension would be useful to others, consider contributing it back to Cursor Utils:</p> <ol> <li>Fork the Cursor Utils repository</li> <li>Add your command or extension</li> <li>Add tests and documentation</li> <li>Submit a pull request</li> </ol> <p>See the Contributing Guide for more information. </p>"},{"location":"api/models/","title":"Data Models Reference","text":"<p>This reference provides detailed information about the data models used throughout Cursor Utils, including their implementation details and usage examples.</p>"},{"location":"api/models/#model-architecture","title":"Model Architecture","text":"<p>Cursor Utils uses TypedDict models and dataclasses for type-safe data handling across the application:</p> <pre><code>cursor_utils/\n\u251c\u2500\u2500 types.py             # TypedDict models for configuration and API responses\n\u251c\u2500\u2500 config.py            # Configuration dataclasses and enums\n\u2514\u2500\u2500 utils/\n    \u2514\u2500\u2500 file_rank_algo.py # File ranking TypedDict models\n</code></pre>"},{"location":"api/models/#type-models","title":"Type Models","text":"<p>The <code>types.py</code> file defines several TypedDict models for configuration and API responses:</p> <pre><code>from typing import Literal, TypedDict\nfrom typing_extensions import NotRequired\n\n# Model types\nModelType = Literal[\n    \"sonar\",\n    \"sonar-pro\",\n    \"sonar-reasoning\",\n    \"sonar-pro-reasoning\",\n]\n\nModeType = Literal[\n    \"concise\",\n    \"copilot\",\n]\n\nSearchFocusType = Literal[\n    \"internet\",\n    \"scholar\",\n    \"writing\",\n    \"wolfram\",\n    \"youtube\",\n    \"reddit\",\n]\n\n# Configuration dictionary type\nclass SettingsDict(TypedDict):\n    \"\"\"Type definition for settings configuration.\"\"\"\n    debug: bool\n    log_level: str\n\nclass WebConfig(TypedDict, total=True):\n    \"\"\"Type definition for web command configuration.\"\"\"\n    model: ModelType\n    mode: ModeType\n    search_focus: SearchFocusType\n\nclass GeminiConfig(TypedDict, total=True):\n    \"\"\"Type definition for Gemini command configuration.\"\"\"\n    model: str\n    max_output_tokens: int\n    temperature: float\n    top_p: float\n    top_k: int\n\nclass GitHubConfig(TypedDict, total=True):\n    \"\"\"Type definition for GitHub command configuration.\"\"\"\n    token_source: Literal[\"env\", \"config\"]\n    default_owner: str\n    default_repo: str\n    template_dir: str\n\nclass ConfigDict(TypedDict, total=True):\n    \"\"\"Type definition for configuration dictionary.\"\"\"\n    version: str\n    settings: SettingsDict\n    web: NotRequired[WebConfig]\n    gemini: NotRequired[GeminiConfig]\n    github: NotRequired[GitHubConfig]\n    custom_options: NotRequired[dict[str, str]]\n\n# Stream response type\nclass StreamResponse(TypedDict, total=True):\n    \"\"\"Type definition for stream response.\"\"\"\n    text: str\n    done: bool\n</code></pre>"},{"location":"api/models/#configuration-models","title":"Configuration Models","text":"<p>The <code>config.py</code> file defines several models for configuration management:</p>"},{"location":"api/models/#apikeytype-enum","title":"APIKeyType Enum","text":"<pre><code>class APIKeyType(str, Enum):\n    \"\"\"Supported API key types.\"\"\"\n\n    GEMINI = \"GEMINI_API_KEY\"\n    PERPLEXITY = \"PERPLEXITY_API_KEY\"\n    GITHUB = \"GITHUB_TOKEN\"\n\n    @property\n    def description(self) -&gt; str:\n        \"\"\"Get human-readable description of the API key.\"\"\"\n        return {\n            self.GEMINI: \"Google Gemini API Key\",\n            self.PERPLEXITY: \"Perplexity AI API Key\",\n            self.GITHUB: \"GitHub Personal Access Token\",\n        }[self]\n\n    @property\n    def feature_impact(self) -&gt; str:\n        \"\"\"Get description of features impacted if key is missing.\"\"\"\n        return {\n            self.GEMINI: \"AI code generation and contextual analysis features will be limited\",\n            self.PERPLEXITY: \"AI guided web search features will be unavailable\",\n            self.GITHUB: \"GitHub integration features will be unavailable\",\n        }[self]\n</code></pre>"},{"location":"api/models/#apikeyconfig-dataclass","title":"APIKeyConfig Dataclass","text":"<pre><code>@dataclass\nclass APIKeyConfig:\n    \"\"\"Configuration for an API key.\"\"\"\n\n    key_type: APIKeyType\n    value: Optional[str] = None\n    is_set: bool = False\n</code></pre>"},{"location":"api/models/#config-class","title":"Config Class","text":"<p>The <code>Config</code> class manages configuration and API keys:</p> <pre><code>class Config:\n    \"\"\"Manages configuration and API keys.\"\"\"\n\n    def __init__(self) -&gt; None:\n        \"\"\"Initialize configuration manager.\"\"\"\n        self.console = Console()\n        self.env_file = Path.cwd() / \".env\"\n        self.config_dir = Path.cwd() / \"config\"\n        self.yaml_config = Path.cwd() / \"cursor-utils.yaml\"\n        self.config_path = self.yaml_config\n\n        # Ensure required files and directories exist\n        self._ensure_env_file()\n        self._ensure_config_dir()\n        self._load_env()\n\n        # Load configuration\n        self.config = self.load_config()\n</code></pre>"},{"location":"api/models/#file-ranking-models","title":"File Ranking Models","text":"<p>The <code>file_rank_algo.py</code> file defines several TypedDict models for file information:</p> <pre><code>class BaseFileInfo(TypedDict):\n    \"\"\"Base file information with just the path.\"\"\"\n\n    path: str\n\n\nclass ProcessedFileInfo(BaseFileInfo):\n    \"\"\"Processed file information with additional metadata.\"\"\"\n\n    type: str\n    size: int\n    creation_time: float\n    importance_score: float\n\n\nclass FileInfo(TypedDict, total=False):\n    \"\"\"File information with optional fields.\"\"\"\n\n    path: str\n    type: NotRequired[str]\n    size: NotRequired[int]\n    creation_time: NotRequired[float]\n</code></pre>"},{"location":"api/models/#error-models","title":"Error Models","text":"<p>The <code>errors.py</code> file defines a hierarchy of error classes:</p> <pre><code>class CursorUtilsError(DiagnosticError):\n    \"\"\"Base diagnostic error class for all Cursor Utils errors.\"\"\"\n\n    docs_index = \"https://gweidart.github.io/cursor-utils/errors/{code}.md\"\n    style = DiagnosticStyle(\n        name=\"error\",\n        color=\"red\",\n        ascii_symbol=\"x\",\n        unicode_symbol=\"\u2717\",\n    )\n\n    def __init__(\n        self,\n        *,\n        message: str,\n        code: str,\n        causes: list[str],\n        hint_stmt: Optional[str] = None,\n    ) -&gt; None:\n        \"\"\"Initialize with documentation URL.\"\"\"\n        super().__init__(\n            message=message,\n            code=code,\n            causes=causes,\n            hint_stmt=hint_stmt,\n        )\n</code></pre>"},{"location":"api/models/#usage-examples","title":"Usage Examples","text":""},{"location":"api/models/#using-configuration-models","title":"Using Configuration Models","text":"<pre><code>from cursor_utils.config import Config, APIKeyType, APIKeyConfig\n\n# Initialize configuration\nconfig = Config()\n\n# Access configuration values\ndebug_mode = config.config[\"settings\"][\"debug\"]\nlog_level = config.config[\"settings\"][\"log_level\"]\n\n# Check if API key is set\ngemini_key = config.get_api_key(APIKeyType.GEMINI)\nif gemini_key:\n    print(f\"Gemini API key is set\")\nelse:\n    print(f\"Gemini API key is not set\")\n\n# Set API key\nconfig.set_api_key(APIKeyType.GEMINI, \"your-api-key-here\")\n</code></pre>"},{"location":"api/models/#using-type-models","title":"Using Type Models","text":"<pre><code>from cursor_utils.types import ConfigDict, WebConfig, GeminiConfig\n\n# Create configuration dictionary\nconfig: ConfigDict = {\n    \"version\": \"1.0.0\",\n    \"settings\": {\n        \"debug\": False,\n        \"log_level\": \"INFO\",\n    },\n    \"web\": {\n        \"model\": \"sonar-pro\",\n        \"mode\": \"copilot\",\n        \"search_focus\": \"internet\",\n    },\n    \"gemini\": {\n        \"model\": \"gemini-2.0-pro\",\n        \"max_output_tokens\": 1024,\n        \"temperature\": 0.7,\n        \"top_p\": 0.95,\n        \"top_k\": 40,\n    },\n}\n\n# Access configuration values with type safety\nweb_config: WebConfig = config[\"web\"]\ngemini_config: GeminiConfig = config[\"gemini\"]\n\nprint(f\"Web model: {web_config['model']}\")\nprint(f\"Gemini model: {gemini_config['model']}\")\n</code></pre>"},{"location":"api/models/#using-file-ranking-models","title":"Using File Ranking Models","text":"<pre><code>from cursor_utils.utils.file_rank_algo import FileRanker, FileInfo\n\n# Create list of files\nfiles: list[FileInfo] = [\n    {\"path\": \"file1.py\", \"size\": 1000, \"creation_time\": 1600000000},\n    {\"path\": \"file2.js\", \"size\": 2000, \"creation_time\": 1600001000},\n    {\"path\": \"file3.md\", \"size\": 500, \"creation_time\": 1600002000},\n    {\"path\": \"file4.py\", \"size\": 1500, \"creation_time\": 1600003000},\n]\n\n# Create ranker with custom weights\nranker = FileRanker(\n    type_weight=0.5,\n    size_weight=0.3,\n    time_weight=0.2,\n)\n\n# Rank files\nranked_files = ranker.rank_files(files)\n\n# Process results\nfor file in ranked_files:\n    print(f\"{file['path']}: {file['importance_score']:.4f}\")\n</code></pre>"},{"location":"api/models/#best-practices-for-using-models","title":"Best Practices for Using Models","text":"<ol> <li> <p>Use Type Annotations: Always use type annotations with the provided models for better type safety.</p> </li> <li> <p>Validate Configuration: Ensure configuration values are valid before using them.</p> </li> <li> <p>Handle Missing Values: Check for optional fields in TypedDict models before accessing them.</p> </li> <li> <p>Use Enums for Constants: Use the provided enums like <code>APIKeyType</code> for type-safe constants.</p> </li> <li> <p>Follow the Model Structure: Adhere to the structure defined by the models when creating new instances.</p> </li> <li> <p>Use Default Values: Provide sensible default values for optional fields.</p> </li> <li> <p>Document Model Extensions: If you extend the models, document the new fields and their purpose. </p> </li> </ol>"},{"location":"api/utils/","title":"Utilities Reference","text":"<p>This reference provides documentation on the utility modules used in Cursor Utils, focusing on the actual implementations present in the codebase.</p>"},{"location":"api/utils/#utility-architecture","title":"Utility Architecture","text":"<p>Cursor Utils has a comprehensive utility architecture with several key modules:</p> <pre><code>cursor_utils/utils/\n\u251c\u2500\u2500 __init__.py         # Exports utility functions\n\u251c\u2500\u2500 command_helpers.py  # Standardized error handling\n\u251c\u2500\u2500 api_helpers.py      # API key management\n\u251c\u2500\u2500 config_helpers.py   # Configuration utilities\n\u2514\u2500\u2500 file_rank_algo.py   # Repository analysis algorithm\n</code></pre> <p>The <code>__init__.py</code> file exports the key utility functions and classes:</p> <pre><code>from cursor_utils.utils.api_helpers import get_api_key, validate_api_key\nfrom cursor_utils.utils.command_helpers import safe_execute, safe_execute_sync\nfrom cursor_utils.utils.config_helpers import ensure_config, load_config, save_config\nfrom cursor_utils.utils.file_rank_algo import FileRanker\n\n__all__ = [\n    \"get_api_key\",\n    \"validate_api_key\",\n    \"safe_execute\",\n    \"safe_execute_sync\",\n    \"ensure_config\",\n    \"load_config\",\n    \"save_config\",\n    \"FileRanker\",\n]\n</code></pre>"},{"location":"api/utils/#command-helpers","title":"Command Helpers","text":"<p>The command helpers module (<code>cursor_utils/utils/command_helpers.py</code>) provides standardized error handling for commands.</p>"},{"location":"api/utils/#key-functions","title":"Key Functions","text":""},{"location":"api/utils/#safe_execute","title":"safe_execute","text":"<pre><code>def safe_execute(\n    error_class: Type[CursorUtilsError],\n    error_code: ErrorCodes,\n    message: Optional[str] = None,\n) -&gt; Callable[[Callable[P, Awaitable[T]]], Callable[P, Awaitable[T]]]:\n    \"\"\"\n    Decorator for async functions that provides standardized error handling.\n\n    Args:\n        error_class: The error class to use for exceptions\n        error_code: The error code to use for exceptions\n        message: Optional custom error message\n\n    Returns:\n        Decorated function with standardized error handling\n    \"\"\"\n</code></pre> <p>This decorator: 1. Wraps an async function with standardized error handling 2. Catches exceptions and converts them to appropriate error types 3. Provides consistent error messages and diagnostic information</p>"},{"location":"api/utils/#safe_execute_sync","title":"safe_execute_sync","text":"<pre><code>def safe_execute_sync(\n    error_class: Type[CursorUtilsError],\n    error_code: ErrorCodes,\n    message: Optional[str] = None,\n) -&gt; Callable[[Callable[P, R]], Callable[P, R]]:\n    \"\"\"\n    Decorator for synchronous functions that provides standardized error handling.\n\n    Args:\n        error_class: The error class to use for exceptions\n        error_code: The error code to use for exceptions\n        message: Optional custom error message\n\n    Returns:\n        Decorated function with standardized error handling\n    \"\"\"\n</code></pre> <p>This decorator: 1. Wraps a synchronous function with standardized error handling 2. Catches exceptions and converts them to appropriate error types 3. Provides consistent error messages and diagnostic information</p>"},{"location":"api/utils/#handle_command_error","title":"handle_command_error","text":"<pre><code>def handle_command_error(\n    error: Exception,\n    error_class: Type[CursorUtilsError],\n    error_code: ErrorCodes,\n    message: Optional[str] = None,\n) -&gt; NoReturn:\n    \"\"\"\n    Handle command errors with standardized error reporting.\n\n    Args:\n        error: The original exception\n        error_class: The error class to use\n        error_code: The error code to use\n        message: Optional custom error message\n\n    Raises:\n        CursorUtilsError: Standardized error with diagnostic information\n    \"\"\"\n</code></pre> <p>This function: 1. Converts exceptions to standardized error types 2. Adds diagnostic information and hints 3. Provides consistent error reporting</p>"},{"location":"api/utils/#usage-example","title":"Usage Example","text":"<pre><code>from cursor_utils.errors import ErrorCodes, WebError\nfrom cursor_utils.utils.command_helpers import safe_execute\n\n@safe_execute(WebError, ErrorCodes.WEB_QUERY_ERROR)\nasync def web_command(query: str) -&gt; None:\n    # Command implementation that might raise exceptions\n    response = await api_client.query(query)\n    if not response:\n        raise ValueError(\"Empty response from API\")\n    await process_response(response)\n</code></pre>"},{"location":"api/utils/#api-helpers","title":"API Helpers","text":"<p>The API helpers module (<code>cursor_utils/utils/api_helpers.py</code>) provides centralized API key management.</p>"},{"location":"api/utils/#key-functions_1","title":"Key Functions","text":""},{"location":"api/utils/#get_api_key","title":"get_api_key","text":"<pre><code>def get_api_key(key_type: APIKeyType, env_var: str) -&gt; str:\n    \"\"\"\n    Get API key with standardized error handling.\n\n    Args:\n        key_type: The type of API key to get\n        env_var: The environment variable name for the API key\n\n    Returns:\n        The API key string\n\n    Raises:\n        WebError: If the API key is not found or invalid\n    \"\"\"\n</code></pre> <p>This function: 1. Checks environment variables for API keys 2. Falls back to configuration file if not found in environment 3. Validates the API key format 4. Provides helpful error messages if the key is missing or invalid</p>"},{"location":"api/utils/#validate_api_key","title":"validate_api_key","text":"<pre><code>def validate_api_key(api_key: str, key_type: APIKeyType, env_var: str) -&gt; None:\n    \"\"\"\n    Validate API key with standardized error handling.\n\n    Args:\n        api_key: The API key to validate\n        key_type: The type of API key\n        env_var: The environment variable name for the API key\n\n    Raises:\n        WebError: If the API key is invalid\n    \"\"\"\n</code></pre> <p>This function: 1. Validates the API key format 2. Checks for common issues like empty keys or placeholder values 3. Provides helpful error messages for invalid keys</p>"},{"location":"api/utils/#usage-example_1","title":"Usage Example","text":"<pre><code>from cursor_utils.config import APIKeyType\nfrom cursor_utils.utils.api_helpers import get_api_key\n\n# Get Perplexity API key\napi_key = get_api_key(APIKeyType.PERPLEXITY, \"PERPLEXITY_API_KEY\")\n\n# Use the API key\nclient = PerplexityClient(api_key=api_key)\n</code></pre>"},{"location":"api/utils/#config-helpers","title":"Config Helpers","text":"<p>The config helpers module (<code>cursor_utils/utils/config_helpers.py</code>) provides simplified configuration handling.</p>"},{"location":"api/utils/#key-functions_2","title":"Key Functions","text":""},{"location":"api/utils/#ensure_config","title":"ensure_config","text":"<pre><code>def ensure_config(\n    manager: ConfigManager,\n    required_keys: list[str],\n    defaults: dict[str, Any],\n) -&gt; dict[str, Any]:\n    \"\"\"\n    Ensure configuration exists with standardized error handling.\n\n    Args:\n        manager: The configuration manager\n        required_keys: List of required configuration keys\n        defaults: Default values for configuration keys\n\n    Returns:\n        Configuration dictionary with all required keys\n\n    Raises:\n        ConfigError: If configuration cannot be loaded or validated\n    \"\"\"\n</code></pre> <p>This function: 1. Loads configuration from the manager 2. Validates that all required keys are present 3. Applies default values for missing keys 4. Provides helpful error messages for configuration issues</p>"},{"location":"api/utils/#load_config","title":"load_config","text":"<pre><code>def load_config(\n    manager: ConfigManager,\n    section: str,\n) -&gt; dict[str, Any]:\n    \"\"\"\n    Load configuration with standardized error handling.\n\n    Args:\n        manager: The configuration manager\n        section: The configuration section to load\n\n    Returns:\n        Configuration dictionary for the specified section\n\n    Raises:\n        ConfigError: If configuration cannot be loaded\n    \"\"\"\n</code></pre> <p>This function: 1. Loads configuration for a specific section 2. Handles missing sections gracefully 3. Provides helpful error messages for configuration issues</p>"},{"location":"api/utils/#save_config","title":"save_config","text":"<pre><code>def save_config(\n    manager: ConfigManager,\n    section: str,\n    config: dict[str, Any],\n) -&gt; None:\n    \"\"\"\n    Save configuration with standardized error handling.\n\n    Args:\n        manager: The configuration manager\n        section: The configuration section to save\n        config: The configuration dictionary to save\n\n    Raises:\n        ConfigError: If configuration cannot be saved\n    \"\"\"\n</code></pre> <p>This function: 1. Saves configuration for a specific section 2. Validates the configuration before saving 3. Provides helpful error messages for configuration issues</p>"},{"location":"api/utils/#usage-example_2","title":"Usage Example","text":"<pre><code>from cursor_utils.config import ConfigManager\nfrom cursor_utils.utils.config_helpers import ensure_config, load_config, save_config\n\n# Define required keys and defaults\nrequired_keys = [\"model\", \"mode\", \"search_focus\"]\ndefaults = {\n    \"model\": \"sonar\",\n    \"mode\": \"copilot\",\n    \"search_focus\": \"internet\",\n}\n\n# Ensure configuration exists\nconfig = ensure_config(manager, required_keys, defaults)\n\n# Load configuration\nweb_config = load_config(manager, \"web\")\n\n# Save configuration\nsave_config(manager, \"web\", web_config)\n</code></pre>"},{"location":"api/utils/#file-ranking-algorithm","title":"File Ranking Algorithm","text":"<p>The file ranking algorithm (<code>cursor_utils/utils/file_rank_algo.py</code>) provides functionality to rank files based on their type, size, and creation time, while respecting <code>.gitignore</code> patterns.</p>"},{"location":"api/utils/#core-data-types","title":"Core Data Types","text":"<p>The module defines several typed dictionaries for file information:</p> <pre><code>class BaseFileInfo(TypedDict):\n    \"\"\"Base file information with just the path.\"\"\"\n\n    path: str\n\n\nclass ProcessedFileInfo(BaseFileInfo):\n    \"\"\"Processed file information with additional metadata.\"\"\"\n\n    type: str\n    size: int\n    creation_time: float\n    importance_score: float\n\n\nclass FileInfo(TypedDict, total=False):\n    \"\"\"File information with optional fields.\"\"\"\n\n    path: str\n    type: NotRequired[str]\n    size: NotRequired[int]\n    creation_time: NotRequired[float]\n</code></pre>"},{"location":"api/utils/#fileranker-class","title":"FileRanker Class","text":"<p>The <code>FileRanker</code> class is the primary utility exported from the utils module:</p> <pre><code>class FileRanker:\n    \"\"\"\n    Ranks files based on a weighted score calculated from type frequency,\n    file size, and creation time.\n\n    Files matching .gitignore patterns are excluded by default.\n    \"\"\"\n\n    def __init__(\n        self,\n        type_weight: float = 0.4,\n        size_weight: float = 0.3,\n        time_weight: float = 0.3,\n        gitignore_path: Optional[str] = None,\n        gitinclude_path: Optional[str] = None,\n    ) -&gt; None:\n        \"\"\"\n        Initialize the file ranker with specified weights.\n\n        Args:\n            type_weight: Weight for file type in importance calculation\n            size_weight: Weight for file size in importance calculation\n            time_weight: Weight for creation time in importance calculation\n            gitignore_path: Path to .gitignore file (optional)\n            gitinclude_path: Path to .gitinclude file (optional)\n        \"\"\"\n</code></pre>"},{"location":"api/utils/#key-methods","title":"Key Methods","text":"<p>The <code>FileRanker</code> class provides the following key methods:</p>"},{"location":"api/utils/#rank_files","title":"rank_files","text":"<pre><code>def rank_files(self, files: list[FileInfo]) -&gt; list[ProcessedFileInfo]:\n    \"\"\"\n    Rank files based on their importance.\n\n    Args:\n        files: List of file information dictionaries\n\n    Returns:\n        List of processed file information dictionaries with importance scores,\n        sorted in descending order of importance\n    \"\"\"\n</code></pre> <p>This method: 1. Filters files based on gitignore/gitinclude patterns 2. Computes type frequency across all files 3. Calculates normalized scores for type, size, and creation time 4. Computes a weighted importance score for each file 5. Returns files sorted by importance score</p>"},{"location":"api/utils/#usage-example_3","title":"Usage Example","text":"<pre><code>from cursor_utils.utils.file_rank_algo import FileRanker\n\n# Initialize with sample files\nfiles = [\n    {\"path\": \"file1.py\", \"size\": 1000, \"creation_time\": 1600000000},\n    {\"path\": \"file2.js\", \"size\": 2000, \"creation_time\": 1600001000},\n    {\"path\": \"file3.md\", \"size\": 500, \"creation_time\": 1600002000},\n    {\"path\": \"file4.py\", \"size\": 1500, \"creation_time\": 1600003000},\n]\n\n# Create ranker with custom weights\nranker = FileRanker(\n    type_weight=0.5,\n    size_weight=0.3,\n    time_weight=0.2,\n)\n\n# Rank files\nranked_files = ranker.rank_files(files)\n\n# Print results\nfor file in ranked_files:\n    print(f\"{file['path']}: {file['importance_score']:.4f}\")\n</code></pre>"},{"location":"api/utils/#best-practices-for-using-utilities","title":"Best Practices for Using Utilities","text":"<ol> <li>Use standardized error handling:</li> <li>Use <code>safe_execute</code> for async functions</li> <li>Use <code>safe_execute_sync</code> for synchronous functions</li> <li> <p>Provide appropriate error classes and codes</p> </li> <li> <p>Centralize API key management:</p> </li> <li>Use <code>get_api_key</code> to retrieve API keys</li> <li>Use <code>validate_api_key</code> to validate API keys</li> <li> <p>Handle missing or invalid keys gracefully</p> </li> <li> <p>Simplify configuration handling:</p> </li> <li>Use <code>ensure_config</code> to validate and apply defaults</li> <li>Use <code>load_config</code> to load configuration sections</li> <li> <p>Use <code>save_config</code> to save configuration changes</p> </li> <li> <p>Optimize file ranking:</p> </li> <li>Customize weights based on your specific use case</li> <li>Provide complete file information when possible</li> <li>Use gitignore/gitinclude paths to filter files appropriately</li> <li>Process the results as needed for your specific use case</li> </ol>"},{"location":"errors/","title":"Cursor Utils Error Reference","text":"<p>This documentation provides detailed information about error codes in Cursor Utils, including their causes, potential solutions, and examples.</p>"},{"location":"errors/#error-system-overview","title":"Error System Overview","text":"<p>Cursor Utils uses a structured error system with consistent error codes and diagnostic information. Each error includes:</p> <ul> <li>A unique error code (e.g., <code>install-001</code>)</li> <li>A descriptive message</li> <li>Potential causes</li> <li>Suggested solutions</li> <li>Links to related documentation</li> </ul> <p>When an error occurs, it is presented with detailed diagnostic information to help you troubleshoot the issue.</p>"},{"location":"errors/#error-handling-architecture","title":"Error Handling Architecture","text":"<p>The error handling system in Cursor Utils has been refactored to provide a more consistent and user-friendly experience:</p> <ul> <li>Base Error Class: <code>CursorUtilsError</code> extends <code>DiagnosticError</code> to provide rich error information</li> <li>Error Categories: Specialized error classes for each module (e.g., <code>WebError</code>, <code>ConfigError</code>)</li> <li>Error Codes Enum: <code>ErrorCodes</code> enum provides standardized error codes</li> <li>Decorators: <code>safe_execute</code> and <code>safe_execute_sync</code> decorators for standardized error handling</li> <li>Centralized Handling: <code>handle_command_error</code> function for consistent error presentation</li> </ul>"},{"location":"errors/#error-code-format","title":"Error Code Format","text":"<p>Error codes follow this format: <code>{category}-{number}</code></p> <ul> <li>Category: Identifies the module or feature area (e.g., <code>install</code>, <code>config</code>, <code>web</code>)</li> <li>Number: A three-digit identifier for the specific error</li> </ul> <p>For example, <code>install-001</code> represents the first error type in the installation module.</p>"},{"location":"errors/#error-categories","title":"Error Categories","text":"Category Description <code>install</code> Installation-related errors <code>update</code> Update-related errors <code>version</code> Version-related errors <code>config</code> Configuration-related errors <code>web</code> Web command related errors <code>gemini</code> Gemini API related errors <code>repo</code> Repository-related errors <code>github</code> GitHub command related errors <code>project</code> Project analysis related errors <code>general</code> General purpose errors"},{"location":"errors/#error-code-reference","title":"Error Code Reference","text":""},{"location":"errors/#installation-errors","title":"Installation Errors","text":"Error Code Description Documentation <code>install-001</code> Invalid path specification INVALID_PATH <code>install-002</code> File not found during installation FILE_NOT_FOUND <code>install-003</code> Error processing template TEMPLATE_ERROR <code>install-004</code> Error creating or accessing directory DIRECTORY_ERROR <code>install-005</code> Error writing to file FILE_WRITE_ERROR <code>install-006</code> Already installed ALREADY_INSTALLED"},{"location":"errors/#update-errors","title":"Update Errors","text":"Error Code Description Documentation <code>update-001</code> Update failed UPDATE_FAILED <code>update-999</code> Update not available UPDATE_NOT_AVAILABLE"},{"location":"errors/#version-errors","title":"Version Errors","text":"Error Code Description Documentation <code>version-001</code> Version error VERSION_ERROR <code>version-002</code> Invalid version VERSION_INVALID"},{"location":"errors/#configuration-errors","title":"Configuration Errors","text":"Error Code Description Documentation <code>config-001</code> Configuration file error CONFIG_FILE_ERROR <code>config-002</code> Configuration validation error CONFIG_VALIDATION_ERROR <code>config-003</code> Configuration key error CONFIG_KEY_ERROR <code>config-004</code> Environment file error ENV_FILE_ERROR <code>config-005</code> Configuration save error CONFIG_SAVE_ERROR"},{"location":"errors/#web-command-errors","title":"Web Command Errors","text":"Error Code Description Documentation <code>web-001</code> Web configuration error WEB_CONFIG_ERROR <code>web-002</code> Web API error WEB_API_ERROR <code>web-003</code> Invalid API key INVALID_API_KEY <code>web-004</code> Web query error WEB_QUERY_ERROR <code>web-005</code> Web connection error WEB_CONNECTION_ERROR <code>web-006</code> Web timeout error WEB_TIMEOUT_ERROR"},{"location":"errors/#gemini-api-errors","title":"Gemini API Errors","text":"Error Code Description Documentation <code>gemini-001</code> Gemini API error GEMINI_API_ERROR <code>gemini-002</code> Gemini model error GEMINI_MODEL_ERROR <code>gemini-003</code> Gemini API key error GEMINI_API_KEY_ERROR <code>gemini-004</code> Gemini API key save error GEMINI_API_KEY_SAVE_ERROR <code>gemini-005</code> Gemini file error GEMINI_FILE_ERROR"},{"location":"errors/#repository-errors","title":"Repository Errors","text":"Error Code Description Documentation <code>repo-001</code> Repository clone error REPO_CLONE_ERROR <code>repo-002</code> Repository too large REPO_TOO_LARGE <code>repo-003</code> Repository analysis error REPO_ANALYZE_ERROR <code>repo-004</code> Repository URL error REPO_URL_ERROR <code>repo-005</code> Repository file error REPO_FILE_ERROR"},{"location":"errors/#github-errors","title":"GitHub Errors","text":"Error Code Description Documentation <code>github-001</code> GitHub API error GITHUB_API_ERROR <code>github-002</code> GitHub authentication error GITHUB_AUTH_ERROR <code>github-003</code> GitHub repository error GITHUB_REPO_ERROR <code>github-004</code> GitHub PR error GITHUB_PR_ERROR <code>github-005</code> GitHub issue error GITHUB_ISSUE_ERROR"},{"location":"errors/#project-errors","title":"Project Errors","text":"Error Code Description Documentation <code>project-001</code> Project too large PROJECT_TOO_LARGE <code>project-002</code> Project analysis error PROJECT_ANALYZE_ERROR <code>project-003</code> Project invalid URL PROJECT_INVALID_URL <code>project-004</code> Project file error PROJECT_FILE_ERROR"},{"location":"errors/#general-errors","title":"General Errors","text":"Error Code Description Documentation <code>general-001</code> Unknown error UNKNOWN_ERROR <code>general-002</code> General error GENERAL_ERROR"},{"location":"errors/#using-the-error-system-in-code","title":"Using the Error System in Code","text":"<p>If you're contributing to Cursor Utils, here's how to use the error system:</p> <pre><code>from cursor_utils.errors import ErrorCodes, WebError\nfrom cursor_utils.utils.command_helpers import safe_execute\n\n@safe_execute(WebError, ErrorCodes.WEB_QUERY_ERROR)\nasync def web_command(query: str) -&gt; None:\n    # Command implementation\n    pass\n</code></pre> <p>For synchronous functions:</p> <pre><code>from cursor_utils.errors import ErrorCodes, ConfigError\nfrom cursor_utils.utils.command_helpers import safe_execute_sync\n\n@safe_execute_sync(ConfigError, ErrorCodes.CONFIG_FILE_ERROR)\ndef config_command() -&gt; None:\n    # Command implementation\n    pass\n</code></pre>"},{"location":"errors/#troubleshooting-common-errors","title":"Troubleshooting Common Errors","text":"<p>For detailed troubleshooting information about specific errors, click on the corresponding error code link in the tables above. </p>"},{"location":"errors/config-001/","title":"INVALID_API_KEY (config-001)","text":""},{"location":"errors/config-001/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an invalid API key. This can happen when an API key has an incorrect format, is expired, or is otherwise rejected by the associated service (like Perplexity AI, Google Gemini, or GitHub).</p>"},{"location":"errors/config-001/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Invalid API key\n  Code: config-001\n\n  Causes:\n  - The API key format is incorrect\n  - The API key has expired\n  - The API key has been revoked\n  - The API key has insufficient permissions\n\n  Suggestion: Check and update your API key in the configuration\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/config-001.md\n</code></pre>"},{"location":"errors/config-001/#common-causes","title":"Common Causes","text":"<ol> <li>Incorrect Format: The API key doesn't match the expected format for the service.</li> <li>Expired Key: The API key has expired or been revoked by the service provider.</li> <li>Quota Exceeded: The API key has exceeded its usage quota or rate limits.</li> <li>Insufficient Permissions: The API key doesn't have the necessary permissions for the requested operation.</li> <li>Incorrect API Key Type: You're using the wrong type of API key for the service.</li> <li>Misconfiguration: The API key is configured incorrectly in your settings.</li> </ol>"},{"location":"errors/config-001/#solutions","title":"Solutions","text":""},{"location":"errors/config-001/#check-your-api-keys","title":"Check your API keys","text":"<p>View your current API key configuration:</p> <pre><code>cursor-utils config api_keys\n</code></pre>"},{"location":"errors/config-001/#set-up-or-update-api-keys","title":"Set up or update API keys","text":"<p>Configure a new API key:</p> <pre><code>cursor-utils config api_keys --type [KEY_TYPE]\n</code></pre> <p>Where <code>[KEY_TYPE]</code> is one of: - <code>PERPLEXITY</code> - For Perplexity AI (web search) - <code>GEMINI</code> - For Google Gemini (code generation) - <code>GITHUB</code> - For GitHub API access</p>"},{"location":"errors/config-001/#verify-keys-in-environment-file","title":"Verify keys in environment file","text":"<p>Check if your keys are correctly set in the environment file:</p> <pre><code># Linux/macOS\ncat ~/.env | grep API_KEY\n\n# Windows (PowerShell)\nGet-Content ~/.env | Select-String API_KEY\n</code></pre>"},{"location":"errors/config-001/#test-api-key-validity","title":"Test API key validity","text":"<p>Test if your API key is valid:</p> <pre><code>cursor-utils test api_key --type [KEY_TYPE]\n</code></pre>"},{"location":"errors/config-001/#get-a-new-api-key","title":"Get a new API key","text":"<p>If your key is invalid or expired, get a new one from the service provider:</p> <ul> <li>Perplexity AI API - For web search features</li> <li>Google AI Studio - For Gemini features</li> <li>GitHub Personal Access Tokens - For GitHub features</li> </ul>"},{"location":"errors/config-001/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config show</code> - Display current configuration</li> <li><code>cursor-utils test api_key</code> - Test API key validity</li> </ul>"},{"location":"errors/config-001/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>API_KEY_SAVE_ERROR (config-002) - Error saving API key</li> <li>API_KEY_READ_ERROR (config-003) - Error reading API key</li> <li>WEB_API_ERROR (web-001) - Error with Perplexity API</li> <li>GEMINI_API_KEY_ERROR (gemini-003) - Error with Gemini API key</li> </ul>"},{"location":"errors/config-001/#api-key-formats","title":"API Key Formats","text":""},{"location":"errors/config-001/#perplexity-ai","title":"Perplexity AI","text":"<p>Perplexity API keys typically: - Start with \"pplx-\" - Followed by a string of characters - Example: <code>pplx-abc123def456...</code></p>"},{"location":"errors/config-001/#google-gemini","title":"Google Gemini","text":"<p>Google Gemini API keys typically: - Are 39 characters long - Begin with \"AI\" - Example: <code>AIzaSyC1a2b3c4d5e...</code></p>"},{"location":"errors/config-001/#github","title":"GitHub","text":"<p>GitHub Personal Access Tokens typically: - Are 40 characters long - Contain only hexadecimal characters (0-9, a-f) - Example: <code>ghp_123abc...</code></p>"},{"location":"errors/config-001/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/config-001/#check-for-invisible-characters","title":"Check for invisible characters","text":"<p>Sometimes API keys might contain invisible characters or line breaks:</p> <pre><code># Display hidden characters\ncat -A ~/.env | grep API_KEY\n</code></pre>"},{"location":"errors/config-001/#regenerate-api-keys","title":"Regenerate API keys","text":"<p>If you suspect your key is compromised or invalid, regenerate it:</p> <ol> <li>Go to the service provider's website</li> <li>Find the API key management section</li> <li>Revoke the existing key</li> <li>Generate a new key</li> <li>Update it in Cursor Utils:    <pre><code>cursor-utils config api_keys --type [KEY_TYPE]\n</code></pre></li> </ol>"},{"location":"errors/config-001/#use-environment-variables-directly","title":"Use environment variables directly","text":"<p>You can set API keys as environment variables before running commands:</p> <pre><code># Linux/macOS\nexport PERPLEXITY_API_KEY=\"your-key-here\"\ncursor-utils web \"your query\"\n\n# Windows (PowerShell)\n$env:PERPLEXITY_API_KEY=\"your-key-here\"\ncursor-utils web \"your query\"\n</code></pre>"},{"location":"errors/config-001/#move-env-file-to-correct-location","title":"Move .env file to correct location","text":"<p>Ensure your .env file is in the correct location:</p> <pre><code># Check where Cursor Utils is looking for the .env file\ncursor-utils config paths\n\n# Move your .env file to the correct location if needed\ncp /path/to/your/.env ~/.env\n</code></pre>"},{"location":"errors/config-001/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li>Check if the service is experiencing issues:</li> <li>Perplexity AI Status</li> <li>Google Gemini Status</li> <li> <p>GitHub Status</p> </li> <li> <p>Try creating a new API key from scratch.</p> </li> <li> <p>Run with debug mode:    <pre><code>cursor-utils config api_keys --type [KEY_TYPE] --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The service you're having trouble with (Perplexity, Gemini, GitHub)</li> <li>Complete error message (without including the actual API key)</li> <li>Steps you've taken to resolve the issue </li> </ol>"},{"location":"errors/config-002/","title":"API_KEY_SAVE_ERROR (config-002)","text":""},{"location":"errors/config-002/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils fails to save an API key to its configuration or environment file. This could be due to permission issues, file system problems, or other configuration-related issues.</p>"},{"location":"errors/config-002/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Failed to save API key\n  Code: config-002\n\n  Causes:\n  - Insufficient permissions to write to the .env file\n  - The .env file is locked by another process\n  - The file system is read-only\n  - Disk space is insufficient\n\n  Suggestion: Check file permissions and ensure you have write access to the configuration directory\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/config-002.md\n</code></pre>"},{"location":"errors/config-002/#common-causes","title":"Common Causes","text":"<ol> <li>Permission Issues: The user doesn't have write permissions for the .env file.</li> <li>File Locking: The .env file is currently being used by another process.</li> <li>Read-Only File System: The file system where the .env file is located is mounted as read-only.</li> <li>Disk Space: There isn't enough disk space to write the updated file.</li> <li>Path Issues: The path to the .env file is incorrect or doesn't exist.</li> <li>Environment Variables: Environment variables are preventing the write operation.</li> </ol>"},{"location":"errors/config-002/#solutions","title":"Solutions","text":""},{"location":"errors/config-002/#check-file-permissions","title":"Check file permissions","text":"<p>Ensure you have write permissions for the .env file:</p> <pre><code># Linux/macOS\nls -la ~/.env\nchmod 600 ~/.env  # Make it writable only by you for security\n\n# Windows (PowerShell)\nGet-Acl ~/.env\n# Then check through Windows Explorer if needed\n</code></pre>"},{"location":"errors/config-002/#check-if-the-directory-exists","title":"Check if the directory exists","text":"<p>Make sure the directory for the .env file exists:</p> <pre><code># Linux/macOS\nmkdir -p $(dirname ~/.env)\n\n# Windows (PowerShell)\n$envPath = \"$HOME\\.env\"\n$envDir = Split-Path -Path $envPath -Parent\nif (-not (Test-Path $envDir)) { New-Item -ItemType Directory -Path $envDir }\n</code></pre>"},{"location":"errors/config-002/#close-other-processes","title":"Close other processes","text":"<p>Ensure no other applications or processes are using the .env file: - Close any text editors or IDEs that might have the file open - Check for other instances of Cursor Utils that might be running</p>"},{"location":"errors/config-002/#run-with-elevated-privileges","title":"Run with elevated privileges","text":"<p>If you're trying to save to a system location, try running with elevated privileges:</p> <pre><code># Linux/macOS\nsudo cursor-utils config api_keys --type [KEY_TYPE]\n\n# Windows (run as Administrator)\n</code></pre>"},{"location":"errors/config-002/#specify-an-alternative-location","title":"Specify an alternative location","text":"<p>You can specify an alternative location for the .env file:</p> <pre><code>cursor-utils config api_keys --type [KEY_TYPE] --env-file /path/to/alternative/.env\n</code></pre>"},{"location":"errors/config-002/#check-disk-space","title":"Check disk space","text":"<p>Ensure you have sufficient disk space:</p> <pre><code># Linux/macOS\ndf -h\n\n# Windows (PowerShell)\nGet-PSDrive C\n</code></pre>"},{"location":"errors/config-002/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config paths</code> - View and manage configuration paths</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/config-002/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>INVALID_API_KEY (config-001) - Invalid API key</li> <li>API_KEY_READ_ERROR (config-003) - Error reading API key</li> <li>ENV_FILE_ERROR (config-004) - Error with .env file</li> <li>FILE_WRITE_ERROR (install-005) - Error writing to file</li> </ul>"},{"location":"errors/config-002/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/config-002/#test-file-writing","title":"Test file writing","text":"<p>Test if you can write to the location:</p> <pre><code># Linux/macOS\ntouch ~/.env.test\necho \"TEST=value\" &gt; ~/.env.test\ncat ~/.env.test\nrm ~/.env.test\n\n# Windows (PowerShell)\n\"TEST=value\" | Out-File -FilePath \"$HOME\\.env.test\"\nGet-Content \"$HOME\\.env.test\"\nRemove-Item \"$HOME\\.env.test\"\n</code></pre>"},{"location":"errors/config-002/#check-for-hidden-env-file","title":"Check for hidden .env file","text":"<p>Sometimes there might be a hidden .env file with different permissions:</p> <pre><code># Linux/macOS\nls -la ~ | grep \"\\.env\"\n\n# Windows (PowerShell)\nGet-ChildItem -Path $HOME -Hidden -Filter .env\n</code></pre>"},{"location":"errors/config-002/#manually-create-the-env-file","title":"Manually create the .env file","text":"<p>If automated creation is failing, try creating the file manually:</p> <pre><code># Linux/macOS\ntouch ~/.env\nchmod 600 ~/.env  # Secure permissions\n\n# Windows (PowerShell)\n\"\" | Out-File -FilePath \"$HOME\\.env\"\n</code></pre>"},{"location":"errors/config-002/#use-environment-variables-directly","title":"Use environment variables directly","text":"<p>As a workaround, you can use environment variables directly:</p> <pre><code># Linux/macOS\nexport PERPLEXITY_API_KEY=\"your-key-here\"\nexport GEMINI_API_KEY=\"your-key-here\"\nexport GITHUB_TOKEN=\"your-token-here\"\n\n# Windows (PowerShell)\n$env:PERPLEXITY_API_KEY=\"your-key-here\"\n$env:GEMINI_API_KEY=\"your-key-here\"\n$env:GITHUB_TOKEN=\"your-token-here\"\n</code></pre>"},{"location":"errors/config-002/#security-considerations","title":"Security Considerations","text":"<p>When saving API keys, keep these security considerations in mind:</p> <ol> <li>File Permissions: Ensure the .env file has secure permissions (readable only by you)</li> <li>Location: Store the .env file in a secure location, not in public directories</li> <li>Backup: Keep a secure backup of your API keys</li> <li>Never Commit: Never commit the .env file to version control</li> <li>Key Rotation: Regularly rotate your API keys for improved security</li> </ol>"},{"location":"errors/config-002/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils config api_keys --type [KEY_TYPE] --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try using a completely different location for the .env file:    <pre><code>cursor-utils config api_keys --type [KEY_TYPE] --env-file ~/cursor-utils-keys.env\n</code></pre></p> </li> <li> <p>Check for any file system issues or disk corruption.</p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Your operating system and version</li> <li>File system details (if known)</li> <li>Steps you've taken to troubleshoot </li> </ol>"},{"location":"errors/config-003/","title":"API_KEY_READ_ERROR (config-003)","text":""},{"location":"errors/config-003/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils fails to read an API key from its configuration or environment file. This could be due to permission issues, file system problems, or other issues with accessing or parsing the stored API keys.</p>"},{"location":"errors/config-003/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Failed to read API key\n  Code: config-003\n\n  Causes:\n  - The .env file does not exist\n  - Insufficient permissions to read the .env file\n  - The .env file format is invalid\n  - The specified API key is not found in the configuration\n\n  Suggestion: Check that the .env file exists and has the correct permissions\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/config-003.md\n</code></pre>"},{"location":"errors/config-003/#common-causes","title":"Common Causes","text":"<ol> <li>Missing .env File: The .env file doesn't exist or is not in the expected location.</li> <li>Permission Issues: The user doesn't have read permissions for the .env file.</li> <li>Invalid Format: The .env file has an invalid format or syntax.</li> <li>Missing Key: The requested API key is not defined in the .env file.</li> <li>Environment Variables: Environment variable conflicts or overrides.</li> <li>File Corruption: The .env file is corrupted or incomplete.</li> </ol>"},{"location":"errors/config-003/#solutions","title":"Solutions","text":""},{"location":"errors/config-003/#check-if-the-env-file-exists","title":"Check if the .env file exists","text":"<p>Verify that the .env file exists:</p> <pre><code># Linux/macOS\nls -la ~/.env\n\n# Windows (PowerShell)\nTest-Path ~/.env\n</code></pre>"},{"location":"errors/config-003/#check-file-permissions","title":"Check file permissions","text":"<p>Ensure you have read permissions for the .env file:</p> <pre><code># Linux/macOS\nls -la ~/.env\nchmod 600 ~/.env  # Make it readable and writable only by you for security\n\n# Windows (PowerShell)\nGet-Acl ~/.env\n</code></pre>"},{"location":"errors/config-003/#check-the-env-file-format","title":"Check the .env file format","text":"<p>Verify that the .env file has the correct format:</p> <pre><code># Linux/macOS\ncat ~/.env\n\n# Windows (PowerShell)\nGet-Content ~/.env\n</code></pre> <p>The .env file should contain key-value pairs like: <pre><code>PERPLEXITY_API_KEY=your-key-here\nGEMINI_API_KEY=your-key-here\nGITHUB_TOKEN=your-token-here\n</code></pre></p> <p>Each key-value pair should be on a separate line with no extra spaces around the equals sign.</p>"},{"location":"errors/config-003/#set-up-the-api-key","title":"Set up the API key","text":"<p>If the API key is missing, set it up:</p> <pre><code>cursor-utils config api_keys --type [KEY_TYPE]\n</code></pre> <p>Where <code>[KEY_TYPE]</code> is one of: - <code>PERPLEXITY</code> - For Perplexity AI (web search) - <code>GEMINI</code> - For Google Gemini (code generation) - <code>GITHUB</code> - For GitHub API access</p>"},{"location":"errors/config-003/#specify-an-alternative-env-file","title":"Specify an alternative .env file","text":"<p>You can specify an alternative location for the .env file:</p> <pre><code>cursor-utils config api_keys --type [KEY_TYPE] --env-file /path/to/alternative/.env\n</code></pre>"},{"location":"errors/config-003/#create-a-new-env-file","title":"Create a new .env file","text":"<p>If the .env file is missing or corrupted, create a new one:</p> <pre><code># Linux/macOS\ntouch ~/.env\nchmod 600 ~/.env  # Secure permissions\n\n# Windows (PowerShell)\n\"\" | Out-File -FilePath \"$HOME\\.env\"\n</code></pre> <p>Then set up your API keys again:</p> <pre><code>cursor-utils config api_keys --type PERPLEXITY\ncursor-utils config api_keys --type GEMINI\ncursor-utils config api_keys --type GITHUB\n</code></pre>"},{"location":"errors/config-003/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config paths</code> - View and manage configuration paths</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/config-003/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>INVALID_API_KEY (config-001) - Invalid API key</li> <li>API_KEY_SAVE_ERROR (config-002) - Error saving API key</li> <li>ENV_FILE_ERROR (config-004) - Error with .env file</li> <li>FILE_NOT_FOUND (install-002) - File not found during installation</li> </ul>"},{"location":"errors/config-003/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/config-003/#check-environment-variables","title":"Check environment variables","text":"<p>Check if the API keys are defined as environment variables:</p> <pre><code># Linux/macOS\nenv | grep -E 'PERPLEXITY_API_KEY|GEMINI_API_KEY|GITHUB_TOKEN'\n\n# Windows (PowerShell)\nGet-ChildItem Env: | Where-Object { $_.Name -match 'PERPLEXITY_API_KEY|GEMINI_API_KEY|GITHUB_TOKEN' }\n</code></pre>"},{"location":"errors/config-003/#check-for-conflicting-env-files","title":"Check for conflicting .env files","text":"<p>Look for multiple .env files that might be causing conflicts:</p> <pre><code># Linux/macOS\nfind ~/ -name \".env\" -maxdepth 3\n\n# Windows (PowerShell)\nGet-ChildItem -Path $HOME -Filter .env -Recurse -Depth 3\n</code></pre>"},{"location":"errors/config-003/#check-env-file-encoding","title":"Check .env file encoding","text":"<p>Ensure the .env file has the correct encoding (UTF-8):</p> <pre><code># Linux/macOS\nfile -i ~/.env\n\n# Windows (PowerShell)\n# Check through Notepad by opening the file and saving with UTF-8 encoding\n</code></pre>"},{"location":"errors/config-003/#manually-inspect-for-invisible-characters","title":"Manually inspect for invisible characters","text":"<p>Check for invisible characters that might affect parsing:</p> <pre><code># Linux/macOS\nhexdump -C ~/.env | head -20\n\n# Windows (PowerShell)\nFormat-Hex -Path ~/.env | Select-Object -First 20\n</code></pre>"},{"location":"errors/config-003/#use-direct-environment-variables","title":"Use direct environment variables","text":"<p>As a workaround, you can use environment variables directly:</p> <pre><code># Linux/macOS\nexport PERPLEXITY_API_KEY=\"your-key-here\"\nexport GEMINI_API_KEY=\"your-key-here\"\nexport GITHUB_TOKEN=\"your-token-here\"\n\n# Windows (PowerShell)\n$env:PERPLEXITY_API_KEY=\"your-key-here\"\n$env:GEMINI_API_KEY=\"your-key-here\"\n$env:GITHUB_TOKEN=\"your-token-here\"\n</code></pre>"},{"location":"errors/config-003/#common-env-file-issues","title":"Common .env File Issues","text":"Issue Solution Empty lines between entries Remove empty lines Spaces around equals sign Remove spaces: <code>KEY=value</code> not <code>KEY = value</code> Quoted values Remove quotes unless they're part of the value Comments Comments should start with <code>#</code> Line endings Use Unix-style line endings (LF not CRLF) BOM marker Ensure file is saved without Byte Order Mark"},{"location":"errors/config-003/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils config api_keys --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Create a completely new .env file in a different location:    <pre><code>echo \"PERPLEXITY_API_KEY=your-key-here\" &gt; ~/new-env-file\ncursor-utils config api_keys --env-file ~/new-env-file\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Your operating system and version</li> <li>The output of any troubleshooting commands you've run</li> <li>Steps you've taken to resolve the issue </li> </ol>"},{"location":"errors/config-004/","title":"ENV_FILE_ERROR (config-004)","text":""},{"location":"errors/config-004/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters a general issue with the .env file that is used to store API keys and other sensitive information. This could include problems with the file's format, location, or processing that don't fit into more specific error categories.</p>"},{"location":"errors/config-004/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Problem with environment file\n  Code: config-004\n\n  Causes:\n  - The .env file has invalid syntax\n  - The .env file is corrupted\n  - The .env file contains invalid entries\n  - Cannot locate the .env file in the expected paths\n\n  Suggestion: Check the .env file format and ensure it exists in the correct location\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/config-004.md\n</code></pre>"},{"location":"errors/config-004/#common-causes","title":"Common Causes","text":"<ol> <li>Format Issues: The .env file has an invalid format or syntax errors.</li> <li>Location Problems: The .env file is not in the expected location or path.</li> <li>Parsing Errors: Issues when parsing the .env file contents.</li> <li>File Corruption: The .env file is corrupted or has been partially written.</li> <li>Concurrent Access: Multiple processes trying to access the .env file simultaneously.</li> <li>Encoding Issues: The .env file has an incorrect character encoding.</li> </ol>"},{"location":"errors/config-004/#solutions","title":"Solutions","text":""},{"location":"errors/config-004/#check-env-file-location","title":"Check .env file location","text":"<p>Verify that the .env file is in the expected location:</p> <pre><code># Linux/macOS\nls -la ~/.env\n\n# Windows (PowerShell)\nTest-Path ~/.env\n</code></pre>"},{"location":"errors/config-004/#check-env-file-format","title":"Check .env file format","text":"<p>Ensure the .env file has the correct format:</p> <pre><code># Linux/macOS\ncat ~/.env\n\n# Windows (PowerShell)\nGet-Content ~/.env\n</code></pre> <p>The file should contain simple key-value pairs like: <pre><code>PERPLEXITY_API_KEY=your-key-here\nGEMINI_API_KEY=your-key-here\nGITHUB_TOKEN=your-token-here\n</code></pre></p>"},{"location":"errors/config-004/#create-or-fix-the-env-file","title":"Create or fix the .env file","text":"<p>If the .env file is missing or has issues, create a new one:</p> <pre><code># Linux/macOS\ntouch ~/.env\nchmod 600 ~/.env  # Set secure permissions\n\n# Windows (PowerShell)\n\"\" | Out-File -FilePath \"$HOME\\.env\"\n</code></pre>"},{"location":"errors/config-004/#check-for-specific-format-issues","title":"Check for specific format issues","text":"<p>Common format issues include: - Spaces around the equals sign (should be <code>KEY=value</code> not <code>KEY = value</code>) - Quotes around values (not needed unless part of the value) - Special characters in values - Missing or extra newlines</p>"},{"location":"errors/config-004/#use-the-configuration-tool-to-set-up-keys","title":"Use the configuration tool to set up keys","text":"<p>Let Cursor Utils manage the .env file for you:</p> <pre><code>cursor-utils config api_keys --type PERPLEXITY\ncursor-utils config api_keys --type GEMINI\ncursor-utils config api_keys --type GITHUB\n</code></pre>"},{"location":"errors/config-004/#specify-an-alternative-env-file","title":"Specify an alternative .env file","text":"<p>You can specify an alternative location for the .env file:</p> <pre><code>cursor-utils config api_keys --type [KEY_TYPE] --env-file /path/to/alternative/.env\n</code></pre>"},{"location":"errors/config-004/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config paths</code> - View and manage configuration paths</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/config-004/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>API_KEY_SAVE_ERROR (config-002) - Error saving API key</li> <li>API_KEY_READ_ERROR (config-003) - Error reading API key</li> <li>CONFIG_FILE_ERROR (config-005) - Error with configuration file</li> <li>FILE_NOT_FOUND (install-002) - File not found during installation</li> </ul>"},{"location":"errors/config-004/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/config-004/#check-file-encoding","title":"Check file encoding","text":"<p>Ensure the .env file has the correct encoding (UTF-8 without BOM):</p> <pre><code># Linux/macOS\nfile -i ~/.env\n\n# Windows (PowerShell)\n# Check using Notepad by opening and saving with \"UTF-8\" encoding (not \"UTF-8 with BOM\")\n</code></pre>"},{"location":"errors/config-004/#check-for-invisible-characters","title":"Check for invisible characters","text":"<p>Look for invisible characters that might be causing issues:</p> <pre><code># Linux/macOS\ncat -A ~/.env\n\n# Windows (PowerShell)\n$content = Get-Content ~/.env -Raw\n[System.Text.Encoding]::ASCII.GetString([System.Text.Encoding]::ASCII.GetBytes($content))\n</code></pre>"},{"location":"errors/config-004/#check-for-line-ending-issues","title":"Check for line ending issues","text":"<p>Different line endings can cause parsing problems:</p> <pre><code># Linux/macOS\ndos2unix ~/.env  # Convert DOS/Windows line endings to Unix\n\n# Windows (PowerShell)\n(Get-Content ~/.env -Raw).Replace(\"`r`n\", \"`n\") | Set-Content ~/.env -NoNewLine\n</code></pre>"},{"location":"errors/config-004/#recreate-with-proper-formatting","title":"Recreate with proper formatting","text":"<p>Create a new .env file with proper formatting:</p> <pre><code># Linux/macOS\ncat &gt; ~/.env &lt;&lt; EOF\nPERPLEXITY_API_KEY=your-key-here\nGEMINI_API_KEY=your-key-here\nGITHUB_TOKEN=your-token-here\nEOF\nchmod 600 ~/.env\n\n# Windows (PowerShell)\n@\"\nPERPLEXITY_API_KEY=your-key-here\nGEMINI_API_KEY=your-key-here\nGITHUB_TOKEN=your-token-here\n\"@ | Set-Content -Path \"$HOME\\.env\" -NoNewline\n</code></pre>"},{"location":"errors/config-004/#use-environment-variables-directly","title":"Use environment variables directly","text":"<p>As a workaround, you can use environment variables directly:</p> <pre><code># Linux/macOS\nexport PERPLEXITY_API_KEY=\"your-key-here\"\nexport GEMINI_API_KEY=\"your-key-here\"\nexport GITHUB_TOKEN=\"your-token-here\"\n\n# Windows (PowerShell)\n$env:PERPLEXITY_API_KEY=\"your-key-here\"\n$env:GEMINI_API_KEY=\"your-key-here\"\n$env:GITHUB_TOKEN=\"your-token-here\"\n</code></pre>"},{"location":"errors/config-004/#common-env-issues-and-solutions","title":"Common .env Issues and Solutions","text":"Issue Solution Inconsistent line endings Convert to Unix line endings (LF, not CRLF) Empty lines Remove extra blank lines Comments Comments should start with <code>#</code> Spaces in keys Keys should not have spaces Quotes around values Quotes not needed unless part of the value Hidden characters Check for and remove hidden/control characters Multiple .env files Identify which one is being used Permissions Ensure proper file permissions (600 recommended)"},{"location":"errors/config-004/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils config api_keys --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Create a simple test .env file:    <pre><code>echo \"TEST_KEY=test_value\" &gt; ~/test.env\ncursor-utils config api_keys --type PERPLEXITY --env-file ~/test.env\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Your operating system and version</li> <li>The content of your .env file (with actual API keys redacted)</li> <li>Steps you've taken to resolve the issue </li> </ol>"},{"location":"errors/config-005/","title":"CONFIG_FILE_ERROR (config-005)","text":""},{"location":"errors/config-005/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue with its main configuration file (<code>cursor-utils.yaml</code> or similar). This could be due to problems with the file format, missing required fields, permission issues, or other configuration-related problems.</p>"},{"location":"errors/config-005/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Problem with configuration file\n  Code: config-005\n\n  Causes:\n  - The configuration file has invalid YAML syntax\n  - Required configuration fields are missing\n  - The configuration file cannot be accessed\n  - The configuration contains invalid values\n\n  Suggestion: Check the configuration file format and ensure all required fields are present\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/config-005.md\n</code></pre>"},{"location":"errors/config-005/#common-causes","title":"Common Causes","text":"<ol> <li>Invalid YAML: The configuration file contains invalid YAML syntax.</li> <li>Missing Fields: Required configuration fields are missing from the file.</li> <li>Permission Issues: The user doesn't have sufficient permissions to read or write the configuration file.</li> <li>Invalid Values: The configuration contains values that are not allowed or are of the wrong type.</li> <li>File Location: The configuration file is not in the expected location.</li> <li>File Corruption: The configuration file is corrupted or incomplete.</li> </ol>"},{"location":"errors/config-005/#solutions","title":"Solutions","text":""},{"location":"errors/config-005/#check-the-configuration-file-location","title":"Check the configuration file location","text":"<p>Verify that the configuration file exists in the expected location:</p> <pre><code># Linux/macOS\nls -la ~/cursor-utils.yaml\nls -la ~/.cursor-utils/config.yaml  # Alternative location\n\n# Windows (PowerShell)\nTest-Path ~/cursor-utils.yaml\nTest-Path ~/.cursor-utils/config.yaml  # Alternative location\n</code></pre>"},{"location":"errors/config-005/#check-configuration-file-format","title":"Check configuration file format","text":"<p>Ensure the configuration file has valid YAML syntax:</p> <pre><code># Linux/macOS\ncat ~/cursor-utils.yaml\n\n# Windows (PowerShell)\nGet-Content ~/cursor-utils.yaml\n</code></pre>"},{"location":"errors/config-005/#validate-yaml-syntax","title":"Validate YAML syntax","text":"<p>You can use online YAML validators or tools to check syntax:</p> <pre><code># If you have Python installed\npython -c \"import yaml, sys; yaml.safe_load(open('~/cursor-utils.yaml'))\"\n\n# If you have yamllint installed\nyamllint ~/cursor-utils.yaml\n</code></pre>"},{"location":"errors/config-005/#reset-to-default-configuration","title":"Reset to default configuration","text":"<p>Generate a new configuration file with default settings:</p> <pre><code>cursor-utils config init\n</code></pre>"},{"location":"errors/config-005/#show-current-configuration","title":"Show current configuration","text":"<p>View your current configuration to identify issues:</p> <pre><code>cursor-utils config show\n</code></pre>"},{"location":"errors/config-005/#set-specific-configuration-values","title":"Set specific configuration values","text":"<p>If specific values are causing issues, set them individually:</p> <pre><code>cursor-utils config set key.subkey value\n</code></pre> <p>For example: <pre><code>cursor-utils config set web.model sonar-pro\ncursor-utils config set settings.debug true\n</code></pre></p>"},{"location":"errors/config-005/#fix-file-permissions","title":"Fix file permissions","text":"<p>Ensure proper permissions for the configuration file:</p> <pre><code># Linux/macOS\nchmod 644 ~/cursor-utils.yaml\n\n# Windows\n# Check permissions through File Explorer's Properties &gt; Security tab\n</code></pre>"},{"location":"errors/config-005/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils config show</code> - Display current configuration</li> <li><code>cursor-utils config set</code> - Set a specific configuration value</li> <li><code>cursor-utils config init</code> - Initialize a new configuration file</li> <li><code>cursor-utils config paths</code> - View configuration file paths</li> </ul>"},{"location":"errors/config-005/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>ENV_FILE_ERROR (config-004) - Error with .env file</li> <li>API_KEY_READ_ERROR (config-003) - Error reading API key</li> <li>FILE_NOT_FOUND (install-002) - File not found during installation</li> <li>FILE_WRITE_ERROR (install-005) - Error writing to file</li> </ul>"},{"location":"errors/config-005/#configuration-file-structure","title":"Configuration File Structure","text":"<p>The Cursor Utils configuration file uses YAML format with the following structure:</p> <pre><code>version: \"1.0.0\"\nsettings:\n  debug: false\n  log_level: \"INFO\"\nweb:\n  model: \"sonar-pro\"\n  mode: \"copilot\"\n  search_focus: \"internet\"\ngemini:\n  model: \"gemini-2.0-pro-exp-02-05\"\n  max_output_tokens: 8000\n  temperature: 0.7\n  top_p: 0.95\n  top_k: 40\ngithub:\n  token_source: \"env\"\n  default_owner: \"username\"\n  default_repo: \"repo-name\"\n  template_dir: \"~/.cursor-utils/templates/github\"\n</code></pre>"},{"location":"errors/config-005/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/config-005/#check-for-syntax-errors","title":"Check for syntax errors","text":"<p>Common YAML syntax errors include: - Incorrect indentation - Missing colons - Unquoted strings with special characters - Missing quotes around strings that start with special characters - Using tabs instead of spaces for indentation</p>"},{"location":"errors/config-005/#create-a-minimal-configuration","title":"Create a minimal configuration","text":"<p>Create a minimal working configuration to start with:</p> <pre><code># Linux/macOS\ncat &gt; ~/cursor-utils.yaml &lt;&lt; EOF\nversion: \"1.0.0\"\nsettings:\n  debug: false\n  log_level: \"INFO\"\nEOF\n\n# Windows (PowerShell)\n@\"\nversion: \"1.0.0\"\nsettings:\n  debug: false\n  log_level: \"INFO\"\n\"@ | Set-Content -Path \"$HOME\\cursor-utils.yaml\"\n</code></pre>"},{"location":"errors/config-005/#check-for-specific-syntax-errors","title":"Check for specific syntax errors","text":"<p>Use a YAML linter or parser to find specific syntax errors:</p> <pre><code># Using Python (if available)\npython -c \"import yaml, sys; print(yaml.safe_load(open('~/cursor-utils.yaml')));\"\n</code></pre>"},{"location":"errors/config-005/#check-file-encoding","title":"Check file encoding","text":"<p>Ensure the configuration file has the correct encoding (UTF-8):</p> <pre><code># Linux/macOS\nfile -i ~/cursor-utils.yaml\n\n# Windows (PowerShell)\n# Check through Notepad by opening and saving with UTF-8 encoding\n</code></pre>"},{"location":"errors/config-005/#configuration-reference","title":"Configuration Reference","text":""},{"location":"errors/config-005/#required-fields","title":"Required Fields","text":"<p>The following fields are required in the configuration:</p> <pre><code>version: \"1.0.0\"  # Configuration version\nsettings:\n  debug: false    # Debug mode (true/false)\n  log_level: \"INFO\"  # Log level (DEBUG, INFO, WARNING, ERROR)\n</code></pre>"},{"location":"errors/config-005/#web-command-settings","title":"Web Command Settings","text":"<pre><code>web:\n  model: \"sonar-pro\"  # sonar, sonar-pro, sonar-reasoning, sonar-pro-reasoning\n  mode: \"copilot\"     # copilot, concise\n  search_focus: \"internet\"  # internet, scholar, writing, wolfram, youtube, reddit\n</code></pre>"},{"location":"errors/config-005/#gemini-command-settings","title":"Gemini Command Settings","text":"<pre><code>gemini:\n  model: \"gemini-2.0-pro-exp-02-05\"  # Gemini model name\n  max_output_tokens: 8000             # Maximum output tokens\n  temperature: 0.7                    # Temperature (0.0-1.0)\n  top_p: 0.95                         # Top-p sampling\n  top_k: 40                           # Top-k sampling\n</code></pre>"},{"location":"errors/config-005/#github-command-settings","title":"GitHub Command Settings","text":"<pre><code>github:\n  token_source: \"env\"  # Where to get the token (env or config)\n  default_owner: \"username\"  # Default GitHub owner/organization\n  default_repo: \"repo-name\"  # Default repository\n  template_dir: \"~/.cursor-utils/templates/github\"  # Template directory\n</code></pre>"},{"location":"errors/config-005/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils config show --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Create a completely new minimal configuration:    <pre><code>mv ~/cursor-utils.yaml ~/cursor-utils.yaml.backup\ncursor-utils config init\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Your operating system and version</li> <li>The content of your configuration file (with sensitive information redacted)</li> <li>Steps you've taken to resolve the issue </li> </ol>"},{"location":"errors/gemini-001/","title":"GEMINI_API_ERROR (gemini-001)","text":""},{"location":"errors/gemini-001/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue while communicating with the Google Gemini API. This could be due to problems with the API request, response, authentication, or other API-related issues.</p>"},{"location":"errors/gemini-001/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Error communicating with Google Gemini API\n  Code: gemini-001\n\n  Causes:\n  - API request or response format issues\n  - Google Gemini API service error\n  - Quota exceeded\n  - Rate limits reached\n  - API version incompatibility\n\n  Suggestion: Check the error details and try again later\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/gemini-001.md\n</code></pre>"},{"location":"errors/gemini-001/#common-causes","title":"Common Causes","text":"<ol> <li>API Format Issues: Problems with the request or response format.</li> <li>Service Error: The Google Gemini API service is experiencing issues.</li> <li>Quota Exceeded: You've exceeded your API usage quota.</li> <li>Rate Limiting: You've hit rate limits for API requests.</li> <li>API Version Incompatibility: Incompatibility between Cursor Utils and the Gemini API version.</li> <li>Invalid Request Parameters: Incorrect or invalid parameters in the API request.</li> </ol>"},{"location":"errors/gemini-001/#solutions","title":"Solutions","text":""},{"location":"errors/gemini-001/#check-api-key-validity","title":"Check API key validity","text":"<p>Verify that your Google Gemini API key is valid:</p> <pre><code>cursor-utils test api_key --type GEMINI\n</code></pre>"},{"location":"errors/gemini-001/#update-your-api-key","title":"Update your API key","text":"<p>If your API key is invalid or has issues, update it:</p> <pre><code>cursor-utils config api_keys --type GEMINI\n</code></pre>"},{"location":"errors/gemini-001/#check-google-gemini-api-status","title":"Check Google Gemini API status","text":"<p>Check if the Google Gemini API is experiencing issues:</p> <ul> <li>Google Cloud Status Dashboard</li> </ul>"},{"location":"errors/gemini-001/#check-quota-and-usage","title":"Check quota and usage","text":"<p>Check if you've exceeded your API quota:</p> <ul> <li>Google AI Studio Quota Page</li> </ul>"},{"location":"errors/gemini-001/#modify-request-parameters","title":"Modify request parameters","text":"<p>Adjust parameters to stay within API limitations:</p> <pre><code>cursor-utils gemini \"your prompt\" --max-tokens 1000 --temperature 0.7\n</code></pre>"},{"location":"errors/gemini-001/#check-for-error-details","title":"Check for error details","text":"<p>Run with debug mode to get more detailed error information:</p> <pre><code>cursor-utils gemini \"your prompt\" --debug\n</code></pre>"},{"location":"errors/gemini-001/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils gemini --help</code> - Show help for the Gemini command</li> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils test api_key</code> - Test API key validity</li> </ul>"},{"location":"errors/gemini-001/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>GEMINI_MODEL_ERROR (gemini-002) - Error with Gemini model</li> <li>GEMINI_API_KEY_ERROR (gemini-003) - Error with Gemini API key</li> <li>INVALID_API_KEY (config-001) - Invalid API key</li> </ul>"},{"location":"errors/gemini-001/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/gemini-001/#check-api-response-details","title":"Check API response details","text":"<p>Examine the API response for specific error details:</p> <pre><code>cursor-utils gemini \"test prompt\" --debug\n</code></pre> <p>Look for error codes and messages in the debug output.</p>"},{"location":"errors/gemini-001/#test-with-minimal-prompt","title":"Test with minimal prompt","text":"<p>Try a simple prompt to isolate complex prompt issues:</p> <pre><code>cursor-utils gemini \"Hello world\"\n</code></pre>"},{"location":"errors/gemini-001/#check-for-api-changes","title":"Check for API changes","text":"<p>The Google Gemini API may have changed. Check for updates:</p> <pre><code>cursor-utils update\n</code></pre>"},{"location":"errors/gemini-001/#examine-request-payload","title":"Examine request payload","text":"<p>Debug mode will show the request payload:</p> <pre><code>cursor-utils gemini \"your prompt\" --debug\n</code></pre> <p>Look for issues with the request format or parameters.</p>"},{"location":"errors/gemini-001/#common-api-errors-and-solutions","title":"Common API Errors and Solutions","text":"Error Code Description Solution <code>INVALID_ARGUMENT</code> Invalid request parameters Check and fix parameters in your request <code>PERMISSION_DENIED</code> Authentication issues Verify API key and permissions <code>RESOURCE_EXHAUSTED</code> Quota or rate limit reached Wait and try again later, or request higher quota <code>UNAVAILABLE</code> Service temporarily unavailable Wait and try again later <code>UNIMPLEMENTED</code> Requested feature not implemented Check for supported features/models <code>FAILED_PRECONDITION</code> Request doesn't meet preconditions Adjust request parameters"},{"location":"errors/gemini-001/#google-gemini-api-limitations","title":"Google Gemini API Limitations","text":"<p>Be aware of these limitations when using the Google Gemini API:</p> <ul> <li>Rate Limits: Default quotas limit requests per minute/day</li> <li>Token Limits: Maximum tokens per request (input + output)</li> <li>Content Filtering: Some content may be filtered or flagged</li> <li>Regional Availability: Not all features available in all regions</li> <li>Model Versioning: Models are regularly updated, which may change behavior</li> </ul>"},{"location":"errors/gemini-001/#optimizing-gemini-requests","title":"Optimizing Gemini Requests","text":"<p>To reduce API errors and improve reliability:</p> <ol> <li>Keep prompts concise: Shorter prompts are less likely to trigger errors</li> <li>Set reasonable token limits: Stay well below maximums</li> <li>Handle rate limiting: Add delays between requests</li> <li>Implement retries: Add automatic retries with backoff</li> <li>Monitor quota usage: Track your usage to avoid exceeding limits</li> </ol>"},{"location":"errors/gemini-001/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li>Check the Google Gemini API documentation:</li> <li> <p>Google Gemini API Documentation</p> </li> <li> <p>Run with maximum debug information:    <pre><code>cursor-utils gemini \"test prompt\" --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Your prompt (if not confidential)</li> <li>API response details from debug mode</li> <li>Your Cursor Utils version (<code>cursor-utils --version</code>)</li> <li>Steps you've taken to troubleshoot </li> </ol>"},{"location":"errors/gemini-002/","title":"GEMINI_MODEL_ERROR (gemini-002)","text":""},{"location":"errors/gemini-002/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue with the specified Google Gemini model. This could be due to an invalid model name, a model that's unavailable or deprecated, or other model-related issues.</p>"},{"location":"errors/gemini-002/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Error with Google Gemini model\n  Code: gemini-002\n\n  Causes:\n  - Invalid model name specified\n  - The requested model is unavailable\n  - The model is deprecated\n  - The model requires additional permissions\n  - The model is currently overloaded\n\n  Suggestion: Check the model name and try a different model\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/gemini-002.md\n</code></pre>"},{"location":"errors/gemini-002/#common-causes","title":"Common Causes","text":"<ol> <li>Invalid Model Name: The specified model name is not valid or contains typos.</li> <li>Unavailable Model: The requested model is not available to your API key or in your region.</li> <li>Deprecated Model: The model has been deprecated and is no longer supported.</li> <li>Permission Issues: Your API key doesn't have permission to use the requested model.</li> <li>Model Overload: The model is temporarily overloaded and cannot accept new requests.</li> <li>Regional Restrictions: The model is not available in your region.</li> </ol>"},{"location":"errors/gemini-002/#solutions","title":"Solutions","text":""},{"location":"errors/gemini-002/#check-available-models","title":"Check available models","text":"<p>Verify which models are available:</p> <pre><code>cursor-utils gemini models list\n</code></pre>"},{"location":"errors/gemini-002/#use-a-default-model","title":"Use a default model","text":"<p>If you're unsure which model to use, let Cursor Utils use the default model:</p> <pre><code>cursor-utils gemini \"your prompt\"  # Without specifying a model\n</code></pre>"},{"location":"errors/gemini-002/#try-a-different-model","title":"Try a different model","text":"<p>If one model is not working, try another supported model:</p> <pre><code>cursor-utils gemini \"your prompt\" --model gemini-2.0-flash  # Faster model\ncursor-utils gemini \"your prompt\" --model gemini-2.0-pro  # Standard model\n</code></pre>"},{"location":"errors/gemini-002/#check-model-name-spelling","title":"Check model name spelling","text":"<p>Ensure the model name is spelled correctly:</p> <pre><code># Correct\ncursor-utils gemini \"your prompt\" --model gemini-2.0-pro\n\n# Incorrect\ncursor-utils gemini \"your prompt\" --model Gemini2.0Pro  # Wrong format\ncursor-utils gemini \"your prompt\" --model gemini-2-pro  # Wrong format\n</code></pre>"},{"location":"errors/gemini-002/#update-your-configuration","title":"Update your configuration","text":"<p>Update your Gemini configuration with a valid model:</p> <pre><code>cursor-utils config set gemini.model gemini-2.0-pro\n</code></pre>"},{"location":"errors/gemini-002/#update-cursor-utils","title":"Update Cursor Utils","text":"<p>Make sure you're using the latest version:</p> <pre><code>cursor-utils update\n</code></pre>"},{"location":"errors/gemini-002/#valid-gemini-models","title":"Valid Gemini Models","text":"Model Description Notes <code>gemini-2.0-pro</code> Standard Gemini 2.0 Pro model Good general purpose model <code>gemini-2.0-flash</code> Faster, more efficient model Good for quicker responses <code>gemini-2.0-pro-exp-02-05</code> Experimental Pro model Enhanced for code-related tasks <code>gemini-2.0-flash-thinking-exp</code> Experimental thinking model Better for step-by-step reasoning <p>Note: Available models may change as Google updates the Gemini API.</p>"},{"location":"errors/gemini-002/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils gemini --help</code> - Show help for the Gemini command</li> <li><code>cursor-utils gemini models list</code> - List available models</li> <li><code>cursor-utils config show</code> - Display current configuration</li> <li><code>cursor-utils config set gemini.model [MODEL]</code> - Set the default model</li> </ul>"},{"location":"errors/gemini-002/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>GEMINI_API_ERROR (gemini-001) - Error with Gemini API</li> <li>GEMINI_API_KEY_ERROR (gemini-003) - Error with Gemini API key</li> <li>INVALID_API_KEY (config-001) - Invalid API key</li> </ul>"},{"location":"errors/gemini-002/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/gemini-002/#check-api-documentation","title":"Check API documentation","text":"<p>Refer to the Google Gemini API documentation for the latest information on supported models: - Google Gemini API Documentation</p>"},{"location":"errors/gemini-002/#debug-model-selection","title":"Debug model selection","text":"<p>Run with debug mode to see model selection details:</p> <pre><code>cursor-utils gemini \"your prompt\" --model gemini-2.0-pro --debug\n</code></pre>"},{"location":"errors/gemini-002/#check-for-api-updates","title":"Check for API updates","text":"<p>The Google Gemini API might have changed since your version of Cursor Utils was released:</p> <pre><code># Check your Cursor Utils version\ncursor-utils --version\n\n# Update to the latest version\ncursor-utils update\n</code></pre>"},{"location":"errors/gemini-002/#check-api-key-capabilities","title":"Check API key capabilities","text":"<p>Some API keys might be restricted to certain models. Check your API key's capabilities:</p> <pre><code>cursor-utils test api_key --type GEMINI\n</code></pre>"},{"location":"errors/gemini-002/#model-selection-considerations","title":"Model Selection Considerations","text":""},{"location":"errors/gemini-002/#performance-vs-quality","title":"Performance vs Quality","text":"<p>Different models offer different trade-offs: - Flash models (gemini-2.0-flash): Faster responses, lower resource usage, less detailed answers - Pro models (gemini-2.0-pro): More detailed responses, higher resource usage, might be slower</p>"},{"location":"errors/gemini-002/#task-appropriateness","title":"Task Appropriateness","text":"<p>Choose models based on your task: - Factual questions: Any model should work well - Code generation: Pro models usually work better - Simple instructions: Flash models are faster and efficient - Complex reasoning: Pro models with experimental features may be better</p>"},{"location":"errors/gemini-002/#api-costs","title":"API Costs","text":"<p>Different models may have different costs associated with them: - Higher-tier models might use more tokens or cost more per request - Check your Google AI Studio account for specific pricing details</p>"},{"location":"errors/gemini-002/#regional-availability","title":"Regional Availability","text":"<p>Google Gemini models may have different availability in different regions: - Some models might not be available in all countries - Certain features might be region-restricted - Check the Google Gemini API Documentation for regional availability details</p>"},{"location":"errors/gemini-002/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li>Check the current status of the Google Cloud:</li> <li> <p>Google Cloud Status Dashboard</p> </li> <li> <p>Run with debug logging:    <pre><code>cursor-utils gemini \"test prompt\" --model gemini-2.0-pro --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>The model you tried to use</li> <li>Other models you've tested (and whether they worked)</li> <li>Your Cursor Utils version (<code>cursor-utils --version</code>)</li> <li>Debug log output </li> </ol>"},{"location":"errors/gemini-003/","title":"GEMINI_API_KEY_ERROR (gemini-003)","text":""},{"location":"errors/gemini-003/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue with the Google Gemini API key. This could be due to an invalid, expired, or missing API key, or problems with API key permissions or configuration.</p>"},{"location":"errors/gemini-003/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Google Gemini API key error\n  Code: gemini-003\n\n  Causes:\n  - API key is missing or not configured\n  - API key is invalid or malformed\n  - API key has expired\n  - API key lacks required permissions\n  - API key has been revoked\n\n  Suggestion: Check and update your Gemini API key\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/gemini-003.md\n</code></pre>"},{"location":"errors/gemini-003/#common-causes","title":"Common Causes","text":"<ol> <li>Missing API Key: No Gemini API key has been configured in Cursor Utils.</li> <li>Invalid API Key: The configured API key is not valid or is malformed.</li> <li>Expired API Key: The API key has expired or been revoked.</li> <li>Permission Issues: The API key doesn't have the necessary permissions for Gemini operations.</li> <li>Configuration Problems: The API key is not properly configured in the environment file.</li> <li>Quota Exceeded: The API key has reached its quota or usage limits.</li> </ol>"},{"location":"errors/gemini-003/#solutions","title":"Solutions","text":""},{"location":"errors/gemini-003/#check-if-api-key-is-configured","title":"Check if API key is configured","text":"<p>Verify that a Gemini API key is configured:</p> <pre><code>cursor-utils config api_keys\n</code></pre>"},{"location":"errors/gemini-003/#configure-or-update-api-key","title":"Configure or update API key","text":"<p>Set up or update your Gemini API key:</p> <pre><code>cursor-utils config api_keys --type GEMINI\n</code></pre>"},{"location":"errors/gemini-003/#test-api-key-validity","title":"Test API key validity","text":"<p>Check if your API key is valid:</p> <pre><code>cursor-utils test api_key --type GEMINI\n</code></pre>"},{"location":"errors/gemini-003/#verify-api-key-format","title":"Verify API key format","text":"<p>Google Gemini API keys typically: - Are 39 characters long - Begin with \"AI\" - Example: <code>AIzaSyC1a2b3c4d5e...</code></p>"},{"location":"errors/gemini-003/#create-a-new-api-key","title":"Create a new API key","text":"<p>If your current key is invalid or has issues, create a new one:</p> <ol> <li>Go to Google AI Studio</li> <li>Click on \"Create API Key\"</li> <li>Copy the new API key</li> <li>Configure it in Cursor Utils:    <pre><code>cursor-utils config api_keys --type GEMINI\n</code></pre></li> </ol>"},{"location":"errors/gemini-003/#check-for-environment-variables","title":"Check for environment variables","text":"<p>Ensure no conflicting environment variables are set:</p> <pre><code># Linux/macOS\nenv | grep GEMINI\n\n# Windows (PowerShell)\nGet-ChildItem Env: | Where-Object { $_.Name -match 'GEMINI' }\n</code></pre>"},{"location":"errors/gemini-003/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils test api_key</code> - Test API key validity</li> <li><code>cursor-utils gemini --help</code> - Show help for the Gemini command</li> </ul>"},{"location":"errors/gemini-003/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>GEMINI_API_ERROR (gemini-001) - Error with Gemini API</li> <li>GEMINI_MODEL_ERROR (gemini-002) - Error with Gemini model</li> <li>INVALID_API_KEY (config-001) - Invalid API key</li> <li>API_KEY_READ_ERROR (config-003) - Error reading API key</li> </ul>"},{"location":"errors/gemini-003/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/gemini-003/#check-env-file-directly","title":"Check .env file directly","text":"<p>Examine your .env file to ensure the API key is correctly stored:</p> <pre><code># Linux/macOS\ncat ~/.env | grep GEMINI\n\n# Windows (PowerShell)\nGet-Content ~/.env | Select-String GEMINI\n</code></pre> <p>The key should be stored in this format: <pre><code>GEMINI_API_KEY=your-key-here\n</code></pre></p>"},{"location":"errors/gemini-003/#check-for-api-key-restrictions","title":"Check for API key restrictions","text":"<p>Some API keys might have usage restrictions: - Visit Google AI Studio to check your key's limitations - Look for restrictions on models, usage quotas, or regional availability</p>"},{"location":"errors/gemini-003/#clear-cached-credentials","title":"Clear cached credentials","text":"<p>Clear any cached credentials that might be interfering:</p> <pre><code># Linux/macOS\nrm -f ~/.cursor-utils/cache/credentials*\n\n# Windows (PowerShell)\nRemove-Item -Path \"$HOME\\.cursor-utils\\cache\\credentials*\" -Force -ErrorAction SilentlyContinue\n</code></pre>"},{"location":"errors/gemini-003/#use-api-key-directly-for-testing","title":"Use API key directly for testing","text":"<p>For testing purposes, you can use the API key directly:</p> <pre><code>GEMINI_API_KEY=your-key-here cursor-utils gemini \"test prompt\"\n</code></pre>"},{"location":"errors/gemini-003/#api-key-management-best-practices","title":"API Key Management Best Practices","text":"<ol> <li>Regularly rotate keys: Create new keys and retire old ones periodically</li> <li>Secure storage: Store API keys securely and never share them</li> <li>Monitor usage: Keep track of your API usage to avoid hitting limits</li> <li>Use environment variables: Set keys as environment variables for security</li> <li>Don't embed in code: Never hardcode API keys in your code</li> <li>Set usage alerts: Configure alerts for unusual usage patterns</li> </ol>"},{"location":"errors/gemini-003/#google-ai-api-key-considerations","title":"Google AI API Key Considerations","text":""},{"location":"errors/gemini-003/#usage-limits","title":"Usage Limits","text":"<p>Google Gemini API keys have usage limits: - Requests per minute - Requests per day - Total tokens per month</p>"},{"location":"errors/gemini-003/#rate-limiting","title":"Rate Limiting","text":"<p>If you exceed rate limits, requests may fail with: - 429 (Too Many Requests) status codes - RESOURCE_EXHAUSTED error messages</p>"},{"location":"errors/gemini-003/#regional-availability","title":"Regional Availability","text":"<p>API keys may have regional restrictions: - Some features may not be available in all regions - Models may have different regional availability</p>"},{"location":"errors/gemini-003/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug mode:    <pre><code>cursor-utils gemini \"test prompt\" --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Verify Google service status:</p> </li> <li> <p>Google Cloud Status Dashboard</p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Debug log output</li> <li>Steps you've taken to troubleshoot</li> <li>Your operating system and Cursor Utils version </li> </ol>"},{"location":"errors/gemini-004/","title":"GEMINI_API_KEY_SAVE_ERROR (gemini-004)","text":""},{"location":"errors/gemini-004/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils fails to save the Google Gemini API key to its configuration or environment file. This could be due to permission issues, file system problems, or other issues with storing the API key.</p>"},{"location":"errors/gemini-004/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Failed to save Google Gemini API key\n  Code: gemini-004\n\n  Causes:\n  - Insufficient permissions to write to the .env file\n  - The .env file or directory is locked by another process\n  - The file system is read-only\n  - Disk space issues\n\n  Suggestion: Check file permissions and ensure you have write access\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/gemini-004.md\n</code></pre>"},{"location":"errors/gemini-004/#common-causes","title":"Common Causes","text":"<ol> <li>Permission Issues: The user doesn't have write permissions for the .env file.</li> <li>File Locking: The .env file is being used by another process.</li> <li>Read-Only File System: The file system where the .env file is located is mounted as read-only.</li> <li>Disk Space: There isn't enough disk space to write the updated file.</li> <li>Path Issues: The path to the .env file is incorrect or doesn't exist.</li> <li>Invalid API Key Format: The provided API key has an invalid format.</li> </ol>"},{"location":"errors/gemini-004/#solutions","title":"Solutions","text":""},{"location":"errors/gemini-004/#check-file-permissions","title":"Check file permissions","text":"<p>Ensure you have write permissions for the .env file:</p> <pre><code># Linux/macOS\nls -la ~/.env\nchmod 600 ~/.env  # Make it writable only by you for security\n\n# Windows (PowerShell)\nGet-Acl ~/.env\n# Then check through Windows Explorer if needed\n</code></pre>"},{"location":"errors/gemini-004/#ensure-env-directory-exists","title":"Ensure .env directory exists","text":"<p>Make sure the directory for the .env file exists:</p> <pre><code># Linux/macOS\nmkdir -p $(dirname ~/.env)\n\n# Windows (PowerShell)\n$envPath = \"$HOME\\.env\"\n$envDir = Split-Path -Path $envPath -Parent\nif (-not (Test-Path $envDir)) { New-Item -ItemType Directory -Path $envDir }\n</code></pre>"},{"location":"errors/gemini-004/#close-other-processes","title":"Close other processes","text":"<p>Ensure no other applications or processes are using the .env file: - Close any text editors or IDEs that might have the file open - Check for other instances of Cursor Utils that might be running</p>"},{"location":"errors/gemini-004/#run-with-elevated-privileges","title":"Run with elevated privileges","text":"<p>If you're trying to save to a system location, try running with elevated privileges:</p> <pre><code># Linux/macOS\nsudo cursor-utils config api_keys --type GEMINI\n\n# Windows (run as Administrator)\n</code></pre>"},{"location":"errors/gemini-004/#specify-an-alternative-location","title":"Specify an alternative location","text":"<p>You can specify an alternative location for the .env file:</p> <pre><code>cursor-utils config api_keys --type GEMINI --env-file /path/to/alternative/.env\n</code></pre>"},{"location":"errors/gemini-004/#verify-api-key-format","title":"Verify API key format","text":"<p>Ensure the API key has the correct format before saving: - Google Gemini API keys are typically 39 characters long - They usually begin with \"AI\" - Example: <code>AIzaSyC1a2b3c4d5e...</code></p>"},{"location":"errors/gemini-004/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils test api_key</code> - Test API key validity</li> <li><code>cursor-utils config paths</code> - View configuration file paths</li> </ul>"},{"location":"errors/gemini-004/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>GEMINI_API_KEY_ERROR (gemini-003) - Error with Gemini API key</li> <li>API_KEY_SAVE_ERROR (config-002) - Error saving API key</li> <li>ENV_FILE_ERROR (config-004) - Error with .env file</li> <li>FILE_WRITE_ERROR (install-005) - Error writing to file</li> </ul>"},{"location":"errors/gemini-004/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/gemini-004/#test-file-writing","title":"Test file writing","text":"<p>Test if you can write to the .env file location:</p> <pre><code># Linux/macOS\ntouch ~/.env.test\necho \"TEST=value\" &gt; ~/.env.test\ncat ~/.env.test\nrm ~/.env.test\n\n# Windows (PowerShell)\n\"TEST=value\" | Out-File -FilePath \"$HOME\\.env.test\"\nGet-Content \"$HOME\\.env.test\"\nRemove-Item \"$HOME\\.env.test\"\n</code></pre>"},{"location":"errors/gemini-004/#check-for-hidden-env-file","title":"Check for hidden .env file","text":"<p>Sometimes there might be a hidden .env file with different permissions:</p> <pre><code># Linux/macOS\nls -la ~ | grep \"\\.env\"\n\n# Windows (PowerShell)\nGet-ChildItem -Path $HOME -Hidden -Filter .env\n</code></pre>"},{"location":"errors/gemini-004/#manually-create-or-edit-the-env-file","title":"Manually create or edit the .env file","text":"<p>If automatic saving fails, you can manually create or edit the .env file:</p> <pre><code># Linux/macOS\necho \"GEMINI_API_KEY=your-key-here\" &gt;&gt; ~/.env\nchmod 600 ~/.env  # Set secure permissions\n\n# Windows (PowerShell)\n\"GEMINI_API_KEY=your-key-here\" | Out-File -FilePath \"$HOME\\.env\" -Append\n</code></pre>"},{"location":"errors/gemini-004/#use-environment-variables-directly","title":"Use environment variables directly","text":"<p>As a workaround, you can use environment variables directly:</p> <pre><code># Linux/macOS\nexport GEMINI_API_KEY=\"your-key-here\"\n\n# Windows (PowerShell)\n$env:GEMINI_API_KEY=\"your-key-here\"\n</code></pre>"},{"location":"errors/gemini-004/#security-considerations","title":"Security Considerations","text":"<p>When saving API keys, keep these security considerations in mind:</p> <ol> <li>File Permissions: Ensure the .env file has secure permissions (readable only by you)</li> <li>Location: Store the .env file in a secure location, not in public directories</li> <li>Backup: Keep a secure backup of your API keys</li> <li>Never Commit: Never commit the .env file to version control</li> <li>Key Rotation: Regularly rotate your API keys for improved security</li> </ol>"},{"location":"errors/gemini-004/#env-file-format","title":".env File Format","text":"<p>The .env file should contain key-value pairs like:</p> <pre><code>GEMINI_API_KEY=your-key-here\nPERPLEXITY_API_KEY=your-key-here\nGITHUB_TOKEN=your-token-here\n</code></pre> <p>Each key-value pair should be on a separate line with no extra spaces around the equals sign.</p>"},{"location":"errors/gemini-004/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils config api_keys --type GEMINI --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try using a completely different location for the .env file:    <pre><code>cursor-utils config api_keys --type GEMINI --env-file ~/gemini-key.env\n</code></pre></p> </li> <li> <p>Check for any file system issues or disk corruption.</p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Your operating system and version</li> <li>File system details (if known)</li> <li>Steps you've taken to troubleshoot </li> </ol>"},{"location":"errors/gemini-005/","title":"GEMINI_FILE_ERROR (gemini-005)","text":""},{"location":"errors/gemini-005/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue with a file while using the Gemini command. This could be due to problems with reading, processing, or accessing a file that was specified as context for the Gemini API request.</p>"},{"location":"errors/gemini-005/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Error with file in Gemini command\n  Code: gemini-005\n\n  Causes:\n  - The specified file does not exist\n  - Insufficient permissions to read the file\n  - The file format is not supported\n  - The file is too large for processing\n  - File path is invalid\n\n  Suggestion: Check that the file exists and is accessible\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/gemini-005.md\n</code></pre>"},{"location":"errors/gemini-005/#common-causes","title":"Common Causes","text":"<ol> <li>File Not Found: The specified file doesn't exist at the given path.</li> <li>Permission Issues: The user doesn't have permission to read the file.</li> <li>Invalid File Format: The file format is not supported or cannot be processed.</li> <li>File Size Limits: The file exceeds size limits for Gemini API requests.</li> <li>Path Issues: The file path is invalid or malformed.</li> <li>File Encoding: The file has an encoding that cannot be properly processed.</li> </ol>"},{"location":"errors/gemini-005/#solutions","title":"Solutions","text":""},{"location":"errors/gemini-005/#check-file-existence","title":"Check file existence","text":"<p>Verify that the file exists at the specified path:</p> <pre><code># Linux/macOS\nls -la /path/to/your/file\n\n# Windows (PowerShell)\nTest-Path -Path \"C:\\path\\to\\your\\file\"\n</code></pre>"},{"location":"errors/gemini-005/#check-file-permissions","title":"Check file permissions","text":"<p>Ensure you have read permissions for the file:</p> <pre><code># Linux/macOS\nls -la /path/to/your/file\nchmod 644 /path/to/your/file  # If needed\n\n# Windows (PowerShell)\nGet-Acl -Path \"C:\\path\\to\\your\\file\"\n</code></pre>"},{"location":"errors/gemini-005/#verify-file-format-and-size","title":"Verify file format and size","text":"<p>Check if the file is in a supported format and within size limits:</p> <pre><code># Linux/macOS\nfile /path/to/your/file  # Check file type\ndu -h /path/to/your/file  # Check file size\n\n# Windows (PowerShell)\nGet-Item -Path \"C:\\path\\to\\your\\file\" | Select-Object Length\n</code></pre> <p>Note: Gemini typically works best with text files. Very large files may need to be split or summarized before sending to the API.</p>"},{"location":"errors/gemini-005/#use-absolute-paths","title":"Use absolute paths","text":"<p>When specifying file paths, use absolute paths instead of relative ones:</p> <pre><code>cursor-utils gemini \"Analyze this code\" --append /absolute/path/to/file.py\n</code></pre>"},{"location":"errors/gemini-005/#fix-file-encoding-issues","title":"Fix file encoding issues","text":"<p>If the file has encoding issues, convert it to UTF-8:</p> <pre><code># Linux/macOS\niconv -f ORIGINAL_ENCODING -t UTF-8 /path/to/file &gt; /path/to/file.utf8\n\n# Windows (PowerShell)\nGet-Content -Path \"C:\\path\\to\\file\" -Encoding ORIGINAL_ENCODING | Set-Content -Path \"C:\\path\\to\\file.utf8\" -Encoding UTF8\n</code></pre>"},{"location":"errors/gemini-005/#try-a-different-file","title":"Try a different file","text":"<p>If one file is causing issues, try with a different file:</p> <pre><code>cursor-utils gemini \"your prompt\" --append /path/to/different/file.txt\n</code></pre>"},{"location":"errors/gemini-005/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils gemini --help</code> - Show help for the Gemini command</li> <li><code>cursor-utils gemini \"prompt\" --append FILE</code> - Use a file as context for the prompt</li> </ul>"},{"location":"errors/gemini-005/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>GEMINI_API_ERROR (gemini-001) - Error with Gemini API</li> <li>FILE_NOT_FOUND (install-002) - File not found during installation</li> <li>GENERAL_FILE_ERROR (general-002) - General file error</li> </ul>"},{"location":"errors/gemini-005/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/gemini-005/#check-file-content","title":"Check file content","text":"<p>Examine the content of the file to ensure it's valid:</p> <pre><code># Linux/macOS\ncat /path/to/your/file | head -20  # View first 20 lines\n\n# Windows (PowerShell)\nGet-Content -Path \"C:\\path\\to\\your\\file\" -TotalCount 20\n</code></pre>"},{"location":"errors/gemini-005/#check-for-hidden-characters","title":"Check for hidden characters","text":"<p>Look for hidden or non-printable characters that might cause issues:</p> <pre><code># Linux/macOS\nxxd /path/to/your/file | head\n\n# Windows (PowerShell)\nFormat-Hex -Path \"C:\\path\\to\\your\\file\" -Count 100\n</code></pre>"},{"location":"errors/gemini-005/#try-preprocessing-the-file","title":"Try preprocessing the file","text":"<p>For large or complex files, try preprocessing them:</p> <pre><code># Extract only text content\ngrep -v \"^$\" /path/to/your/file | grep -v \"^#\" &gt; /path/to/simplified.txt\n\n# Or limit to the most relevant section\nsed -n '100,200p' /path/to/your/file &gt; /path/to/section.txt\n</code></pre>"},{"location":"errors/gemini-005/#debug-file-processing","title":"Debug file processing","text":"<p>Run with debug mode to see how the file is being processed:</p> <pre><code>cursor-utils gemini \"your prompt\" --append /path/to/your/file --debug\n</code></pre>"},{"location":"errors/gemini-005/#file-limitations-for-gemini-api","title":"File Limitations for Gemini API","text":"<p>When using files with the Gemini API, be aware of these limitations:</p>"},{"location":"errors/gemini-005/#file-size","title":"File Size","text":"<ul> <li>The Gemini API has token limits for inputs</li> <li>Large files may be truncated or rejected</li> <li>Consider splitting large files into smaller chunks</li> </ul>"},{"location":"errors/gemini-005/#file-types","title":"File Types","text":"<p>Files that work best: - Plain text (<code>.txt</code>) - Source code (<code>.py</code>, <code>.js</code>, etc.) - Markdown (<code>.md</code>) - JSON (<code>.json</code>) - YAML (<code>.yaml</code>, <code>.yml</code>)</p> <p>Files that may cause issues: - Binary files - Very large files - Files with unusual encodings - Files with complex formatting</p>"},{"location":"errors/gemini-005/#context-window-limitations","title":"Context Window Limitations","text":"<p>The Gemini API has a maximum context window size: - Total tokens (input + output) must be within limits - Model-specific limits apply (e.g., 32K tokens for Gemini Pro) - Consider summarizing or focusing on relevant parts of large files</p>"},{"location":"errors/gemini-005/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils gemini \"your prompt\" --append /path/to/your/file --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try with a simple text file:    <pre><code>echo \"Test content\" &gt; ~/test.txt\ncursor-utils gemini \"Analyze this\" --append ~/test.txt\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Information about the file (type, size, encoding if known)</li> <li>The command you were trying to run</li> <li>Output of debug logs </li> </ol>"},{"location":"errors/github-001/","title":"GITHUB_AUTH_ERROR (github-001)","text":""},{"location":"errors/github-001/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils cannot authenticate with GitHub due to invalid, expired, or missing authentication credentials. This error prevents GitHub-related commands from functioning correctly.</p>"},{"location":"errors/github-001/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: GitHub authentication failed\n  Code: github-001\n\n  Causes:\n  - Invalid or expired GitHub token\n  - Missing GitHub token\n  - Insufficient permissions for the requested operation\n  - GitHub API rate limit exceeded\n\n  Suggestion: Check your GitHub token and ensure it has the required permissions\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/github-001.md\n</code></pre>"},{"location":"errors/github-001/#common-causes","title":"Common Causes","text":"<ol> <li>Invalid Token: Your GitHub token is incorrect or has been revoked.</li> <li>Expired Token: Your GitHub token has expired.</li> <li>Missing Token: You haven't set up a GitHub token.</li> <li>Insufficient Permissions: Your token doesn't have the required scopes or permissions for the operation.</li> <li>Rate Limiting: You have exceeded the GitHub API rate limits.</li> <li>2FA Requirements: Your GitHub account requires two-factor authentication, but it's not properly configured.</li> </ol>"},{"location":"errors/github-001/#solutions","title":"Solutions","text":""},{"location":"errors/github-001/#check-your-github-token","title":"Check your GitHub token","text":"<p>Verify that your GitHub token is correctly set up:</p> <pre><code>cursor-utils config api_keys\n</code></pre> <p>If your token is not set or needs to be updated, you can set it with:</p> <pre><code>cursor-utils config api_keys --type GITHUB\n</code></pre>"},{"location":"errors/github-001/#create-a-new-github-token","title":"Create a new GitHub token","text":"<p>If your token has expired or been revoked, create a new one:</p> <ol> <li>Go to GitHub Personal Access Tokens</li> <li>Click \"Generate new token\"</li> <li>Select the appropriate scopes:</li> <li>For most cursor-utils operations, you need at least:<ul> <li><code>repo</code> (Full control of private repositories)</li> <li><code>read:org</code> (Read organization membership)</li> <li><code>workflow</code> (For CI/CD workflows)</li> </ul> </li> <li>Generate the token and copy it</li> <li>Set it in cursor-utils:    <pre><code>cursor-utils config api_keys --type GITHUB\n</code></pre></li> </ol>"},{"location":"errors/github-001/#check-token-environment-variable","title":"Check token environment variable","text":"<p>Ensure the token is correctly set in your environment:</p> <pre><code># Linux/macOS\ngrep GITHUB_TOKEN ~/.env\n\n# Windows (PowerShell)\nGet-Content ~/.env | Select-String GITHUB_TOKEN\n</code></pre>"},{"location":"errors/github-001/#check-token-permissions","title":"Check token permissions","text":"<p>Verify that your token has the required permissions:</p> <ol> <li>Go to GitHub Personal Access Tokens</li> <li>Find your token and check its scopes</li> <li>If needed, create a new token with the appropriate scopes</li> </ol>"},{"location":"errors/github-001/#check-rate-limits","title":"Check rate limits","text":"<p>If you're hitting rate limits, you can check your current GitHub API rate limit status:</p> <pre><code>curl -s -H \"Authorization: token YOUR_GITHUB_TOKEN\" https://api.github.com/rate_limit\n</code></pre>"},{"location":"errors/github-001/#run-in-debug-mode","title":"Run in debug mode","text":"<p>Execute the command with the debug flag to get more detailed error information:</p> <pre><code>cursor-utils github analyze owner/repo --debug\n</code></pre>"},{"location":"errors/github-001/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils github --help</code> - Show help for the GitHub command</li> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/github-001/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>GITHUB_API_ERROR (github-002) - GitHub API error</li> <li>GITHUB_REPO_NOT_FOUND (github-003) - GitHub repository not found</li> <li>GITHUB_PERMISSION_ERROR (github-004) - GitHub permission error</li> <li>GITHUB_RATE_LIMIT (github-005) - GitHub rate limit exceeded</li> </ul>"},{"location":"errors/github-001/#token-security-best-practices","title":"Token Security Best Practices","text":"<ol> <li>Never commit tokens to version control</li> <li>Set an expiration date on your tokens</li> <li>Use the least privilege principle - only grant the scopes you need</li> <li>Regularly rotate your tokens</li> <li>Consider using GitHub Apps instead of personal access tokens for organizational use</li> <li>Enable 2FA on your GitHub account</li> </ol>"},{"location":"errors/github-001/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/github-001/#check-token-validity","title":"Check token validity","text":"<p>Test if your GitHub token is valid:</p> <pre><code>curl -s -H \"Authorization: token YOUR_GITHUB_TOKEN\" https://api.github.com/user\n</code></pre> <p>If the token is valid, this should return information about your GitHub user.</p>"},{"location":"errors/github-001/#check-for-environment-variable-conflicts","title":"Check for environment variable conflicts","text":"<p>Ensure there are no conflicting environment variables:</p> <pre><code># Linux/macOS\nenv | grep -i github\n\n# Windows (PowerShell)\nGet-ChildItem Env: | Where-Object { $_.Name -match 'github' }\n</code></pre>"},{"location":"errors/github-001/#check-github-api-status","title":"Check GitHub API status","text":"<p>Check if the GitHub API is experiencing issues:</p> <pre><code>curl -s https://www.githubstatus.com/api/v2/status.json\n</code></pre>"},{"location":"errors/github-001/#use-a-different-token-temporarily","title":"Use a different token temporarily","text":"<p>If you suspect your token has issues, create a new temporary token for testing:</p> <ol> <li>Go to GitHub Personal Access Tokens</li> <li>Create a new token with minimal scopes</li> <li>Use it directly in the command:    <pre><code>GITHUB_TOKEN=your-temp-token cursor-utils github analyze owner/repo\n</code></pre></li> </ol>"},{"location":"errors/github-001/#github-token-scopes","title":"GitHub Token Scopes","text":"<p>Different operations require different token scopes:</p> Operation Required Scopes Public repo operations <code>public_repo</code> Private repo operations <code>repo</code> Organization access <code>read:org</code> Workflow actions <code>workflow</code> GitHub packages <code>packages:read</code> or <code>packages:write</code> User information <code>user</code> GPG key management <code>admin:gpg_key</code>"},{"location":"errors/github-001/#github-authentication-errors","title":"GitHub Authentication Errors","text":"<p>Common GitHub authentication errors and their solutions:</p> Error Description Solution Bad credentials Invalid token Create new token Token revoked Token was revoked Create new token Insufficient scopes Token missing required scopes Add necessary scopes User not authenticated Missing token Provide token Maximum number of login attempts Too many failed attempts Wait before retrying"},{"location":"errors/github-001/#github-api-configuration","title":"GitHub API Configuration","text":"<p>You can configure GitHub settings in your <code>cursor-utils.yaml</code> file:</p> <pre><code>github:\n  token_source: \"env\"  # 'env' or 'config'\n  default_owner: \"username\"\n  default_repo: \"repo-name\"\n  template_dir: \"~/.cursor-utils/templates/github\"\n</code></pre>"},{"location":"errors/github-001/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Try with a fresh token with all required scopes.</p> </li> <li> <p>Run with debug logging:    <pre><code>cursor-utils github analyze owner/repo --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>The command you were trying to run</li> <li>Debug log output (with sensitive information redacted)</li> <li>What solutions you've already tried </li> </ol>"},{"location":"errors/github-002/","title":"GITHUB_API_ERROR (github-002)","text":""},{"location":"errors/github-002/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue while communicating with the GitHub API. This could be due to problems with the API request, response format, server errors, or other API-related issues.</p>"},{"location":"errors/github-002/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: GitHub API error\n  Code: github-002\n\n  Causes:\n  - GitHub API service is unavailable\n  - API request contains invalid parameters\n  - Response from GitHub API is malformed\n  - Network connectivity issues\n  - API version incompatibility\n\n  Suggestion: Check the error details and try again later\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/github-002.md\n</code></pre>"},{"location":"errors/github-002/#common-causes","title":"Common Causes","text":"<ol> <li>API Service Issues: The GitHub API service is experiencing problems or downtime.</li> <li>Invalid Request: The request to the GitHub API contains invalid parameters or formatting.</li> <li>Rate Limiting: You've hit rate limits for API requests.</li> <li>Network Issues: Problems with network connectivity to GitHub's servers.</li> <li>Response Format: The API response is unexpected or malformed.</li> <li>GitHub Changes: Changes to the GitHub API that are incompatible with Cursor Utils.</li> </ol>"},{"location":"errors/github-002/#solutions","title":"Solutions","text":""},{"location":"errors/github-002/#check-github-status","title":"Check GitHub status","text":"<p>Verify if GitHub and its API are experiencing issues:</p> <pre><code>curl -s https://www.githubstatus.com/api/v2/status.json\n</code></pre> <p>You can also visit the GitHub Status Page to check for reported outages.</p>"},{"location":"errors/github-002/#check-your-internet-connection","title":"Check your internet connection","text":"<p>Ensure you have a stable internet connection:</p> <pre><code>ping api.github.com\ncurl -I https://api.github.com\n</code></pre>"},{"location":"errors/github-002/#check-rate-limits","title":"Check rate limits","text":"<p>Verify your current GitHub API rate limit status:</p> <pre><code># Replace YOUR_GITHUB_TOKEN with your actual token\ncurl -s -H \"Authorization: token YOUR_GITHUB_TOKEN\" https://api.github.com/rate_limit\n</code></pre>"},{"location":"errors/github-002/#update-cursor-utils","title":"Update Cursor Utils","text":"<p>Make sure you're using the latest version of Cursor Utils:</p> <pre><code>cursor-utils update\n</code></pre>"},{"location":"errors/github-002/#run-with-debug-mode","title":"Run with debug mode","text":"<p>Execute the command with debug mode to get more detailed error information:</p> <pre><code>cursor-utils github analyze owner/repo --debug\n</code></pre>"},{"location":"errors/github-002/#try-a-simpler-command","title":"Try a simpler command","text":"<p>If a complex command is failing, try a simpler one to isolate the issue:</p> <pre><code>cursor-utils github user info\n</code></pre>"},{"location":"errors/github-002/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils github --help</code> - Show help for the GitHub command</li> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/github-002/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>GITHUB_AUTH_ERROR (github-001) - GitHub authentication error</li> <li>GITHUB_REPO_NOT_FOUND (github-003) - GitHub repository not found</li> <li>GITHUB_PERMISSION_ERROR (github-004) - GitHub permission error</li> <li>GITHUB_RATE_LIMIT (github-005) - GitHub rate limit exceeded</li> </ul>"},{"location":"errors/github-002/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/github-002/#check-api-request-details","title":"Check API request details","text":"<p>Examine the API request that's causing issues:</p> <pre><code># Run with debug and verbose logging\ncursor-utils github analyze owner/repo --debug --verbose\n</code></pre>"},{"location":"errors/github-002/#test-api-endpoint-directly","title":"Test API endpoint directly","text":"<p>Try accessing the GitHub API endpoint directly:</p> <pre><code># Replace YOUR_GITHUB_TOKEN with your actual token\ncurl -v -H \"Authorization: token YOUR_GITHUB_TOKEN\" https://api.github.com/repos/owner/repo\n</code></pre>"},{"location":"errors/github-002/#check-for-api-changes","title":"Check for API changes","text":"<p>Check the GitHub API Changelog for recent changes that might affect your usage.</p>"},{"location":"errors/github-002/#check-proxy-settings","title":"Check proxy settings","text":"<p>If you're behind a proxy, ensure it's correctly configured:</p> <pre><code># Check proxy environment variables\necho $HTTP_PROXY\necho $HTTPS_PROXY\n\n# Set proxy if needed\nexport HTTP_PROXY=http://proxy:port\nexport HTTPS_PROXY=http://proxy:port\n</code></pre>"},{"location":"errors/github-002/#github-api-error-codes","title":"GitHub API Error Codes","text":"<p>Common GitHub API error codes and their meanings:</p> HTTP Status Description Common Cause 400 Bad Request Invalid request parameters 401 Unauthorized Authentication issue 403 Forbidden Insufficient permissions 404 Not Found Resource doesn't exist 422 Unprocessable Entity Validation failed 429 Too Many Requests Rate limit exceeded 500 Internal Server Error GitHub server issue 503 Service Unavailable GitHub service down"},{"location":"errors/github-002/#github-api-limitations","title":"GitHub API Limitations","text":"<p>Be aware of these GitHub API limitations:</p> <ul> <li>Rate Limits: GitHub has different rate limits based on authentication and API endpoints.</li> <li>Pagination: Large result sets are paginated and may require multiple requests.</li> <li>Payload Size: There are limits to the size of data you can send in requests.</li> <li>Concurrent Requests: Too many concurrent requests may be throttled.</li> <li>Preview Features: Some API features might be in preview and subject to change.</li> </ul>"},{"location":"errors/github-002/#github-api-configuration","title":"GitHub API Configuration","text":"<p>You can configure GitHub API settings in your <code>cursor-utils.yaml</code> file:</p> <pre><code>github:\n  api_version: \"2022-11-28\"  # API version to use\n  accept_header: \"application/vnd.github.v3+json\"  # Accept header for requests\n  timeout: 30  # Timeout in seconds\n  retries: 3  # Number of retry attempts\n</code></pre>"},{"location":"errors/github-002/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li>Check the GitHub API documentation:</li> <li> <p>GitHub REST API Documentation</p> </li> <li> <p>Run with maximum debug information:    <pre><code>cursor-utils github analyze owner/repo --debug --verbose\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>The exact command you were trying to run</li> <li>Output of the debug logs</li> <li>Your Cursor Utils version (<code>cursor-utils --version</code>)</li> <li>Steps you've taken to troubleshoot </li> </ol>"},{"location":"errors/github-003/","title":"GITHUB_REPO_NOT_FOUND (github-003)","text":""},{"location":"errors/github-003/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils attempts to access a GitHub repository that cannot be found. This could be due to the repository not existing, being private with insufficient access permissions, or having been renamed or deleted.</p>"},{"location":"errors/github-003/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: GitHub repository not found\n  Code: github-003\n\n  Causes:\n  - The repository does not exist\n  - The repository is private and you don't have access\n  - The repository has been renamed or moved\n  - There is a typo in the repository name or owner\n  - The repository has been deleted\n\n  Suggestion: Check the repository name and ensure it exists\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/github-003.md\n</code></pre>"},{"location":"errors/github-003/#common-causes","title":"Common Causes","text":"<ol> <li>Non-existent Repository: The specified repository doesn't exist on GitHub.</li> <li>Private Repository: The repository exists but is private, and you don't have permission to access it.</li> <li>Renamed Repository: The repository has been renamed or transferred to a different owner.</li> <li>Typos: There's a typo in the repository name or owner.</li> <li>Deleted Repository: The repository has been deleted from GitHub.</li> <li>GitHub Account Issues: The GitHub account that owns the repository has been suspended or deleted.</li> </ol>"},{"location":"errors/github-003/#solutions","title":"Solutions","text":""},{"location":"errors/github-003/#check-repository-existence","title":"Check repository existence","text":"<p>Verify that the repository exists by navigating to it in a web browser:</p> <pre><code>https://github.com/owner/repo\n</code></pre> <p>Where <code>owner</code> is the username or organization name, and <code>repo</code> is the repository name.</p>"},{"location":"errors/github-003/#check-for-typos","title":"Check for typos","text":"<p>Ensure there are no typos in the repository name or owner:</p> <pre><code># Example of correct usage\ncursor-utils github analyze owner/repo\n\n# Common typo (incorrect)\ncursor-utils github analyze onwer/repo  # Typo in 'owner'\n</code></pre>"},{"location":"errors/github-003/#check-access-permissions","title":"Check access permissions","text":"<p>If the repository is private, ensure you have access to it:</p> <ol> <li>Try accessing the repository in a web browser while logged into GitHub</li> <li>Check if you've been invited to the repository</li> <li>Request access from the repository owner</li> </ol>"},{"location":"errors/github-003/#check-for-repository-changes","title":"Check for repository changes","text":"<p>If the repository previously existed but now returns a 404, check if it has been: - Renamed - Transferred to a different owner - Made private - Deleted</p>"},{"location":"errors/github-003/#use-a-different-repository","title":"Use a different repository","text":"<p>If you're unable to access the repository, try using a different one:</p> <pre><code>cursor-utils github analyze different-owner/different-repo\n</code></pre>"},{"location":"errors/github-003/#update-github-token","title":"Update GitHub token","text":"<p>Ensure your GitHub token has the necessary permissions:</p> <pre><code>cursor-utils config api_keys --type GITHUB\n</code></pre>"},{"location":"errors/github-003/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils github --help</code> - Show help for the GitHub command</li> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/github-003/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>GITHUB_AUTH_ERROR (github-001) - GitHub authentication error</li> <li>GITHUB_API_ERROR (github-002) - GitHub API error</li> <li>GITHUB_PERMISSION_ERROR (github-004) - GitHub permission error</li> <li>REPO_INVALID_URL (repo-004) - Invalid repository URL</li> </ul>"},{"location":"errors/github-003/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/github-003/#test-repository-access-via-api","title":"Test repository access via API","text":"<p>Check if the repository is accessible via the GitHub API:</p> <pre><code># Replace YOUR_GITHUB_TOKEN with your actual token\ncurl -s -H \"Authorization: token YOUR_GITHUB_TOKEN\" https://api.github.com/repos/owner/repo\n</code></pre> <p>If this returns a 404 error, the repository doesn't exist or you don't have access to it.</p>"},{"location":"errors/github-003/#check-repository-visibility","title":"Check repository visibility","text":"<p>If you own the repository, check its visibility settings:</p> <ol> <li>Go to the repository on GitHub</li> <li>Click on \"Settings\"</li> <li>Scroll down to the \"Danger Zone\"</li> <li>Check the \"Change repository visibility\" section</li> </ol>"},{"location":"errors/github-003/#check-organization-access","title":"Check organization access","text":"<p>If the repository belongs to an organization:</p> <ol> <li>Ensure you're a member of the organization</li> <li>Check your access level within the organization</li> <li>Contact the organization administrators if necessary</li> </ol>"},{"location":"errors/github-003/#try-a-different-github-account","title":"Try a different GitHub account","text":"<p>If possible, try accessing the repository with a different GitHub account to determine if it's an issue with your specific account.</p>"},{"location":"errors/github-003/#github-repository-url-formats","title":"GitHub Repository URL Formats","text":"<p>Valid GitHub repository URL formats:</p> <pre><code>github.com/owner/repo\nhttps://github.com/owner/repo\nowner/repo (shorthand format)\n</code></pre>"},{"location":"errors/github-003/#github-repository-status-codes","title":"GitHub Repository Status Codes","text":"<p>Common HTTP status codes for repository access:</p> Status Code Description Common Cause 200 OK Repository exists and is accessible 301 Moved Permanently Repository has been renamed or transferred 404 Not Found Repository doesn't exist or you don't have access 403 Forbidden Repository exists but you don't have permission 410 Gone Repository has been deleted"},{"location":"errors/github-003/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils github analyze owner/repo --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try a known public repository:    <pre><code>cursor-utils github analyze octocat/Spoon-Knife\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>The repository you're trying to access</li> <li>The output of the debug logs</li> <li>What solutions you've already tried </li> </ol>"},{"location":"errors/github-004/","title":"GITHUB_PERMISSION_ERROR (github-004)","text":""},{"location":"errors/github-004/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils attempts to perform an operation on a GitHub repository but lacks the necessary permissions. This could be due to insufficient token scopes, repository access restrictions, or organization-level permissions.</p>"},{"location":"errors/github-004/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: GitHub permission error\n  Code: github-004\n\n  Causes:\n  - Your GitHub token lacks the required scopes\n  - You don't have sufficient access to the repository\n  - The repository has access restrictions\n  - Organization policies prevent the requested action\n  - The action requires admin permissions\n\n  Suggestion: Check your GitHub token permissions and repository access\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/github-004.md\n</code></pre>"},{"location":"errors/github-004/#common-causes","title":"Common Causes","text":"<ol> <li>Insufficient Token Scopes: Your GitHub token doesn't have the necessary scopes for the operation.</li> <li>Repository Access Level: You have access to the repository but not at the level required (e.g., read-only vs. write).</li> <li>Protected Branches: The operation involves a protected branch with restricted access.</li> <li>Organization Restrictions: The organization has policies that restrict certain operations.</li> <li>Repository Settings: The repository has settings that limit what actions can be performed.</li> <li>Two-Factor Authentication: The account requires 2FA for certain operations.</li> </ol>"},{"location":"errors/github-004/#solutions","title":"Solutions","text":""},{"location":"errors/github-004/#check-token-scopes","title":"Check token scopes","text":"<p>Verify that your GitHub token has the necessary scopes:</p> <pre><code># Check token info using curl\ncurl -s -H \"Authorization: token YOUR_GITHUB_TOKEN\" https://api.github.com/user | grep -A 5 scopes\n</code></pre> <p>Common required scopes: - <code>repo</code> - Full control of private repositories - <code>public_repo</code> - Control of public repositories - <code>read:org</code> - Read organization information - <code>user</code> - Read user information - <code>workflow</code> - Access to GitHub Actions workflows</p>"},{"location":"errors/github-004/#generate-a-new-token-with-proper-scopes","title":"Generate a new token with proper scopes","text":"<p>Create a new GitHub token with the appropriate scopes:</p> <ol> <li>Go to GitHub Personal Access Tokens</li> <li>Click \"Generate new token\"</li> <li>Select the necessary scopes (especially <code>repo</code> for full repository access)</li> <li>Configure it in Cursor Utils:    <pre><code>cursor-utils config api_keys --type GITHUB\n</code></pre></li> </ol>"},{"location":"errors/github-004/#check-repository-access-level","title":"Check repository access level","text":"<p>Verify your access level to the repository:</p> <ol> <li>Go to the repository on GitHub</li> <li>Click on \"Settings\" (if you can see it)</li> <li>Look for \"Manage access\" to check your role</li> </ol> <p>Access levels: - Read - Can view and clone the repository - Triage - Can manage issues and pull requests - Write - Can push to the repository - Maintain - Can manage the repository without admin access - Admin - Full control of the repository</p>"},{"location":"errors/github-004/#check-for-protected-branches","title":"Check for protected branches","text":"<p>If working with branches, check if they're protected:</p> <ol> <li>Go to the repository on GitHub</li> <li>Click on \"Settings\" \u2192 \"Branches\"</li> <li>Look for branch protection rules</li> </ol>"},{"location":"errors/github-004/#ask-for-additional-permissions","title":"Ask for additional permissions","text":"<p>If you need more access:</p> <ol> <li>Contact the repository owner or organization admin</li> <li>Specify what operations you need to perform</li> <li>Request the appropriate level of access</li> </ol>"},{"location":"errors/github-004/#try-a-repository-you-own","title":"Try a repository you own","text":"<p>If you're having permission issues, try with a repository you own:</p> <pre><code>cursor-utils github analyze YOUR_USERNAME/YOUR_REPO\n</code></pre>"},{"location":"errors/github-004/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils github --help</code> - Show help for the GitHub command</li> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/github-004/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>GITHUB_AUTH_ERROR (github-001) - GitHub authentication error</li> <li>GITHUB_API_ERROR (github-002) - GitHub API error</li> <li>GITHUB_REPO_NOT_FOUND (github-003) - GitHub repository not found</li> <li>GITHUB_RATE_LIMIT (github-005) - GitHub rate limit exceeded</li> </ul>"},{"location":"errors/github-004/#github-permission-levels","title":"GitHub Permission Levels","text":"<p>GitHub has different permission levels for repositories:</p> Permission Level Description Common Actions Read Can view and clone Read code, issues, discussions Triage Can manage issues Label issues, close inactive issues Write Can push changes Push commits, create branches Maintain Can manage repo Merge PRs, manage settings (except security) Admin Full control Delete repo, add collaborators, change visibility"},{"location":"errors/github-004/#github-token-scopes","title":"GitHub Token Scopes","text":"<p>Different operations require different token scopes:</p> Scope Description Example Use Cases <code>repo</code> Full access to private and public repositories Clone, push, manage issues, webhooks <code>public_repo</code> Access to public repositories only Public repo operations <code>repo:status</code> Access commit statuses CI/CD integration <code>repo_deployment</code> Access deployment statuses Deployment workflows <code>read:org</code> Read organization information List organization repositories <code>user</code> Read user profile information Get authenticated user info <code>admin:org</code> Organization administration Manage organization settings <code>admin:repo_hook</code> Manage repository webhooks Set up notifications <code>workflow</code> Access to Actions workflows Work with GitHub Actions"},{"location":"errors/github-004/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/github-004/#test-api-calls-with-different-scopes","title":"Test API calls with different scopes","text":"<p>Test API calls with different token scopes to identify what's needed:</p> <pre><code># Create a test token with minimal scopes\n# Then test specific API endpoints\ncurl -s -H \"Authorization: token YOUR_TEST_TOKEN\" https://api.github.com/repos/owner/repo\n</code></pre>"},{"location":"errors/github-004/#check-for-organization-restrictions","title":"Check for organization restrictions","text":"<p>Some organizations have additional restrictions:</p> <ol> <li>Go to the organization page</li> <li>Click on \"Settings\" \u2192 \"Member privileges\"</li> <li>Check for restrictions on repository creation, deletion, etc.</li> </ol>"},{"location":"errors/github-004/#look-for-two-factor-authentication-requirements","title":"Look for two-factor authentication requirements","text":"<p>Some operations require 2FA to be enabled:</p> <ol> <li>Go to your GitHub account settings</li> <li>Click on \"Password and authentication\"</li> <li>Check if 2FA is enabled</li> </ol>"},{"location":"errors/github-004/#check-for-third-party-access-restrictions","title":"Check for third-party access restrictions","text":"<p>Some organizations restrict third-party application access:</p> <ol> <li>Go to the organization page</li> <li>Click on \"Settings\" \u2192 \"Third-party access\"</li> <li>Check for restrictions</li> </ol>"},{"location":"errors/github-004/#permission-error-types","title":"Permission Error Types","text":"<p>Common GitHub permission errors and their meanings:</p> Error Message Description Solution Not Found Resource exists but you don't have permission to see it Request access Resource not accessible by integration OAuth App or GitHub App lacks access Update App permissions Organization has enabled OAuth App access restrictions Third-party restrictions are active Request organization approval You need admin permissions Operation requires administrator privileges Request admin access Repository is archived Cannot modify archived repositories Unarchive repository if allowed Branch is protected Cannot modify protected branches Get write access to protected branches"},{"location":"errors/github-004/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils github analyze owner/repo --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Test with a personal repository where you have full control:    <pre><code># Create a test repo on GitHub first\ncursor-utils github analyze YOUR_USERNAME/test-repo\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>The operation you were trying to perform</li> <li>Your GitHub username</li> <li>The repository you were trying to access</li> <li>Output of debug logs (with sensitive information redacted) </li> </ol>"},{"location":"errors/github-005/","title":"GITHUB_RATE_LIMIT (github-005)","text":""},{"location":"errors/github-005/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils has exceeded the GitHub API rate limits. GitHub limits the number of API requests that can be made within a certain time period to ensure service stability and fair usage. When these limits are reached, API requests will be rejected until the rate limit resets.</p>"},{"location":"errors/github-005/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: GitHub API rate limit exceeded\n  Code: github-005\n\n  Causes:\n  - You've exceeded the GitHub API request limit\n  - Multiple applications using the same token\n  - Running commands in rapid succession\n  - Token has lower rate limits (unauthenticated or OAuth App)\n  - Rate limits differ across GitHub API endpoints\n\n  Suggestion: Wait for the rate limit to reset or use a token with higher limits\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/github-005.md\n</code></pre>"},{"location":"errors/github-005/#common-causes","title":"Common Causes","text":"<ol> <li>Exceeded Request Limit: You've made too many API requests within the rate limit window.</li> <li>Shared Token Usage: Multiple applications or scripts are using the same GitHub token.</li> <li>Batch Operations: Running commands that make multiple API calls in rapid succession.</li> <li>Unauthenticated Requests: Making requests without authentication, which have much lower limits.</li> <li>Search API Usage: The Search API has stricter rate limits than other GitHub APIs.</li> <li>Secondary Rate Limits: Triggered by making too many requests in a short time period.</li> </ol>"},{"location":"errors/github-005/#solutions","title":"Solutions","text":""},{"location":"errors/github-005/#check-your-current-rate-limit-status","title":"Check your current rate limit status","text":"<p>View your current GitHub API rate limit status:</p> <pre><code># Replace YOUR_GITHUB_TOKEN with your actual token\ncurl -s -H \"Authorization: token YOUR_GITHUB_TOKEN\" https://api.github.com/rate_limit\n</code></pre> <p>This will show: - Your current remaining requests - The total limit - When the rate limit will reset</p>"},{"location":"errors/github-005/#wait-for-the-rate-limit-to-reset","title":"Wait for the rate limit to reset","text":"<p>Rate limits typically reset hourly. You can wait until the reset time shown in the rate limit response:</p> <pre><code># Extract reset time from rate limit response\nreset_time=$(curl -s -H \"Authorization: token YOUR_GITHUB_TOKEN\" https://api.github.com/rate_limit | grep \"reset\" | head -1 | awk '{print $2}' | tr -d ',')\necho \"Rate limit resets at: $(date -d @$reset_time)\"\n</code></pre>"},{"location":"errors/github-005/#use-conditional-requests","title":"Use conditional requests","text":"<p>Implement conditional requests using ETags to avoid consuming rate limits for unchanged resources:</p> <pre><code># First request to get ETag\nresponse=$(curl -i -H \"Authorization: token YOUR_GITHUB_TOKEN\" https://api.github.com/repos/owner/repo)\netag=$(echo \"$response\" | grep ETag | awk '{print $2}')\n\n# Second request using ETag\ncurl -i -H \"Authorization: token YOUR_GITHUB_TOKEN\" -H \"If-None-Match: $etag\" https://api.github.com/repos/owner/repo\n</code></pre>"},{"location":"errors/github-005/#use-a-personal-access-token","title":"Use a personal access token","text":"<p>Ensure you're using authentication, as authenticated requests have higher rate limits:</p> <pre><code>cursor-utils config api_keys --type GITHUB\n</code></pre>"},{"location":"errors/github-005/#use-a-github-app-token","title":"Use a GitHub App token","text":"<p>GitHub Apps have higher rate limits than personal access tokens. Consider using a GitHub App if you need higher limits.</p>"},{"location":"errors/github-005/#implement-request-throttling","title":"Implement request throttling","text":"<p>Add delays between commands or implement exponential backoff:</p> <pre><code># Wait 5 seconds between commands\ncursor-utils github analyze owner/repo1\nsleep 5\ncursor-utils github analyze owner/repo2\n</code></pre>"},{"location":"errors/github-005/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils github --help</code> - Show help for the GitHub command</li> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/github-005/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>GITHUB_AUTH_ERROR (github-001) - GitHub authentication error</li> <li>GITHUB_API_ERROR (github-002) - GitHub API error</li> <li>GITHUB_REPO_NOT_FOUND (github-003) - GitHub repository not found</li> <li>GITHUB_PERMISSION_ERROR (github-004) - GitHub permission error</li> </ul>"},{"location":"errors/github-005/#github-api-rate-limits","title":"GitHub API Rate Limits","text":"<p>GitHub has different rate limits based on authentication status and API endpoints:</p> Authentication Type Core API Limit Search API Limit GraphQL API Limit Unauthenticated 60 per hour 10 per minute N/A (requires auth) Personal Access Token 5,000 per hour 30 per minute 5,000 points per hour GitHub App 5,000 per hour per installation 30 per minute 5,000 points per hour GitHub Enterprise 15,000+ per hour 60+ per minute 15,000+ points per hour"},{"location":"errors/github-005/#understanding-rate-limit-headers","title":"Understanding Rate Limit Headers","text":"<p>GitHub API responses include rate limit headers:</p> Header Description <code>X-RateLimit-Limit</code> The maximum number of requests allowed in the rate limit window <code>X-RateLimit-Remaining</code> The number of requests remaining in the current rate limit window <code>X-RateLimit-Reset</code> The time (in Unix epoch seconds) when the rate limit window resets <code>X-RateLimit-Used</code> The number of requests used in the current rate limit window <code>X-RateLimit-Resource</code> The rate limit grouping this request counts against"},{"location":"errors/github-005/#secondary-rate-limits","title":"Secondary Rate Limits","text":"<p>GitHub also implements secondary rate limits to prevent abuse:</p> <ul> <li>Triggered by making too many requests in a short time period</li> <li>Not publicly documented with specific thresholds</li> <li>Results in HTTP 403 responses with a \"secondary rate limit\" message</li> <li>May require exponential backoff strategies</li> </ul>"},{"location":"errors/github-005/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/github-005/#monitor-rate-limit-consumption","title":"Monitor rate limit consumption","text":"<p>Track your rate limit usage over time:</p> <pre><code># Create a simple monitoring script\nwhile true; do\n  curl -s -H \"Authorization: token YOUR_GITHUB_TOKEN\" https://api.github.com/rate_limit | jq .rate\n  sleep 300  # Check every 5 minutes\ndone\n</code></pre>"},{"location":"errors/github-005/#implement-exponential-backoff","title":"Implement exponential backoff","text":"<p>For automated scripts, implement exponential backoff when rate limits are hit:</p> <pre><code># Python example\nimport time\nimport random\n\ndef backoff(attempt):\n    # Exponential backoff with jitter\n    return (2 ** attempt) + random.uniform(0, 1)\n\n# Usage\nattempt = 0\nwhile True:\n    try:\n        # Make API request\n        break  # Success\n    except RateLimitError:\n        wait_time = backoff(attempt)\n        print(f\"Rate limit hit. Waiting {wait_time}s\")\n        time.sleep(wait_time)\n        attempt += 1\n</code></pre>"},{"location":"errors/github-005/#use-graphql-for-multiple-requests","title":"Use GraphQL for multiple requests","text":"<p>Consider using GitHub's GraphQL API to reduce the number of requests needed:</p> <pre><code>curl -s -H \"Authorization: token YOUR_GITHUB_TOKEN\" -X POST -d '{\"query\": \"query { viewer { login repositories(first: 100) { nodes { name } } } }\"}' https://api.github.com/graphql\n</code></pre>"},{"location":"errors/github-005/#distribute-workloads","title":"Distribute workloads","text":"<p>If possible, distribute your GitHub API requests: - Use multiple tokens across different applications - Implement request queuing - Schedule non-urgent operations during off-peak times</p>"},{"location":"errors/github-005/#rate-limit-best-practices","title":"Rate Limit Best Practices","text":"<ol> <li>Cache responses when possible to reduce repeated requests</li> <li>Use conditional requests with ETags to avoid counting unchanged resources against limits</li> <li>Implement proper pagination to efficiently process large result sets</li> <li>Use GraphQL for complex queries that would otherwise require multiple REST API calls</li> <li>Log rate limit headers to track usage patterns and anticipate limits</li> <li>Add timeouts and retries with exponential backoff for handling rate limit errors</li> <li>Prioritize requests based on importance for your application</li> </ol>"},{"location":"errors/github-005/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils github analyze owner/repo --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Consider upgrading to GitHub Enterprise if you consistently hit limits with normal usage.</p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>The rate limit information (from the API response)</li> <li>A description of how many commands you were running</li> <li>Output of debug logs </li> </ol>"},{"location":"errors/install-001/","title":"INVALID_PATH (install-001)","text":""},{"location":"errors/install-001/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an invalid path during installation. The specified path may not exist, may not be accessible, or may not meet the requirements for installation.</p>"},{"location":"errors/install-001/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Invalid path specified for installation\n  Code: install-001\n\n  Causes:\n  - The specified path does not exist\n  - The path points to a file instead of a directory\n  - You don't have sufficient permissions to access the path\n\n  Suggestion: Specify a valid directory path where you have write permissions\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/install-001.md\n</code></pre>"},{"location":"errors/install-001/#common-causes","title":"Common Causes","text":"<ol> <li>Non-existent path: The directory path you specified doesn't exist on your system.</li> <li>Path is a file: You specified a file path instead of a directory path.</li> <li>Permission issues: You don't have sufficient permissions to access or write to the specified path.</li> <li>Path contains invalid characters: The path contains characters that are not allowed in your operating system.</li> <li>Path is too long: The path exceeds the maximum path length supported by your operating system.</li> </ol>"},{"location":"errors/install-001/#solutions","title":"Solutions","text":""},{"location":"errors/install-001/#check-if-the-path-exists","title":"Check if the path exists","text":"<p>Verify that the path you're specifying exists:</p> <pre><code># Linux/macOS\nls -la /path/to/directory\n</code></pre> <pre><code># Windows (PowerShell)\nGet-ChildItem -Path C:\\path\\to\\directory\n</code></pre>"},{"location":"errors/install-001/#create-the-directory-if-it-doesnt-exist","title":"Create the directory if it doesn't exist","text":"<p>If the directory doesn't exist, create it before installation:</p> <pre><code># Linux/macOS\nmkdir -p /path/to/directory\n</code></pre> <pre><code># Windows (PowerShell)\nNew-Item -Path \"C:\\path\\to\\directory\" -ItemType Directory\n</code></pre>"},{"location":"errors/install-001/#check-and-fix-permissions","title":"Check and fix permissions","text":"<p>Ensure you have the necessary permissions for the directory:</p> <pre><code># Linux/macOS\nchmod 755 /path/to/directory\n</code></pre> <pre><code># Windows\n# Right-click the folder, select Properties, then Security tab, and adjust permissions\n</code></pre>"},{"location":"errors/install-001/#use-an-absolute-path","title":"Use an absolute path","text":"<p>When specifying paths, use absolute paths rather than relative paths to avoid confusion:</p> <pre><code># Good\ncursor-utils install --path /home/username/projects/my-project\n\n# Avoid\ncursor-utils install --path ./my-project\n</code></pre>"},{"location":"errors/install-001/#run-with-elevated-privileges-if-necessary","title":"Run with elevated privileges if necessary","text":"<p>If you need to install in a system directory, you might need elevated privileges:</p> <pre><code># Linux/macOS\nsudo cursor-utils install --path /usr/local/bin\n\n# Windows (run as Administrator)\n</code></pre>"},{"location":"errors/install-001/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils install --help</code> - Show help for the install command</li> <li><code>cursor-utils config show</code> - Display current configuration</li> <li><code>cursor-utils --version</code> - Check your current version</li> </ul>"},{"location":"errors/install-001/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>DIRECTORY_ERROR (install-004) - Error creating or accessing directory</li> <li>FILE_WRITE_ERROR (install-005) - Error writing to file</li> <li>GENERAL_FILE_ERROR (general-002) - General file error</li> </ul>"},{"location":"errors/install-001/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run the command with the <code>--debug</code> flag to get more detailed error information:    <pre><code>cursor-utils install --path /path/to/directory --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Submit a bug report with the detailed information. </p> </li> </ol>"},{"location":"errors/install-002/","title":"FILE_NOT_FOUND (install-002)","text":""},{"location":"errors/install-002/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils cannot find a required file during the installation process. The file might be a template, configuration file, or another essential file needed for proper installation.</p>"},{"location":"errors/install-002/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Required file not found during installation\n  Code: install-002\n\n  Causes:\n  - The specified file does not exist\n  - The file path is incorrect\n  - The installation package might be corrupted\n\n  Suggestion: Verify the file path or try reinstalling Cursor Utils\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/install-002.md\n</code></pre>"},{"location":"errors/install-002/#common-causes","title":"Common Causes","text":"<ol> <li>Missing Installation Files: One or more files required for installation are missing.</li> <li>Incomplete Download: The package download might have been interrupted or incomplete.</li> <li>Incorrect Path Reference: The installation process is looking for a file in the wrong location.</li> <li>File Removal: A required file was accidentally deleted after initial download.</li> <li>Permission Issues: The file exists but cannot be accessed due to permission restrictions.</li> </ol>"},{"location":"errors/install-002/#solutions","title":"Solutions","text":""},{"location":"errors/install-002/#verify-file-existence","title":"Verify file existence","text":"<p>Check if the file exists at the expected location:</p> <pre><code># Linux/macOS\nls -la /path/to/expected/file.ext\n\n# Windows (PowerShell)\nGet-ChildItem -Path C:\\path\\to\\expected\\file.ext -ErrorAction SilentlyContinue\n</code></pre>"},{"location":"errors/install-002/#re-download-the-installation-package","title":"Re-download the installation package","text":"<p>If you suspect the package is corrupted or incomplete, try downloading it again:</p> <pre><code># Using pip\npip uninstall cursor-utils\npip install cursor-utils\n\n# Using UV (recommended)\nuv pip uninstall cursor-utils\nuv pip install cursor-utils\n</code></pre>"},{"location":"errors/install-002/#check-installation-source","title":"Check installation source","text":"<p>If you installed from a specific source like GitHub, ensure the repository is complete:</p> <pre><code># Clone the repository again\ngit clone https://github.com/gweidart/cursor-utils.git\ncd cursor-utils\npip install -e .\n</code></pre>"},{"location":"errors/install-002/#check-for-custom-templates","title":"Check for custom templates","text":"<p>If you're using custom templates during installation, verify they exist:</p> <pre><code># Linux/macOS\nls -la ~/.cursor-utils/templates/\n\n# Windows (PowerShell)\nGet-ChildItem -Path \"$HOME\\.cursor-utils\\templates\\\" -ErrorAction SilentlyContinue\n</code></pre>"},{"location":"errors/install-002/#run-with-verbose-output","title":"Run with verbose output","text":"<p>Execute the installation with verbose output to see which file is missing:</p> <pre><code>cursor-utils install --debug\n</code></pre>"},{"location":"errors/install-002/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils install --help</code> - Show help for the install command</li> <li><code>cursor-utils --version</code> - Check your current version</li> <li><code>cursor-utils update</code> - Update to the latest version which might fix missing files</li> </ul>"},{"location":"errors/install-002/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>INVALID_PATH (install-001) - Invalid path specification</li> <li>TEMPLATE_ERROR (install-003) - Error processing template</li> <li>GENERAL_FILE_ERROR (general-002) - General file error</li> </ul>"},{"location":"errors/install-002/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/install-002/#check-file-integrity","title":"Check file integrity","text":"<p>If the file exists but might be corrupted, you can check its integrity:</p> <pre><code># For text files, try to view them\ncat /path/to/file.txt\n\n# For binary files, check file size\nls -la /path/to/file.bin\n</code></pre>"},{"location":"errors/install-002/#recreate-default-files","title":"Recreate default files","text":"<p>Some configuration files can be recreated if missing:</p> <pre><code>cursor-utils config init\n</code></pre>"},{"location":"errors/install-002/#check-installation-logs","title":"Check installation logs","text":"<p>Installation logs might provide additional details:</p> <pre><code>cat ~/.cursor-utils/logs/install.log\n</code></pre>"},{"location":"errors/install-002/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run the command with the <code>--debug</code> flag to get more detailed error information:    <pre><code>cursor-utils install --debug\n</code></pre></p> </li> <li> <p>Check the full logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Submit a bug report with the detailed information. </p> </li> </ol>"},{"location":"errors/install-003/","title":"TEMPLATE_ERROR (install-003)","text":""},{"location":"errors/install-003/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue while processing a template during installation. Template processing errors can happen when a template file is malformed, contains invalid syntax, or when there are issues with variable substitution.</p>"},{"location":"errors/install-003/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Failed to process template during installation\n  Code: install-003\n\n  Causes:\n  - The template file contains invalid syntax\n  - A required template variable is missing\n  - The template engine encountered an unexpected format\n  - Template file is corrupted\n\n  Suggestion: Check the template file for errors or use a default template\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/install-003.md\n</code></pre>"},{"location":"errors/install-003/#common-causes","title":"Common Causes","text":"<ol> <li>Invalid Template Syntax: The template contains syntax errors or invalid formatting.</li> <li>Missing Variables: Required template variables are not provided during processing.</li> <li>Template File Corruption: The template file is corrupted or incomplete.</li> <li>Template Engine Issues: There's a problem with the template engine itself.</li> <li>Incompatible Template Version: The template version is incompatible with your Cursor Utils version.</li> </ol>"},{"location":"errors/install-003/#solutions","title":"Solutions","text":""},{"location":"errors/install-003/#check-template-syntax","title":"Check template syntax","text":"<p>Verify that the template file has the correct syntax:</p> <pre><code># View the template file\ncat ~/.cursor-utils/templates/your-template-file.yml\n</code></pre> <p>Look for: - Missing or unmatched brackets, braces, or quotes - Invalid YAML or JSON syntax if applicable - Correct indentation</p>"},{"location":"errors/install-003/#use-a-default-template","title":"Use a default template","text":"<p>If you're using a custom template that's causing issues, try using the default template instead:</p> <pre><code>cursor-utils install --use-default-templates\n</code></pre>"},{"location":"errors/install-003/#validate-template-variables","title":"Validate template variables","text":"<p>Ensure all required variables are provided:</p> <pre><code># Check which variables are expected\ncursor-utils template list-variables --template your-template-file.yml\n</code></pre>"},{"location":"errors/install-003/#regenerate-templates","title":"Regenerate templates","text":"<p>You can regenerate the default templates:</p> <pre><code>cursor-utils template reset\n</code></pre>"},{"location":"errors/install-003/#check-for-template-errors-with-debug-mode","title":"Check for template errors with debug mode","text":"<p>Run the installation with debug mode to see detailed template processing:</p> <pre><code>cursor-utils install --debug\n</code></pre>"},{"location":"errors/install-003/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils install --help</code> - Show help for the install command</li> <li><code>cursor-utils template --help</code> - Show help for template management</li> <li><code>cursor-utils template list</code> - List available templates</li> </ul>"},{"location":"errors/install-003/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>FILE_NOT_FOUND (install-002) - File not found during installation</li> <li>FILE_WRITE_ERROR (install-005) - Error writing to file</li> <li>CONFIG_FILE_ERROR (config-005) - Error with configuration file</li> </ul>"},{"location":"errors/install-003/#template-format-guide","title":"Template Format Guide","text":"<p>Cursor Utils templates follow a specific format:</p> <pre><code># Example template format\nname: \"Project Template\"\nversion: \"1.0.0\"\ndescription: \"A template for new projects\"\n\nvariables:\n  project_name:\n    description: \"Name of the project\"\n    default: \"my-project\"\n  author_name:\n    description: \"Author of the project\"\n    required: true\n\nfiles:\n  - source: \"templates/readme.md.tmpl\"\n    destination: \"{{ project_name }}/README.md\"\n  - source: \"templates/setup.py.tmpl\"\n    destination: \"{{ project_name }}/setup.py\"\n</code></pre> <p>When creating or modifying templates, ensure they follow this structure.</p>"},{"location":"errors/install-003/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/install-003/#manually-process-templates","title":"Manually process templates","text":"<p>For advanced users, you can try manually processing a template to identify issues:</p> <pre><code># Export template variables to a file\ncursor-utils template export-variables --output variables.json\n\n# Manually process a template\ncursor-utils template process --template your-template.yml --variables variables.json --output processed-output\n</code></pre>"},{"location":"errors/install-003/#check-template-engine-logs","title":"Check template engine logs","text":"<p>Template processing logs may provide more details:</p> <pre><code>cat ~/.cursor-utils/logs/template.log\n</code></pre>"},{"location":"errors/install-003/#validate-template-schema","title":"Validate template schema","text":"<p>Ensure your template follows the correct schema:</p> <pre><code>cursor-utils template validate --template your-template.yml\n</code></pre>"},{"location":"errors/install-003/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Try with the latest version of Cursor Utils:    <pre><code>cursor-utils update\n</code></pre></p> </li> <li> <p>Check the detailed logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Submit a bug report with:</p> </li> <li>The template file that's causing the issue (if it's not confidential)</li> <li>The complete error message</li> <li>Steps to reproduce the error </li> </ol>"},{"location":"errors/install-004/","title":"DIRECTORY_ERROR (install-004)","text":""},{"location":"errors/install-004/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue with directory operations during installation. This can include problems creating, accessing, or modifying directories required for installation.</p>"},{"location":"errors/install-004/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Directory operation failed during installation\n  Code: install-004\n\n  Causes:\n  - Cannot create directory due to permission issues\n  - The specified directory already exists but cannot be accessed\n  - The directory path is invalid or too long\n  - The parent directory does not exist\n\n  Suggestion: Check directory permissions and ensure the path is valid\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/install-004.md\n</code></pre>"},{"location":"errors/install-004/#common-causes","title":"Common Causes","text":"<ol> <li>Permission Issues: Insufficient permissions to create or access the directory.</li> <li>Path Validity: The directory path contains invalid characters or is malformed.</li> <li>Path Length: The directory path exceeds the maximum length allowed by the operating system.</li> <li>Parent Directory: The parent directory in the path doesn't exist.</li> <li>Disk Space: Insufficient disk space to create the directory.</li> <li>File System Issues: Underlying file system problems or limitations.</li> </ol>"},{"location":"errors/install-004/#solutions","title":"Solutions","text":""},{"location":"errors/install-004/#check-and-fix-permissions","title":"Check and fix permissions","text":"<p>Ensure you have the necessary permissions to create and access directories:</p> <pre><code># Linux/macOS\n# Check permissions of parent directory\nls -la /path/to/parent/\n# Change permissions if needed\nchmod 755 /path/to/parent/\n\n# Windows (PowerShell Admin)\n# Check directory access\nGet-Acl C:\\path\\to\\parent\\\n# Grant yourself full control if needed through File Explorer properties\n</code></pre>"},{"location":"errors/install-004/#create-parent-directories","title":"Create parent directories","text":"<p>Make sure all parent directories exist:</p> <pre><code># Linux/macOS\nmkdir -p /path/to/parent/directory/\n\n# Windows (PowerShell)\nNew-Item -Path \"C:\\path\\to\\parent\\directory\" -ItemType Directory -Force\n</code></pre>"},{"location":"errors/install-004/#check-path-validity","title":"Check path validity","text":"<p>Verify that the path doesn't contain invalid characters or exceed path length limits:</p> <pre><code># For Windows, paths should be less than 260 characters\n# For Linux/macOS, keep paths reasonable (under 4096 characters)\n# Avoid special characters like ?, *, :, |, \", &lt;, &gt;, etc.\n</code></pre>"},{"location":"errors/install-004/#check-disk-space","title":"Check disk space","text":"<p>Ensure you have sufficient disk space:</p> <pre><code># Linux/macOS\ndf -h\n\n# Windows (PowerShell)\nGet-PSDrive C\n</code></pre>"},{"location":"errors/install-004/#run-with-elevated-privileges","title":"Run with elevated privileges","text":"<p>If installing in a system location, try running with elevated privileges:</p> <pre><code># Linux/macOS\nsudo cursor-utils install\n\n# Windows (run as Administrator)\n</code></pre>"},{"location":"errors/install-004/#specify-an-alternative-directory","title":"Specify an alternative directory","text":"<p>Use a different directory location:</p> <pre><code>cursor-utils install --path /different/path/\n</code></pre>"},{"location":"errors/install-004/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils install --help</code> - Show help for the install command</li> <li><code>cursor-utils config show</code> - Display current configuration, including paths</li> </ul>"},{"location":"errors/install-004/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>INVALID_PATH (install-001) - Invalid path specification</li> <li>FILE_WRITE_ERROR (install-005) - Error writing to file</li> <li>GENERAL_FILE_ERROR (general-002) - General file error</li> </ul>"},{"location":"errors/install-004/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/install-004/#check-for-existing-directories-with-similar-names","title":"Check for existing directories with similar names","text":"<p>Sometimes issues occur due to case sensitivity differences:</p> <pre><code># Linux/macOS (case sensitive)\nls -la /path/to/Directory/\nls -la /path/to/directory/\n\n# Windows (case insensitive, but check anyway)\nGet-ChildItem -Path \"C:\\path\\to\\\" -Directory\n</code></pre>"},{"location":"errors/install-004/#check-for-directory-locks","title":"Check for directory locks","text":"<p>Ensure the directory is not locked by another process:</p> <pre><code># Linux/macOS\nlsof | grep \"/path/to/directory\"\n\n# Windows (PowerShell)\nGet-Process | ForEach-Object { $_.Modules } | Where-Object { $_.FileName -like \"C:\\path\\to\\directory*\" }\n</code></pre>"},{"location":"errors/install-004/#test-with-a-simple-directory","title":"Test with a simple directory","text":"<p>Test if you can create a simple directory in the same location:</p> <pre><code># Linux/macOS\nmkdir -p /path/to/test-directory\n\n# Windows (PowerShell)\nNew-Item -Path \"C:\\path\\to\\test-directory\" -ItemType Directory\n</code></pre>"},{"location":"errors/install-004/#special-considerations","title":"Special Considerations","text":""},{"location":"errors/install-004/#windows-long-path-support","title":"Windows Long Path Support","text":"<p>On Windows, if you're dealing with paths longer than 260 characters:</p> <ol> <li>Enable long path support in Windows 10/11:</li> <li>Open Group Policy Editor (gpedit.msc)</li> <li>Navigate to: Computer Configuration &gt; Administrative Templates &gt; System &gt; Filesystem</li> <li> <p>Enable \"Enable Win32 long paths\"</p> </li> <li> <p>Or use the registry editor:    <pre><code>reg add \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\FileSystem\" /v \"LongPathsEnabled\" /t REG_DWORD /d 1 /f\n</code></pre></p> </li> <li> <p>Use UNC path format for very long paths:    <pre><code>\\\\?\\C:\\very\\long\\path\\that\\exceeds\\normal\\limits\n</code></pre></p> </li> </ol>"},{"location":"errors/install-004/#hidden-directories","title":"Hidden Directories","text":"<p>Some directories might be hidden:</p> <pre><code># Linux/macOS\nls -la  # Shows hidden files/directories starting with .\n\n# Windows (PowerShell)\nGet-ChildItem -Path \"C:\\path\\to\" -Hidden\n</code></pre>"},{"location":"errors/install-004/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug mode:    <pre><code>cursor-utils install --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try installing in a simple, accessible location:    <pre><code>cursor-utils install --path ~/cursor-utils-test\n</code></pre></p> </li> <li> <p>Submit a bug report with details about your operating system, file system, and the full error message. </p> </li> </ol>"},{"location":"errors/install-005/","title":"FILE_WRITE_ERROR (install-005)","text":""},{"location":"errors/install-005/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils cannot write to a file during the installation process. This may be due to permission issues, disk space limitations, or file locking by another process.</p>"},{"location":"errors/install-005/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Failed to write to file during installation\n  Code: install-005\n\n  Causes:\n  - Insufficient permissions to write to the file\n  - The file is locked by another process\n  - Disk is full or write-protected\n  - The file path is invalid\n\n  Suggestion: Check file permissions and ensure sufficient disk space\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/install-005.md\n</code></pre>"},{"location":"errors/install-005/#common-causes","title":"Common Causes","text":"<ol> <li>Permission Issues: You don't have write permissions for the file or its directory.</li> <li>File Locking: The file is currently opened or locked by another application.</li> <li>Disk Space: Insufficient disk space to write the file.</li> <li>Read-Only File System: The target location is on a read-only file system.</li> <li>Path Issues: The file path is invalid or contains characters not supported by the file system.</li> <li>File Already Exists: The file exists and is marked as read-only or protected.</li> </ol>"},{"location":"errors/install-005/#solutions","title":"Solutions","text":""},{"location":"errors/install-005/#check-and-fix-file-permissions","title":"Check and fix file permissions","text":"<p>Ensure you have the necessary permissions to write to the file location:</p> <pre><code># Linux/macOS\n# Check file permissions\nls -la /path/to/file\n# Change permissions if needed\nchmod 644 /path/to/file\n# Change directory permissions if needed\nchmod 755 /path/to/directory/\n\n# Windows (PowerShell)\n# Check file attributes\nGet-Item -Path \"C:\\path\\to\\file\" | Format-List *\n# Remove read-only attribute if needed\nSet-ItemProperty -Path \"C:\\path\\to\\file\" -Name IsReadOnly -Value $false\n</code></pre>"},{"location":"errors/install-005/#check-disk-space","title":"Check disk space","text":"<p>Ensure you have sufficient disk space:</p> <pre><code># Linux/macOS\ndf -h\n\n# Windows (PowerShell)\nGet-PSDrive C\n</code></pre>"},{"location":"errors/install-005/#check-for-locked-files","title":"Check for locked files","text":"<p>Determine if the file is locked by another process:</p> <pre><code># Linux/macOS\nlsof | grep \"/path/to/file\"\n\n# Windows (PowerShell)\nGet-Process | Where-Object {$_.Modules.FileName -like \"*targetfile*\"}\n</code></pre>"},{"location":"errors/install-005/#try-an-alternative-location","title":"Try an alternative location","text":"<p>Specify an alternative location for the installation:</p> <pre><code>cursor-utils install --path /different/path/\n</code></pre>"},{"location":"errors/install-005/#run-with-elevated-privileges","title":"Run with elevated privileges","text":"<p>If writing to a system location, try running with elevated privileges:</p> <pre><code># Linux/macOS\nsudo cursor-utils install\n\n# Windows (run as Administrator)\n</code></pre>"},{"location":"errors/install-005/#close-competing-applications","title":"Close competing applications","text":"<p>Ensure no other applications are using the files being written: - Close code editors that might have the file open - Check for antivirus software that might be scanning the file - Close backup software that might be accessing the file</p>"},{"location":"errors/install-005/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils install --help</code> - Show help for the install command</li> <li><code>cursor-utils config show</code> - Display current configuration</li> <li><code>cursor-utils --version</code> - Check your current version</li> </ul>"},{"location":"errors/install-005/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>INVALID_PATH (install-001) - Invalid path specification</li> <li>DIRECTORY_ERROR (install-004) - Error creating or accessing directory</li> <li>GENERAL_FILE_ERROR (general-002) - General file error</li> </ul>"},{"location":"errors/install-005/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/install-005/#check-write-access-with-a-test-file","title":"Check write access with a test file","text":"<p>Test if you can create a simple file in the same location:</p> <pre><code># Linux/macOS\ntouch /path/to/directory/test-file.txt\ncat &gt; /path/to/directory/test-file.txt &lt;&lt; EOF\nTest content\nEOF\n\n# Windows (PowerShell)\n\"Test content\" | Out-File -FilePath \"C:\\path\\to\\directory\\test-file.txt\"\n</code></pre>"},{"location":"errors/install-005/#check-file-system-type","title":"Check file system type","text":"<p>Some file systems might have limitations:</p> <pre><code># Linux/macOS\ndf -T /path/to/directory\n\n# Windows\n# Check using Disk Management\n</code></pre>"},{"location":"errors/install-005/#check-for-filesystem-quota-limits","title":"Check for filesystem quota limits","text":"<pre><code># Linux/macOS\nquota -v\n\n# Windows\nfsutil quota query C:\n</code></pre>"},{"location":"errors/install-005/#check-for-special-file-attributes","title":"Check for special file attributes","text":"<pre><code># Linux/macOS\nlsattr /path/to/file\n\n# Windows (PowerShell)\nGet-Item \"C:\\path\\to\\file\" | Format-List *\n</code></pre>"},{"location":"errors/install-005/#platform-specific-issues","title":"Platform-Specific Issues","text":""},{"location":"errors/install-005/#windows","title":"Windows","text":"<ul> <li>File Path Length: Windows has a 260-character path limit by default</li> <li>UAC (User Account Control): May block writes to protected directories</li> <li>Reserved File Names: Avoid reserved names like CON, PRN, AUX, NUL</li> <li>Hidden or System Files: Check if installation is trying to modify system files</li> </ul>"},{"location":"errors/install-005/#linuxmacos","title":"Linux/macOS","text":"<ul> <li>File System Permissions: Check user, group, and world permissions</li> <li>File System Mounts: Check if mounted as read-only</li> <li>SELinux/AppArmor: Security policies might restrict file operations</li> <li>Symbolic Links: Check if file is a symlink to a location with different permissions</li> </ul>"},{"location":"errors/install-005/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run the installation with debug logging:    <pre><code>cursor-utils install --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try creating the file manually:    <pre><code># Example for a config file\ntouch ~/.cursor-utils/config.yaml\n</code></pre></p> </li> <li> <p>Submit a bug report with details about:</p> </li> <li>The complete error message</li> <li>Your operating system and version</li> <li>File system type</li> <li>Permissions of the parent directory</li> <li>The output from the debug command </li> </ol>"},{"location":"errors/install-006/","title":"ALREADY_INSTALLED (install-006)","text":""},{"location":"errors/install-006/#error-description","title":"Error Description","text":"<p>This error occurs when you attempt to install Cursor Utils in a location where it is already installed. The installation process detects existing Cursor Utils files in the target location and prevents the reinstallation to avoid conflicts or overwriting customizations.</p>"},{"location":"errors/install-006/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Cursor Utils is already installed in the specified location\n  Code: install-006\n\n  Causes:\n  - Cursor Utils is already installed in the target directory\n  - The installation directory contains existing Cursor Utils files\n  - A previous installation was not properly uninstalled\n\n  Suggestion: Use the update command instead, or specify a different installation path\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/install-006.md\n</code></pre>"},{"location":"errors/install-006/#common-causes","title":"Common Causes","text":"<ol> <li>Previous Installation: Cursor Utils is already installed in the specified location.</li> <li>Partial Installation: A previous installation attempt left files in the target directory.</li> <li>Shared Installation Path: Multiple users sharing an installation path.</li> <li>Manual File Creation: Files that match Cursor Utils patterns were manually created.</li> <li>Version Control System: The repository was cloned or copied with existing Cursor Utils files.</li> </ol>"},{"location":"errors/install-006/#solutions","title":"Solutions","text":""},{"location":"errors/install-006/#use-the-update-command","title":"Use the update command","text":"<p>If you're trying to update an existing installation, use the update command instead:</p> <pre><code>cursor-utils update\n</code></pre>"},{"location":"errors/install-006/#specify-a-different-installation-path","title":"Specify a different installation path","text":"<p>Install to a different location:</p> <pre><code>cursor-utils install --path /different/path/\n</code></pre>"},{"location":"errors/install-006/#force-reinstallation","title":"Force reinstallation","text":"<p>If you want to reinstall over the existing installation, use the force flag:</p> <pre><code>cursor-utils install --force\n</code></pre> <p>This will overwrite the existing installation, but preserve your configuration and API keys.</p>"},{"location":"errors/install-006/#check-for-existing-installation","title":"Check for existing installation","text":"<p>Verify if and where Cursor Utils is currently installed:</p> <pre><code>cursor-utils --version\nwhich cursor-utils  # on Linux/macOS\nwhere cursor-utils  # on Windows\n</code></pre>"},{"location":"errors/install-006/#uninstall-first","title":"Uninstall first","text":"<p>Uninstall the existing installation before reinstalling:</p> <pre><code># Remove using pip if installed that way\npip uninstall cursor-utils\n\n# Or remove manually\nrm -rf ~/.cursor-utils  # Use caution with rm -rf commands!\n</code></pre>"},{"location":"errors/install-006/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils update</code> - Update an existing installation</li> <li><code>cursor-utils config show</code> - Display current configuration</li> <li><code>cursor-utils --version</code> - Check the installed version</li> </ul>"},{"location":"errors/install-006/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>INVALID_PATH (install-001) - Invalid path specification</li> <li>UPDATE_FAILED (update-001) - Update process failed</li> </ul>"},{"location":"errors/install-006/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/install-006/#check-for-installation-markers","title":"Check for installation markers","text":"<p>Cursor Utils creates marker files to identify installations:</p> <pre><code># Check for installation marker\nls -la ~/.cursor-utils/.installed\n\n# Windows\nGet-Item -Path \"$HOME\\.cursor-utils\\.installed\" -ErrorAction SilentlyContinue\n</code></pre>"},{"location":"errors/install-006/#clean-partial-installations","title":"Clean partial installations","text":"<p>If you have a partial installation, you can clean it up:</p> <pre><code># Be careful with these commands - they delete files\nrm -rf ~/.cursor-utils/*\nmkdir -p ~/.cursor-utils\ntouch ~/.cursor-utils/.clean\n</code></pre>"},{"location":"errors/install-006/#backup-your-configuration","title":"Backup your configuration","text":"<p>Before reinstalling, back up your configuration:</p> <pre><code># Backup config\ncp ~/.cursor-utils/config.yaml ~/cursor-utils-config-backup.yaml\n\n# Backup API keys\ncp ~/.env ~/env-backup\n</code></pre>"},{"location":"errors/install-006/#check-for-multiple-installations","title":"Check for multiple installations","text":"<p>You might have Cursor Utils installed in multiple locations:</p> <pre><code># Find all cursor-utils executables\nfind / -name cursor-utils 2&gt;/dev/null  # Linux/macOS\n\n# Windows (PowerShell)\nGet-ChildItem -Path C:\\ -Filter cursor-utils.exe -Recurse -ErrorAction SilentlyContinue\n</code></pre>"},{"location":"errors/install-006/#installation-modes","title":"Installation Modes","text":"<p>Cursor Utils supports different installation modes:</p>"},{"location":"errors/install-006/#user-installation-default","title":"User Installation (Default)","text":"<p>Installs for the current user only:</p> <pre><code>cursor-utils install\n</code></pre>"},{"location":"errors/install-006/#system-wide-installation","title":"System-wide Installation","text":"<p>Installs for all users (requires admin/root):</p> <pre><code>sudo cursor-utils install --system\n</code></pre>"},{"location":"errors/install-006/#development-installation","title":"Development Installation","text":"<p>Installs in development mode for contributing:</p> <pre><code>git clone https://github.com/gweidart/cursor-utils.git\ncd cursor-utils\npip install -e .\n</code></pre>"},{"location":"errors/install-006/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug mode:    <pre><code>cursor-utils install --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try a complete removal and fresh installation:    <pre><code># Remove config and installation\nrm -rf ~/.cursor-utils\npip uninstall -y cursor-utils\n\n# Fresh install\npip install cursor-utils\ncursor-utils install\n</code></pre></p> </li> <li> <p>Submit a bug report with:</p> </li> <li>Your installation method (pip, git, etc.)</li> <li>Complete error message</li> <li>Output of <code>cursor-utils --version</code></li> <li>Output of <code>which cursor-utils</code> (Linux/macOS) or <code>where cursor-utils</code> (Windows) </li> </ol>"},{"location":"errors/project-001/","title":"PROJECT_TOO_LARGE (project-001)","text":""},{"location":"errors/project-001/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils attempts to analyze a project that exceeds the size limits. Project size limits are in place to prevent excessive resource usage, long processing times, and potential system overload when analyzing local or remote projects.</p>"},{"location":"errors/project-001/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Project size exceeds limits\n  Code: project-001\n\n  Causes:\n  - The project is too large for analysis\n  - Project contains large binary files\n  - Too many files in the project\n  - Node modules, cache files, or build artifacts are included\n  - Deep directory structure exceeding parsing limits\n\n  Suggestion: Use a smaller project or exclude large directories/files\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/project-001.md\n</code></pre>"},{"location":"errors/project-001/#common-causes","title":"Common Causes","text":"<ol> <li>Large Project: The overall project size exceeds the maximum allowed limit.</li> <li>Binary Files: The project contains large binary files like images, videos, or compiled binaries.</li> <li>Dependency Directories: Inclusion of large directories like <code>node_modules</code>, <code>.venv</code>, or <code>build</code>.</li> <li>Too Many Files: The project contains more files than the analyzer can process efficiently.</li> <li>Generated Content: The project contains generated content like build artifacts, cache files, or logs.</li> <li>Deep Directory Structure: The project has an excessively deep directory structure.</li> </ol>"},{"location":"errors/project-001/#solutions","title":"Solutions","text":""},{"location":"errors/project-001/#exclude-large-directories","title":"Exclude large directories","text":"<p>Exclude large directories that aren't needed for analysis:</p> <pre><code>cursor-utils project analyze --exclude node_modules,dist,build,.venv\n</code></pre>"},{"location":"errors/project-001/#focus-on-specific-directories","title":"Focus on specific directories","text":"<p>Analyze only the most relevant parts of the project:</p> <pre><code>cursor-utils project analyze --include src,docs,tests\n</code></pre>"},{"location":"errors/project-001/#filter-by-file-type","title":"Filter by file type","text":"<p>Process only specific file types:</p> <pre><code>cursor-utils project analyze --include \"*.py,*.md,*.json\" --exclude \"*.png,*.jpg,*.log\"\n</code></pre>"},{"location":"errors/project-001/#use-a-smaller-project","title":"Use a smaller project","text":"<p>If possible, use a smaller project or a subset of your current project.</p>"},{"location":"errors/project-001/#ignore-large-files","title":"Ignore large files","text":"<p>Skip files that exceed a certain size:</p> <pre><code>cursor-utils project analyze --max-file-size 1MB\n</code></pre>"},{"location":"errors/project-001/#clean-the-project-before-analysis","title":"Clean the project before analysis","text":"<p>Remove build artifacts, caches, and temporary files:</p> <pre><code># Example for Python project\nrm -rf __pycache__ .pytest_cache build dist *.egg-info\n</code></pre>"},{"location":"errors/project-001/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils project --help</code> - Show help for the project command</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/project-001/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>PROJECT_ANALYZE_ERROR (project-002) - Error analyzing project</li> <li>PROJECT_FILE_ERROR (project-004) - Error with file in project</li> <li>REPO_TOO_LARGE (repo-002) - Repository size exceeds limits</li> </ul>"},{"location":"errors/project-001/#project-size-limitations","title":"Project Size Limitations","text":"<p>Cursor Utils has the following size limitations for projects:</p> Limit Type Default Value Description Total project size 2GB Maximum total size of the project Individual file size 20MB Maximum size of any individual file Maximum file count 10,000 Maximum number of files in the project Maximum directory depth 10 Maximum directory nesting level for processing"},{"location":"errors/project-001/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/project-001/#analyze-project-size","title":"Analyze project size","text":"<p>Analyze the project size to identify large files or directories:</p> <pre><code># Find large directories\ndu -h --max-depth=2 . | sort -hr\n\n# Find large files\nfind . -type f -size +5M | sort -n\n\n# Count files by type\nfind . -type f | grep -v \"node_modules\\|\\.git\" | rev | cut -d. -f1 | rev | sort | uniq -c | sort -nr\n</code></pre>"},{"location":"errors/project-001/#create-a-project-specific-gitignore","title":"Create a project-specific .gitignore","text":"<p>Create or update the <code>.gitignore</code> file to exclude large or unnecessary files and directories:</p> <pre><code># Example .gitignore for common large directories\nnode_modules/\n.venv/\n__pycache__/\ndist/\nbuild/\n*.log\n</code></pre>"},{"location":"errors/project-001/#use-symbolic-links","title":"Use symbolic links","text":"<p>For complex project structures, consider using symbolic links to create a simplified view of your project:</p> <pre><code>mkdir -p simplified_project/src\nln -s ../actual_project/src simplified_project/src\nln -s ../actual_project/docs simplified_project/docs\n</code></pre>"},{"location":"errors/project-001/#configure-project-analysis-settings","title":"Configure project analysis settings","text":"<p>If you have control over Cursor Utils configuration, you can adjust size limits:</p> <pre><code>cursor-utils config set project.max_size_gb 5\ncursor-utils config set project.max_file_size_mb 50\n</code></pre> <p>Note: Increasing limits may lead to higher resource usage and longer processing times.</p>"},{"location":"errors/project-001/#optimizing-large-projects","title":"Optimizing Large Projects","text":"<p>For effectively working with large projects, consider these strategies:</p>"},{"location":"errors/project-001/#project-organization","title":"Project Organization","text":"<ul> <li>Separate source code from data files and assets</li> <li>Use modular architecture with clear boundaries</li> <li>Keep generated files in separate directories</li> <li>Implement proper <code>.gitignore</code> files</li> </ul>"},{"location":"errors/project-001/#analysis-strategies","title":"Analysis Strategies","text":"<ul> <li>Start with core modules and gradually expand analysis</li> <li>Focus on one component or feature at a time</li> <li>Use targeted queries rather than whole-project analysis</li> <li>Create documentation for complex subsystems</li> </ul>"},{"location":"errors/project-001/#development-best-practices","title":"Development Best Practices","text":"<ul> <li>Regularly clean build artifacts and caches</li> <li>Remove unused dependencies</li> <li>Archive old or deprecated code</li> <li>Split monolithic projects into smaller, focused ones</li> </ul>"},{"location":"errors/project-001/#common-large-directories-to-exclude","title":"Common Large Directories to Exclude","text":"Directory Description Typical Size <code>node_modules</code> JavaScript dependencies 200MB-1GB+ <code>.venv</code> / <code>env</code> Python virtual environments 50-500MB <code>build</code> / <code>dist</code> Compiled/bundled output 10-500MB <code>.git</code> Git history 10MB-1GB+ <code>__pycache__</code> Python bytecode cache 1-100MB <code>.cache</code> Various cache files 10-500MB <code>logs</code> Log files 1MB-1GB+ <code>data</code> Data files Varies"},{"location":"errors/project-001/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils project analyze --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try analyzing a subset of the project:    <pre><code># Create a temporary subset of your project\nmkdir -p /tmp/project-subset/src\ncp -r path/to/your/project/src/main /tmp/project-subset/src/\ncursor-utils project analyze /tmp/project-subset\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Information about your project size (total size, number of files, etc.)</li> <li>The command you were trying to run</li> <li>Output of debug logs </li> </ol>"},{"location":"errors/project-002/","title":"PROJECT_ANALYZE_ERROR (project-002)","text":""},{"location":"errors/project-002/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue while analyzing a project. Project analysis problems can happen when processing project contents, extracting information, or generating insights from the project structure or code.</p>"},{"location":"errors/project-002/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Failed to analyze project\n  Code: project-002\n\n  Causes:\n  - Error processing project files\n  - Analysis timeout due to project complexity\n  - Insufficient memory for analysis\n  - Unsupported file types or structures\n  - API service error during analysis\n\n  Suggestion: Try with a simpler project or focus on specific subdirectories\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/project-002.md\n</code></pre>"},{"location":"errors/project-002/#common-causes","title":"Common Causes","text":"<ol> <li>Processing Errors: Issues encountered when processing project files.</li> <li>Project Complexity: The project is too complex or large for effective analysis.</li> <li>Resource Limitations: Insufficient memory or CPU resources for the analysis.</li> <li>Unsupported Content: The project contains file types or structures that aren't supported.</li> <li>API Service Issues: Problems with the underlying AI service used for project analysis.</li> <li>Timeout: The analysis took too long and timed out.</li> </ol>"},{"location":"errors/project-002/#solutions","title":"Solutions","text":""},{"location":"errors/project-002/#limit-analysis-scope","title":"Limit analysis scope","text":"<p>Focus the analysis on a specific part of the project:</p> <pre><code>cursor-utils project analyze --subdir src/\n</code></pre>"},{"location":"errors/project-002/#filter-by-file-type","title":"Filter by file type","text":"<p>Analyze only specific file types:</p> <pre><code>cursor-utils project analyze --include \"*.py,*.md\" --exclude \"*.json,*.yaml\"\n</code></pre>"},{"location":"errors/project-002/#increase-timeout","title":"Increase timeout","text":"<p>Allow more time for the analysis:</p> <pre><code>cursor-utils project analyze --timeout 300\n</code></pre>"},{"location":"errors/project-002/#check-api-key","title":"Check API key","text":"<p>Ensure your API key for the analysis service is valid:</p> <pre><code>cursor-utils config api_keys --type GEMINI\n</code></pre>"},{"location":"errors/project-002/#update-cursor-utils","title":"Update Cursor Utils","text":"<p>Make sure you're using the latest version:</p> <pre><code>cursor-utils update\n</code></pre>"},{"location":"errors/project-002/#exclude-problem-files","title":"Exclude problem files","text":"<p>If specific files are causing issues, exclude them:</p> <pre><code>cursor-utils project analyze --exclude \"path/to/problem/file.ext,*.problematic\"\n</code></pre>"},{"location":"errors/project-002/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils project --help</code> - Show help for the project command</li> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/project-002/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>PROJECT_TOO_LARGE (project-001) - Project size exceeds limits</li> <li>PROJECT_INVALID_URL (project-003) - Invalid project URL</li> <li>PROJECT_FILE_ERROR (project-004) - Error with file in project</li> <li>GEMINI_API_ERROR (gemini-001) - Error with Gemini API</li> </ul>"},{"location":"errors/project-002/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/project-002/#check-analysis-logs","title":"Check analysis logs","text":"<p>Review the analysis logs for specific error information:</p> <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre>"},{"location":"errors/project-002/#run-with-debug-mode","title":"Run with debug mode","text":"<p>Enable debug mode for more detailed logging:</p> <pre><code>cursor-utils project analyze --debug\n</code></pre>"},{"location":"errors/project-002/#check-project-structure","title":"Check project structure","text":"<p>Examine the project structure for potential issues:</p> <pre><code># Count files by type\nfind . -type f | grep -v \"^./.git/\" | rev | cut -d. -f1 | rev | sort | uniq -c | sort -nr\n\n# Check directory structure\nfind . -type d -not -path \"*/\\.*\" | sort\n</code></pre>"},{"location":"errors/project-002/#test-with-a-simpler-project","title":"Test with a simpler project","text":"<p>Try the analysis with a simpler project to determine if the issue is project-specific:</p> <pre><code># Create a minimal test project\nmkdir -p test-project/src\necho 'print(\"Hello, world!\")' &gt; test-project/src/main.py\ncursor-utils project analyze test-project\n</code></pre>"},{"location":"errors/project-002/#check-system-resources","title":"Check system resources","text":"<p>Make sure your system has sufficient resources:</p> <pre><code># Check available memory\nfree -h\n\n# Check CPU usage\ntop -n 1\n</code></pre>"},{"location":"errors/project-002/#analysis-limitations","title":"Analysis Limitations","text":"<p>Cursor Utils has several limitations for project analysis:</p> Limitation Description File types Some binary or proprietary file formats may not be analyzed properly Project structure Unusual or non-standard project structures may cause issues Analysis depth There may be limits to how deeply code relationships are analyzed Language support Some programming languages may have better support than others Framework recognition Specialized frameworks may not be recognized or analyzed correctly"},{"location":"errors/project-002/#optimization-strategies","title":"Optimization Strategies","text":"<p>To optimize project analysis:</p>"},{"location":"errors/project-002/#project-structure","title":"Project Structure","text":"<ul> <li>Use standard project layouts</li> <li>Keep directory nesting to a reasonable depth</li> <li>Follow conventional code organization patterns</li> <li>Separate code from data and assets</li> </ul>"},{"location":"errors/project-002/#modular-analysis","title":"Modular Analysis","text":"<ul> <li>Analyze one module or component at a time</li> <li>Focus on the most important parts of the project first</li> <li>Use targeted queries for specific functionality</li> <li>Break large projects into logical subsystems</li> </ul>"},{"location":"errors/project-002/#file-selection","title":"File Selection","text":"<ul> <li>Prioritize key source files</li> <li>Exclude generated code and third-party libraries</li> <li>Focus on one language or framework at a time</li> <li>Include relevant documentation and configuration files</li> </ul>"},{"location":"errors/project-002/#common-issues-by-project-type","title":"Common Issues by Project Type","text":"<p>Different project types may encounter specific issues:</p> Project Type Common Issues Recommendations Web applications Large node_modules, bundled assets Exclude node_modules, build directories Data science Large datasets, notebook outputs Exclude data files, clear notebook outputs Mobile apps Large asset files, generated code Focus on core source files Monorepos Overall size, many dependencies Analyze one package at a time Legacy systems Unusual structures, mixed languages Start with core modules"},{"location":"errors/project-002/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with extensive debug information:    <pre><code>cursor-utils project analyze --debug --verbose\n</code></pre></p> </li> <li> <p>Check service status:</p> </li> <li> <p>Google Cloud Status Dashboard (for Gemini API)</p> </li> <li> <p>Try a different API key:    <pre><code># Set a different Gemini API key temporarily\nGEMINI_API_KEY=your-alternate-key cursor-utils project analyze\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Project type and structure (without sharing sensitive code)</li> <li>Command you were trying to run</li> <li>Debug log output</li> <li>Your operating system and Cursor Utils version </li> </ol>"},{"location":"errors/project-003/","title":"PROJECT_INVALID_URL (project-003)","text":""},{"location":"errors/project-003/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an invalid URL while trying to access a remote project. This could be due to a malformed URL, a non-existent project, or a URL that doesn't point to a valid project or repository.</p>"},{"location":"errors/project-003/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Invalid project URL\n  Code: project-003\n\n  Causes:\n  - The URL format is incorrect\n  - The project does not exist at the provided URL\n  - The URL is not accessible (private or requires authentication)\n  - The URL points to a resource that is not a valid project\n  - Typo in the project URL\n\n  Suggestion: Check the URL format and ensure the project exists\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/project-003.md\n</code></pre>"},{"location":"errors/project-003/#common-causes","title":"Common Causes","text":"<ol> <li>Malformed URL: The URL structure doesn't follow the required format.</li> <li>Non-existent Project: The project doesn't exist at the specified URL.</li> <li>Typos: Typos in the project URL or path.</li> <li>Private Project: The project exists but is private and not accessible.</li> <li>Not a Project: The URL points to a resource that is not a valid project.</li> <li>Incorrect Protocol: Using the wrong protocol (e.g., HTTP instead of HTTPS).</li> </ol>"},{"location":"errors/project-003/#solutions","title":"Solutions","text":""},{"location":"errors/project-003/#check-url-format","title":"Check URL format","text":"<p>Ensure the project URL follows the correct format:</p> <pre><code># Example of correct URL formats\ncursor-utils project analyze https://github.com/username/project-name\ncursor-utils project analyze https://gitlab.com/username/project-name\ncursor-utils project analyze https://bitbucket.org/username/project-name\n</code></pre>"},{"location":"errors/project-003/#verify-project-existence","title":"Verify project existence","text":"<p>Check if the project exists and is accessible by opening the URL in a web browser.</p>"},{"location":"errors/project-003/#check-for-typos","title":"Check for typos","text":"<p>Double-check the project URL for typos:</p> <pre><code># Example of incorrect URL with typo\ncursor-utils project analyze https://github.com/usrename/project-name  # 'usrename' instead of 'username'\n\n# Correct URL\ncursor-utils project analyze https://github.com/username/project-name\n</code></pre>"},{"location":"errors/project-003/#try-different-url-formats","title":"Try different URL formats","text":"<p>If one URL format doesn't work, try another:</p> <pre><code># Instead of\ncursor-utils project analyze git@github.com:username/project-name.git\n\n# Try\ncursor-utils project analyze https://github.com/username/project-name\n</code></pre>"},{"location":"errors/project-003/#check-authentication-for-private-projects","title":"Check authentication for private projects","text":"<p>For private projects, ensure you have the necessary authentication:</p> <pre><code># Set up authentication\ncursor-utils config api_keys --type GITHUB\n</code></pre>"},{"location":"errors/project-003/#test-with-a-public-project","title":"Test with a public project","text":"<p>If you're having issues with a specific project, try with a known public project:</p> <pre><code>cursor-utils project analyze https://github.com/python/cpython\n</code></pre>"},{"location":"errors/project-003/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils project --help</code> - Show help for the project command</li> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/project-003/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>PROJECT_TOO_LARGE (project-001) - Project size exceeds limits</li> <li>PROJECT_ANALYZE_ERROR (project-002) - Error analyzing project</li> <li>REPO_INVALID_URL (repo-004) - Invalid repository URL</li> <li>GITHUB_REPO_NOT_FOUND (github-003) - GitHub repository not found</li> </ul>"},{"location":"errors/project-003/#valid-project-url-formats","title":"Valid Project URL Formats","text":""},{"location":"errors/project-003/#github","title":"GitHub","text":"<pre><code>https://github.com/username/project-name\nhttps://github.com/username/project-name.git\ngithub.com/username/project-name\ngit@github.com:username/project-name.git (SSH format)\n</code></pre>"},{"location":"errors/project-003/#gitlab","title":"GitLab","text":"<pre><code>https://gitlab.com/username/project-name\nhttps://gitlab.com/username/project-name.git\ngitlab.com/username/project-name\ngit@gitlab.com:username/project-name.git (SSH format)\n</code></pre>"},{"location":"errors/project-003/#bitbucket","title":"Bitbucket","text":"<pre><code>https://bitbucket.org/username/project-name\nhttps://bitbucket.org/username/project-name.git\nbitbucket.org/username/project-name\ngit@bitbucket.org:username/project-name.git (SSH format)\n</code></pre>"},{"location":"errors/project-003/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/project-003/#test-url-resolution","title":"Test URL resolution","text":"<p>Check if the domain can be resolved:</p> <pre><code># Using ping\nping github.com\n\n# Using nslookup\nnslookup github.com\n\n# Using curl\ncurl -I https://github.com/username/project-name\n</code></pre>"},{"location":"errors/project-003/#check-git-configuration","title":"Check Git configuration","text":"<p>If using Git URLs, verify your Git configuration:</p> <pre><code>git config --list\n</code></pre>"},{"location":"errors/project-003/#test-ssh-connectivity-for-ssh-urls","title":"Test SSH connectivity (for SSH URLs)","text":"<p>If using SSH URLs, test SSH connectivity:</p> <pre><code>ssh -T git@github.com\n</code></pre>"},{"location":"errors/project-003/#check-for-url-encoding-issues","title":"Check for URL encoding issues","text":"<p>Some special characters in URLs need to be properly encoded:</p> <pre><code># URL with space (incorrect)\ncursor-utils project analyze https://github.com/username/project name\n\n# URL with space (correct)\ncursor-utils project analyze https://github.com/username/project%20name\n</code></pre>"},{"location":"errors/project-003/#common-url-errors-and-solutions","title":"Common URL Errors and Solutions","text":"Error Description Solution 404 Not Found Project doesn't exist Check URL, verify existence 403 Forbidden No access to project Check authentication, permissions Host unreachable Cannot connect to host Check internet connection, DNS Invalid username Username doesn't exist Check for typos in owner name SSL certificate error SSL verification failed Check system certificates"},{"location":"errors/project-003/#project-url-best-practices","title":"Project URL Best Practices","text":"<ol> <li>Use HTTPS: Prefer HTTPS URLs over SSH or Git protocol for better compatibility</li> <li>Complete URLs: Always use complete URLs including the protocol (https://)</li> <li>Check accessibility: Ensure you have access to the project before analyzing</li> <li>Verify URLs: Double-check URLs for typos and errors</li> <li>Try alternatives: If one URL format fails, try another</li> </ol>"},{"location":"errors/project-003/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils project analyze https://github.com/username/project-name --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try testing the URL with external tools:    <pre><code># Using curl to check URL status\ncurl -I https://github.com/username/project-name\n\n# Using wget to check URL\nwget --spider https://github.com/username/project-name\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>The project URL you're trying to use</li> <li>The output of any tests you've run</li> <li>What solutions you've already tried </li> </ol>"},{"location":"errors/project-004/","title":"PROJECT_FILE_ERROR (project-004)","text":""},{"location":"errors/project-004/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue with a file while working with a project. This could include problems reading, processing, or accessing specific files within the project during analysis or other operations.</p>"},{"location":"errors/project-004/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Error with file in project\n  Code: project-004\n\n  Causes:\n  - Failed to read or process a file in the project\n  - The file has invalid encoding or format\n  - The file is too large or complex\n  - Permission issues when accessing the file\n  - The file is binary or in an unsupported format\n\n  Suggestion: Check the file format and encoding, or exclude problematic files\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/project-004.md\n</code></pre>"},{"location":"errors/project-004/#common-causes","title":"Common Causes","text":"<ol> <li>File Access Issues: Problems reading or accessing specific files in the project.</li> <li>Encoding Problems: Files with unusual or incompatible character encodings.</li> <li>Large Files: Files that exceed size limits for processing.</li> <li>Unsupported Formats: Binary files or other formats that can't be properly processed.</li> <li>Corrupt Files: Files that are damaged or improperly formatted.</li> <li>Permission Issues: Insufficient permissions to read certain files.</li> </ol>"},{"location":"errors/project-004/#solutions","title":"Solutions","text":""},{"location":"errors/project-004/#identify-problematic-files","title":"Identify problematic files","text":"<p>Check logs to identify which files are causing issues:</p> <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log | grep \"file error\"\n</code></pre>"},{"location":"errors/project-004/#exclude-specific-files","title":"Exclude specific files","text":"<p>Use the exclude option to skip problematic files:</p> <pre><code>cursor-utils project analyze --exclude \"path/to/problem/file.ext,*.bin\"\n</code></pre>"},{"location":"errors/project-004/#filter-by-file-type","title":"Filter by file type","text":"<p>Process only specific file types:</p> <pre><code>cursor-utils project analyze --include \"*.py,*.js,*.md\"\n</code></pre>"},{"location":"errors/project-004/#limit-file-size","title":"Limit file size","text":"<p>Skip large files that might cause issues:</p> <pre><code>cursor-utils project analyze --max-file-size 1MB\n</code></pre>"},{"location":"errors/project-004/#check-file-encoding","title":"Check file encoding","text":"<p>Check the encoding of problematic files:</p> <pre><code># Linux/macOS\nfile -i path/to/problem/file.ext\n\n# Convert encoding if needed\niconv -f ISO-8859-1 -t UTF-8 path/to/problem/file.ext &gt; path/to/problem/file.utf8.ext\n</code></pre>"},{"location":"errors/project-004/#fix-file-permissions","title":"Fix file permissions","text":"<p>Ensure you have read permissions for all project files:</p> <pre><code># Linux/macOS\nfind . -type f -not -readable -exec chmod +r {} \\;\n\n# Windows PowerShell\nGet-ChildItem -Recurse | Where-Object { -not $_.PSIsContainer } | ForEach-Object { $_.IsReadOnly = $false }\n</code></pre>"},{"location":"errors/project-004/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils project --help</code> - Show help for the project command</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/project-004/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>PROJECT_TOO_LARGE (project-001) - Project size exceeds limits</li> <li>PROJECT_ANALYZE_ERROR (project-002) - Error analyzing project</li> <li>REPO_FILE_ERROR (repo-005) - Error with file in repository</li> <li>GEMINI_FILE_ERROR (gemini-005) - Error with file in Gemini command</li> </ul>"},{"location":"errors/project-004/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/project-004/#check-file-characteristics","title":"Check file characteristics","text":"<p>Examine the characteristics of problematic files:</p> <pre><code># Check file type\nfile path/to/problem/file.ext\n\n# Check file size\ndu -h path/to/problem/file.ext\n\n# Check file encoding\nchardet path/to/problem/file.ext  # If you have chardet installed\n\n# Check for binary content\ngrep -I \"^\" path/to/problem/file.ext &gt; /dev/null || echo \"Binary file\"\n</code></pre>"},{"location":"errors/project-004/#look-for-unusual-files","title":"Look for unusual files","text":"<p>Identify potentially problematic files in the project:</p> <pre><code># Find very large files\nfind . -type f -size +10M\n\n# Find files with unusual extensions\nfind . -type f | grep -v -E '\\.(py|js|html|css|md|json|yaml|yml|txt|xml|csv|rst|ini|cfg|conf)$'\n\n# Find files without extensions\nfind . -type f -not -path \"*/\\.*\" | grep -v \"\\..*$\"\n</code></pre>"},{"location":"errors/project-004/#check-for-hidden-files","title":"Check for hidden files","text":"<p>Identify hidden files that might cause issues:</p> <pre><code># Linux/macOS\nfind . -type f -name \".*\" | grep -v \".git\"\n\n# Windows PowerShell\nGet-ChildItem -Hidden -Recurse | Where-Object { -not $_.PSIsContainer }\n</code></pre>"},{"location":"errors/project-004/#verify-line-endings","title":"Verify line endings","text":"<p>Check for mixed line endings that might cause issues:</p> <pre><code># Find files with mixed line endings\nfind . -type f -name \"*.py\" -exec file {} \\; | grep \"with CRLF, LF line terminators\"\n</code></pre>"},{"location":"errors/project-004/#file-type-considerations","title":"File Type Considerations","text":"<p>Different types of files have different considerations for processing:</p> File Type Considerations Text files Usually process well, but may have encoding issues Source code Generally well-supported, but very large files may cause issues Markdown/documentation Usually process well Binary files May cause processing errors; often should be excluded Generated files May be large or have unusual formats; consider excluding Configuration files Usually small and process well Data files May be very large or have complex formats"},{"location":"errors/project-004/#common-problematic-file-types","title":"Common Problematic File Types","text":"<p>These file types often cause issues and should generally be excluded:</p> File Type Description Recommendation <code>.pyc</code> Python compiled bytecode Exclude with <code>--exclude \"*.pyc\"</code> <code>.class</code> Java compiled bytecode Exclude with <code>--exclude \"*.class\"</code> <code>.o</code>, <code>.obj</code> Compiled object files Exclude with <code>--exclude \"*.o,*.obj\"</code> <code>.bin</code>, <code>.exe</code> Binary executables Exclude with <code>--exclude \"*.bin,*.exe\"</code> <code>.so</code>, <code>.dll</code> Shared libraries Exclude with <code>--exclude \"*.so,*.dll\"</code> Large media files Images, videos, audio Exclude with <code>--exclude \"*.jpg,*.png,*.mp4\"</code> Log files Application logs Exclude with <code>--exclude \"*.log\"</code> Database files Database data files Exclude with <code>--exclude \"*.db,*.sqlite\"</code>"},{"location":"errors/project-004/#tips-for-handling-problematic-files","title":"Tips for Handling Problematic Files","text":""},{"location":"errors/project-004/#for-large-files","title":"For Large Files","text":"<ul> <li>Split large files into smaller ones if possible</li> <li>Process only the most relevant sections</li> <li>Use summarization tools before processing</li> </ul>"},{"location":"errors/project-004/#for-binary-files","title":"For Binary Files","text":"<ul> <li>Exclude binary files from processing</li> <li>Use specific tools designed for the binary format</li> <li>Convert to text representation if possible</li> </ul>"},{"location":"errors/project-004/#for-encoding-issues","title":"For Encoding Issues","text":"<ul> <li>Convert files to UTF-8 encoding</li> <li>Add proper encoding declarations to source files</li> <li>Use encoding detection tools</li> </ul>"},{"location":"errors/project-004/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils project analyze --debug\n</code></pre></p> </li> <li> <p>Check the logs for specific file errors:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log | grep -A 5 \"file error\"\n</code></pre></p> </li> <li> <p>Try limiting scope to a particular directory:    <pre><code>cursor-utils project analyze --subdir docs/\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Information about the problematic file (if known)</li> <li>The command you were trying to run</li> <li>What solutions you've already tried </li> </ol>"},{"location":"errors/repo-001/","title":"REPO_CLONE_ERROR (repo-001)","text":""},{"location":"errors/repo-001/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils fails to clone a repository. This could be due to network issues, authentication problems, invalid repository URLs, or other Git-related issues.</p>"},{"location":"errors/repo-001/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Failed to clone repository\n  Code: repo-001\n\n  Causes:\n  - Network connectivity issues\n  - Repository URL is invalid or inaccessible\n  - Authentication failed for private repository\n  - Git is not installed or misconfigured\n  - Insufficient permissions for the destination directory\n\n  Suggestion: Check the repository URL and your network connection\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/repo-001.md\n</code></pre>"},{"location":"errors/repo-001/#common-causes","title":"Common Causes","text":"<ol> <li>Network Issues: Problems connecting to the repository host (GitHub, GitLab, etc.).</li> <li>Invalid URL: The repository URL is incorrect or malformed.</li> <li>Authentication: Missing or invalid credentials for a private repository.</li> <li>Git Installation: Git is not installed or not in the PATH.</li> <li>Permission Issues: Insufficient permissions to write to the destination directory.</li> <li>Repository Doesn't Exist: The specified repository doesn't exist or has been deleted.</li> </ol>"},{"location":"errors/repo-001/#solutions","title":"Solutions","text":""},{"location":"errors/repo-001/#check-repository-url","title":"Check repository URL","text":"<p>Verify that the repository URL is correct:</p> <pre><code># Use the full URL format\ncursor-utils repo https://github.com/username/repo-name\n\n# Or the shorthand format\ncursor-utils repo username/repo-name\n</code></pre>"},{"location":"errors/repo-001/#test-manual-cloning","title":"Test manual cloning","text":"<p>Try cloning the repository manually to check if it works:</p> <pre><code>git clone https://github.com/username/repo-name test-clone\n</code></pre>"},{"location":"errors/repo-001/#check-network-connectivity","title":"Check network connectivity","text":"<p>Ensure you can connect to the repository host:</p> <pre><code>ping github.com\ncurl -I https://github.com\n</code></pre>"},{"location":"errors/repo-001/#verify-git-installation","title":"Verify Git installation","text":"<p>Make sure Git is installed and in your PATH:</p> <pre><code>git --version\nwhich git  # Linux/macOS\nwhere git  # Windows\n</code></pre>"},{"location":"errors/repo-001/#check-authentication-for-private-repositories","title":"Check authentication for private repositories","text":"<p>For private repositories, ensure you have the necessary credentials:</p> <pre><code># Set GitHub token if needed\ncursor-utils config api_keys --type GITHUB\n</code></pre>"},{"location":"errors/repo-001/#try-with-a-different-repository","title":"Try with a different repository","text":"<p>If one repository is causing issues, try with a different one:</p> <pre><code>cursor-utils repo https://github.com/torvalds/linux\n</code></pre>"},{"location":"errors/repo-001/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils repo --help</code> - Show help for the repo command</li> <li><code>cursor-utils config api_keys</code> - Manage API keys including GitHub tokens</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/repo-001/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>REPO_INVALID_URL (repo-004) - Invalid repository URL</li> <li>GITHUB_AUTH_ERROR (github-001) - GitHub authentication error</li> <li>GITHUB_REPO_NOT_FOUND (github-003) - GitHub repository not found</li> </ul>"},{"location":"errors/repo-001/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/repo-001/#check-git-configuration","title":"Check Git configuration","text":"<p>Verify your Git configuration:</p> <pre><code>git config --list\n</code></pre>"},{"location":"errors/repo-001/#check-ssh-keys-if-using-ssh-urls","title":"Check SSH keys (if using SSH URLs)","text":"<p>If you're using SSH URLs, check your SSH keys:</p> <pre><code># Check SSH keys\nls -la ~/.ssh\n\n# Test SSH connection\nssh -T git@github.com\n</code></pre>"},{"location":"errors/repo-001/#use-https-instead-of-ssh","title":"Use HTTPS instead of SSH","text":"<p>Try using HTTPS URLs instead of SSH:</p> <pre><code># Instead of\ncursor-utils repo git@github.com:username/repo-name.git\n\n# Use\ncursor-utils repo https://github.com/username/repo-name\n</code></pre>"},{"location":"errors/repo-001/#check-proxy-settings","title":"Check proxy settings","text":"<p>If you're behind a proxy, check your proxy settings:</p> <pre><code># Check environment variables\necho $HTTP_PROXY\necho $HTTPS_PROXY\n\n# Check Git proxy settings\ngit config --global http.proxy\n</code></pre>"},{"location":"errors/repo-001/#enable-verbose-output","title":"Enable verbose output","text":"<p>Run with debug mode for more detailed information:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --debug\n</code></pre>"},{"location":"errors/repo-001/#common-repository-url-formats","title":"Common Repository URL Formats","text":""},{"location":"errors/repo-001/#github","title":"GitHub","text":"<pre><code>https://github.com/username/repo-name\ngithub.com/username/repo-name\nusername/repo-name (shorthand for GitHub)\n</code></pre>"},{"location":"errors/repo-001/#gitlab","title":"GitLab","text":"<pre><code>https://gitlab.com/username/repo-name\ngitlab.com/username/repo-name\n</code></pre>"},{"location":"errors/repo-001/#bitbucket","title":"Bitbucket","text":"<pre><code>https://bitbucket.org/username/repo-name\nbitbucket.org/username/repo-name\n</code></pre>"},{"location":"errors/repo-001/#git-error-messages-and-solutions","title":"Git Error Messages and Solutions","text":"Error Message Likely Cause Solution <code>Repository not found</code> Repo doesn't exist or is private Check URL or authenticate <code>Authentication failed</code> Invalid or missing credentials Update GitHub token <code>Permission denied</code> Insufficient access rights Check your permissions <code>Could not resolve host</code> Network or DNS issues Check network connection <code>fatal: destination path already exists</code> Destination directory exists Use a different directory"},{"location":"errors/repo-001/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils repo https://github.com/username/repo-name --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try cloning manually with verbose output:    <pre><code>GIT_TRACE=1 git clone https://github.com/username/repo-name test-repo\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>The repository URL you're trying to clone</li> <li>Output of <code>git --version</code></li> <li>Output of debug logs</li> <li>Your operating system and network configuration </li> </ol>"},{"location":"errors/repo-002/","title":"REPO_TOO_LARGE (repo-002)","text":""},{"location":"errors/repo-002/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils attempts to clone or analyze a repository that exceeds the size limits. Repository size limits are in place to prevent excessive resource usage, long processing times, and potential system overload.</p>"},{"location":"errors/repo-002/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Repository size exceeds limits\n  Code: repo-002\n\n  Causes:\n  - The repository is too large for analysis\n  - Repository contains large binary files\n  - Repository has many large assets\n  - Repository has an extensive commit history\n\n  Suggestion: Use a smaller repository or specify a subdirectory/specific files\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/repo-002.md\n</code></pre>"},{"location":"errors/repo-002/#common-causes","title":"Common Causes","text":"<ol> <li>Large Repository: The overall repository size exceeds the maximum allowed limit.</li> <li>Binary Files: The repository contains large binary files like images, videos, or compiled binaries.</li> <li>Deep Git History: The repository has an extensive commit history, making the <code>.git</code> directory very large.</li> <li>Large Assets: The repository includes large asset files.</li> <li>LFS Content: The repository uses Git LFS (Large File Storage) with many large files.</li> <li>Generated Content: The repository contains generated content like build artifacts or node_modules.</li> </ol>"},{"location":"errors/repo-002/#solutions","title":"Solutions","text":""},{"location":"errors/repo-002/#use-a-shallow-clone","title":"Use a shallow clone","text":"<p>Perform a shallow clone to get only the latest version without full history:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --depth 1\n</code></pre>"},{"location":"errors/repo-002/#clone-a-specific-branch","title":"Clone a specific branch","text":"<p>Clone only a specific branch to reduce size:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --branch main --single-branch\n</code></pre>"},{"location":"errors/repo-002/#use-a-smaller-repository","title":"Use a smaller repository","text":"<p>Try using a smaller repository:</p> <pre><code>cursor-utils repo https://github.com/username/smaller-repo\n</code></pre>"},{"location":"errors/repo-002/#specify-a-subdirectory","title":"Specify a subdirectory","text":"<p>Focus on a specific subdirectory of the repository:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --subdir src/\n</code></pre>"},{"location":"errors/repo-002/#filter-by-file-type","title":"Filter by file type","text":"<p>Process only specific file types:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --include \"*.py\" --exclude \"*.png,*.jpg\"\n</code></pre>"},{"location":"errors/repo-002/#skip-large-files","title":"Skip large files","text":"<p>Skip files that exceed a certain size:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --max-file-size 1MB\n</code></pre>"},{"location":"errors/repo-002/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils repo --help</code> - Show help for the repo command</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/repo-002/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>REPO_CLONE_ERROR (repo-001) - Error cloning repository</li> <li>REPO_ANALYZE_ERROR (repo-003) - Error analyzing repository</li> <li>PROJECT_TOO_LARGE (project-001) - Project size exceeds limits</li> </ul>"},{"location":"errors/repo-002/#size-limitations","title":"Size Limitations","text":"<p>Cursor Utils has the following size limitations for repositories:</p> Limit Type Default Value Description Total repository size 2GB Maximum total size of the repository Individual file size 20MB Maximum size of any individual file Maximum file count 10,000 Maximum number of files in the repository Maximum processing depth 10 Maximum directory nesting level for processing"},{"location":"errors/repo-002/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/repo-002/#analyze-repository-size","title":"Analyze repository size","text":"<p>Analyze the repository size to identify large files or directories:</p> <pre><code># Clone the repository\ngit clone https://github.com/username/repo-name\n\n# Analyze repository size\ncd repo-name\ndu -h --max-depth=2 .\nfind . -type f -size +10M | sort -n\n</code></pre>"},{"location":"errors/repo-002/#use-git-sparse-checkout","title":"Use Git sparse checkout","text":"<p>Use Git sparse checkout to get only specific directories:</p> <pre><code>mkdir repo-sparse\ncd repo-sparse\ngit init\ngit remote add origin https://github.com/username/repo-name\ngit config core.sparseCheckout true\necho \"path/to/specific/dir/\" &gt; .git/info/sparse-checkout\ngit pull origin main\n</code></pre>"},{"location":"errors/repo-002/#use-specific-repo-analysis-tools","title":"Use specific repo analysis tools","text":"<p>Use specialized tools to analyze repository content:</p> <pre><code># Using git-sizer (if installed)\ngit-sizer --verbose\n\n# Using GitHub's LFS migration tool\ngit lfs migrate info --everything --above=1MB\n</code></pre>"},{"location":"errors/repo-002/#configure-size-limits","title":"Configure size limits","text":"<p>If you have control over Cursor Utils configuration, you can adjust size limits:</p> <pre><code>cursor-utils config set repo.max_size_gb 5\ncursor-utils config set repo.max_file_size_mb 50\n</code></pre> <p>Note: Increasing limits may lead to higher resource usage and longer processing times.</p>"},{"location":"errors/repo-002/#managing-large-repositories","title":"Managing Large Repositories","text":"<p>For effectively working with large repositories, consider these strategies:</p>"},{"location":"errors/repo-002/#repository-organization","title":"Repository Organization","text":"<ul> <li>Split monolithic repositories into smaller, focused repositories</li> <li>Use submodules or package dependencies for larger projects</li> <li>Keep binary assets separate from code (use LFS or separate storage)</li> </ul>"},{"location":"errors/repo-002/#git-best-practices","title":"Git Best Practices","text":"<ul> <li>Use <code>.gitignore</code> to exclude build artifacts, dependencies, and generated content</li> <li>Periodically clean repository history if appropriate</li> <li>Use Git LFS for large binary files</li> <li>Consider shallow clones for CI/CD and temporary operations</li> </ul>"},{"location":"errors/repo-002/#analysis-strategies","title":"Analysis Strategies","text":"<ul> <li>Focus analysis on specific directories or file types</li> <li>Process subdirectories individually</li> <li>Use targeted queries rather than whole-repository analysis</li> </ul>"},{"location":"errors/repo-002/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils repo https://github.com/username/repo-name --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try with a known small repository:    <pre><code>cursor-utils repo https://github.com/minimal-repo/example\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Information about the repository size (if known)</li> <li>The repository URL</li> <li>What solutions you've already tried </li> </ol>"},{"location":"errors/repo-003/","title":"REPO_ANALYZE_ERROR (repo-003)","text":""},{"location":"errors/repo-003/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue while analyzing a repository. Repository analysis problems can happen when processing repository contents, extracting information, or generating insights from the repository structure or code.</p>"},{"location":"errors/repo-003/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Failed to analyze repository\n  Code: repo-003\n\n  Causes:\n  - Error processing repository files\n  - Analysis timeout due to repository complexity\n  - Insufficient memory for analysis\n  - Unsupported file types or structures\n  - API service error during analysis\n\n  Suggestion: Try with a simpler repository or focus on specific subdirectories\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/repo-003.md\n</code></pre>"},{"location":"errors/repo-003/#common-causes","title":"Common Causes","text":"<ol> <li>Processing Errors: Issues encountered when processing repository files.</li> <li>Repository Complexity: The repository is too complex or large for effective analysis.</li> <li>Resource Limitations: Insufficient memory or CPU resources for the analysis.</li> <li>Unsupported Content: The repository contains file types or structures that aren't supported.</li> <li>API Service Issues: Problems with the underlying AI service used for repository analysis.</li> <li>Timeout: The analysis took too long and timed out.</li> </ol>"},{"location":"errors/repo-003/#solutions","title":"Solutions","text":""},{"location":"errors/repo-003/#limit-analysis-scope","title":"Limit analysis scope","text":"<p>Focus the analysis on a specific part of the repository:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --subdir src/\n</code></pre>"},{"location":"errors/repo-003/#filter-by-file-type","title":"Filter by file type","text":"<p>Analyze only specific file types:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --include \"*.py,*.md\" --exclude \"*.json,*.yaml\"\n</code></pre>"},{"location":"errors/repo-003/#use-a-simpler-repository","title":"Use a simpler repository","text":"<p>Try with a smaller or less complex repository:</p> <pre><code>cursor-utils repo https://github.com/username/simpler-repo\n</code></pre>"},{"location":"errors/repo-003/#increase-timeout","title":"Increase timeout","text":"<p>Allow more time for the analysis:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --timeout 300\n</code></pre>"},{"location":"errors/repo-003/#check-api-key","title":"Check API key","text":"<p>Ensure your API key for the analysis service is valid:</p> <pre><code>cursor-utils config api_keys --type GEMINI\n</code></pre>"},{"location":"errors/repo-003/#update-cursor-utils","title":"Update Cursor Utils","text":"<p>Make sure you're using the latest version:</p> <pre><code>cursor-utils update\n</code></pre>"},{"location":"errors/repo-003/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils repo --help</code> - Show help for the repo command</li> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/repo-003/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>REPO_CLONE_ERROR (repo-001) - Error cloning repository</li> <li>REPO_TOO_LARGE (repo-002) - Repository size exceeds limits</li> <li>GEMINI_API_ERROR (gemini-001) - Error with Gemini API</li> <li>GENERAL_ANALYZE_ERROR (general-004) - General analysis error</li> </ul>"},{"location":"errors/repo-003/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/repo-003/#check-analysis-logs","title":"Check analysis logs","text":"<p>Review the analysis logs for specific error information:</p> <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre>"},{"location":"errors/repo-003/#run-with-debug-mode","title":"Run with debug mode","text":"<p>Enable debug mode for more detailed logging:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --debug\n</code></pre>"},{"location":"errors/repo-003/#check-repository-structure","title":"Check repository structure","text":"<p>Examine the repository structure for potential issues:</p> <pre><code># Clone the repository\ngit clone https://github.com/username/repo-name\n\n# Check directory structure\nfind . -type d | sort\n\n# Count files by type\nfind . -type f | grep -v \"^./.git/\" | rev | cut -d. -f1 | rev | sort | uniq -c | sort -nr\n</code></pre>"},{"location":"errors/repo-003/#verify-file-encodings","title":"Verify file encodings","text":"<p>Check if the repository contains files with problematic encodings:</p> <pre><code># Find non-UTF-8 text files\nfind . -type f -name \"*.py\" -o -name \"*.js\" -o -name \"*.md\" | xargs -I{} bash -c \"file {} | grep -v 'UTF-8'\"\n</code></pre>"},{"location":"errors/repo-003/#analyze-in-smaller-chunks","title":"Analyze in smaller chunks","text":"<p>Break down the analysis into smaller pieces:</p> <pre><code># Analyze subdirectories individually\nfor dir in $(find . -maxdepth 1 -type d | grep -v \"^\\./\\.\"); do\n  cursor-utils repo https://github.com/username/repo-name --subdir $dir\ndone\n</code></pre>"},{"location":"errors/repo-003/#analysis-limitations","title":"Analysis Limitations","text":"<p>Cursor Utils has the following limitations for repository analysis:</p> Limitation Description File types Some binary or proprietary file formats may not be analyzed properly Language support Some programming languages may have better support than others Repository structure Unusual or non-standard repository structures may cause issues Nested dependencies Deep dependency trees might not be fully analyzed Analysis depth There may be limits to how deeply code relationships are analyzed"},{"location":"errors/repo-003/#optimization-strategies","title":"Optimization Strategies","text":"<p>To optimize repository analysis:</p>"},{"location":"errors/repo-003/#file-selection","title":"File Selection","text":"<ul> <li>Focus on important code files</li> <li>Exclude generated code, tests, and documentation if not needed</li> <li>Prioritize key modules or components</li> </ul>"},{"location":"errors/repo-003/#structure-simplification","title":"Structure Simplification","text":"<ul> <li>Use standard repository layouts</li> <li>Keep directory nesting to a reasonable depth</li> <li>Follow conventional code organization patterns</li> </ul>"},{"location":"errors/repo-003/#query-targeting","title":"Query Targeting","text":"<ul> <li>Ask specific questions about particular components</li> <li>Break complex analysis tasks into simpler ones</li> <li>Focus on one language or framework at a time</li> </ul>"},{"location":"errors/repo-003/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with extensive debug information:    <pre><code>cursor-utils repo https://github.com/username/repo-name --debug --verbose\n</code></pre></p> </li> <li> <p>Check service status:</p> </li> <li> <p>Google Cloud Status Dashboard</p> </li> <li> <p>Try a known working repository:    <pre><code>cursor-utils repo https://github.com/simple-project/example\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Repository URL</li> <li>Command you were trying to run</li> <li>Debug log output</li> <li>Your operating system and Cursor Utils version </li> </ol>"},{"location":"errors/repo-004/","title":"REPO_INVALID_URL (repo-004)","text":""},{"location":"errors/repo-004/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an invalid repository URL. This could be due to a malformed URL, a non-existent repository, or a URL that doesn't point to a valid Git repository.</p>"},{"location":"errors/repo-004/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Invalid repository URL\n  Code: repo-004\n\n  Causes:\n  - The URL format is incorrect\n  - The repository does not exist\n  - The URL does not point to a valid Git repository\n  - Typo in repository owner or name\n\n  Suggestion: Check the URL format and ensure the repository exists\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/repo-004.md\n</code></pre>"},{"location":"errors/repo-004/#common-causes","title":"Common Causes","text":"<ol> <li>Malformed URL: The URL structure doesn't follow the required format.</li> <li>Non-existent Repository: The repository doesn't exist at the specified URL.</li> <li>Typos: Typos in the repository owner or name.</li> <li>Private Repository: The repository exists but is private and not accessible.</li> <li>Not a Git Repository: The URL points to a resource that is not a Git repository.</li> <li>Incorrect Protocol: Using the wrong protocol (e.g., HTTP instead of HTTPS or SSH).</li> </ol>"},{"location":"errors/repo-004/#solutions","title":"Solutions","text":""},{"location":"errors/repo-004/#check-url-format","title":"Check URL format","text":"<p>Ensure the repository URL follows the correct format:</p> <pre><code># GitHub URLs\ncursor-utils repo https://github.com/username/repo-name\ncursor-utils repo github.com/username/repo-name\ncursor-utils repo username/repo-name  # Short form for GitHub\n\n# GitLab URLs\ncursor-utils repo https://gitlab.com/username/repo-name\n\n# Bitbucket URLs\ncursor-utils repo https://bitbucket.org/username/repo-name\n</code></pre>"},{"location":"errors/repo-004/#verify-repository-existence","title":"Verify repository existence","text":"<p>Check if the repository exists and is accessible:</p> <pre><code># Open in browser to check\nopen https://github.com/username/repo-name\n\n# Or try cloning manually\ngit clone https://github.com/username/repo-name test-clone\n</code></pre>"},{"location":"errors/repo-004/#check-for-typos","title":"Check for typos","text":"<p>Double-check the repository owner and name for typos:</p> <pre><code># Example of incorrect URL with typo\ncursor-utils repo https://github.com/usrename/repo-name  # 'usrename' instead of 'username'\n\n# Correct URL\ncursor-utils repo https://github.com/username/repo-name\n</code></pre>"},{"location":"errors/repo-004/#try-different-url-formats","title":"Try different URL formats","text":"<p>If one URL format doesn't work, try another:</p> <pre><code># Instead of\ncursor-utils repo git@github.com:username/repo-name.git\n\n# Try\ncursor-utils repo https://github.com/username/repo-name\n</code></pre>"},{"location":"errors/repo-004/#check-authentication-for-private-repositories","title":"Check authentication for private repositories","text":"<p>For private repositories, ensure you have the necessary authentication:</p> <pre><code># Set GitHub token\ncursor-utils config api_keys --type GITHUB\n</code></pre>"},{"location":"errors/repo-004/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils repo --help</code> - Show help for the repo command</li> <li><code>cursor-utils config api_keys</code> - Manage API keys including GitHub tokens</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/repo-004/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>REPO_CLONE_ERROR (repo-001) - Error cloning repository</li> <li>GITHUB_REPO_NOT_FOUND (github-003) - GitHub repository not found</li> <li>GENERAL_INVALID_URL (general-006) - General invalid URL</li> </ul>"},{"location":"errors/repo-004/#valid-repository-url-formats","title":"Valid Repository URL Formats","text":""},{"location":"errors/repo-004/#github","title":"GitHub","text":"<pre><code>https://github.com/username/repo-name\nhttps://github.com/username/repo-name.git\ngithub.com/username/repo-name\nusername/repo-name (shorthand notation)\ngit@github.com:username/repo-name.git (SSH format, requires SSH setup)\n</code></pre>"},{"location":"errors/repo-004/#gitlab","title":"GitLab","text":"<pre><code>https://gitlab.com/username/repo-name\nhttps://gitlab.com/username/repo-name.git\ngitlab.com/username/repo-name\ngit@gitlab.com:username/repo-name.git (SSH format)\n</code></pre>"},{"location":"errors/repo-004/#bitbucket","title":"Bitbucket","text":"<pre><code>https://bitbucket.org/username/repo-name\nhttps://bitbucket.org/username/repo-name.git\nbitbucket.org/username/repo-name\ngit@bitbucket.org:username/repo-name.git (SSH format)\n</code></pre>"},{"location":"errors/repo-004/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/repo-004/#test-url-resolution","title":"Test URL resolution","text":"<p>Check if the domain can be resolved:</p> <pre><code># Using ping\nping github.com\n\n# Using nslookup\nnslookup github.com\n\n# Using curl\ncurl -I https://github.com/username/repo-name\n</code></pre>"},{"location":"errors/repo-004/#check-git-configuration","title":"Check Git configuration","text":"<p>Verify your Git configuration:</p> <pre><code>git config --list\n</code></pre>"},{"location":"errors/repo-004/#test-ssh-connectivity-for-ssh-urls","title":"Test SSH connectivity (for SSH URLs)","text":"<p>If using SSH URLs, test SSH connectivity:</p> <pre><code>ssh -T git@github.com\n</code></pre>"},{"location":"errors/repo-004/#check-for-url-encoding-issues","title":"Check for URL encoding issues","text":"<p>Some special characters in URLs need to be properly encoded:</p> <pre><code># URL with space (incorrect)\ncursor-utils repo https://github.com/username/repo name\n\n# URL with space (correct)\ncursor-utils repo https://github.com/username/repo%20name\n</code></pre>"},{"location":"errors/repo-004/#common-url-errors-and-solutions","title":"Common URL Errors and Solutions","text":"Error Description Solution 404 Not Found Repository doesn't exist Check URL, verify existence 403 Forbidden No access to repository Check authentication, permissions Host unreachable Cannot connect to host Check internet connection, DNS Invalid username Username doesn't exist Check for typos in owner name SSL certificate error SSL verification failed Check system certificates"},{"location":"errors/repo-004/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils repo https://github.com/username/repo-name --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try testing the URL with external tools:    <pre><code># Using curl to check URL status\ncurl -I https://github.com/username/repo-name\n\n# Using wget to check URL\nwget --spider https://github.com/username/repo-name\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>The repository URL you're trying to use</li> <li>The output of any tests you've run</li> <li>What solutions you've already tried </li> </ol>"},{"location":"errors/repo-005/","title":"REPO_FILE_ERROR (repo-005)","text":""},{"location":"errors/repo-005/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue with a file while working with a repository. This could include problems reading, processing, or accessing specific files within the repository during analysis or other operations.</p>"},{"location":"errors/repo-005/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Error with file in repository\n  Code: repo-005\n\n  Causes:\n  - Failed to read or process a file in the repository\n  - The file has invalid encoding or format\n  - The file is too large or complex\n  - Permission issues when accessing the file\n  - The file is binary or in an unsupported format\n\n  Suggestion: Check the file format and encoding, or exclude problematic files\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/repo-005.md\n</code></pre>"},{"location":"errors/repo-005/#common-causes","title":"Common Causes","text":"<ol> <li>File Access Issues: Problems reading or accessing specific files in the repository.</li> <li>Encoding Problems: Files with unusual or incompatible character encodings.</li> <li>Large Files: Files that exceed size limits for processing.</li> <li>Unsupported Formats: Binary files or other formats that can't be properly processed.</li> <li>Corrupt Files: Files that are damaged or improperly formatted.</li> <li>Symlink Issues: Problematic symbolic links or file references.</li> </ol>"},{"location":"errors/repo-005/#solutions","title":"Solutions","text":""},{"location":"errors/repo-005/#identify-problematic-files","title":"Identify problematic files","text":"<p>Check logs to identify which files are causing issues:</p> <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log | grep \"file error\"\n</code></pre>"},{"location":"errors/repo-005/#exclude-specific-files","title":"Exclude specific files","text":"<p>Use the exclude option to skip problematic files:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --exclude \"path/to/problem/file.ext,*.bin\"\n</code></pre>"},{"location":"errors/repo-005/#filter-by-file-type","title":"Filter by file type","text":"<p>Process only specific file types:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --include \"*.py,*.js,*.md\"\n</code></pre>"},{"location":"errors/repo-005/#limit-file-size","title":"Limit file size","text":"<p>Skip large files that might cause issues:</p> <pre><code>cursor-utils repo https://github.com/username/repo-name --max-file-size 1MB\n</code></pre>"},{"location":"errors/repo-005/#check-file-encoding","title":"Check file encoding","text":"<p>If you have access to the repository, check the encoding of problematic files:</p> <pre><code># Linux/macOS\nfile -i path/to/problem/file.ext\n\n# Convert encoding if needed\niconv -f ISO-8859-1 -t UTF-8 path/to/problem/file.ext &gt; path/to/problem/file.utf8.ext\n</code></pre>"},{"location":"errors/repo-005/#try-a-different-repository","title":"Try a different repository","text":"<p>If the current repository has persistent file issues, try a different one:</p> <pre><code>cursor-utils repo https://github.com/username/different-repo\n</code></pre>"},{"location":"errors/repo-005/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils repo --help</code> - Show help for the repo command</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/repo-005/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>REPO_CLONE_ERROR (repo-001) - Error cloning repository</li> <li>REPO_ANALYZE_ERROR (repo-003) - Error analyzing repository</li> <li>GEMINI_FILE_ERROR (gemini-005) - Error with file in Gemini command</li> <li>GENERAL_FILE_ERROR (general-002) - General file error</li> </ul>"},{"location":"errors/repo-005/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/repo-005/#check-file-characteristics","title":"Check file characteristics","text":"<p>If you have access to the repository, examine the characteristics of problematic files:</p> <pre><code># Check file type\nfile path/to/problem/file.ext\n\n# Check file size\ndu -h path/to/problem/file.ext\n\n# Check file encoding\nchardet path/to/problem/file.ext  # If you have chardet installed\n\n# Check for binary content\ngrep -I \"^\" path/to/problem/file.ext &gt; /dev/null || echo \"Binary file\"\n</code></pre>"},{"location":"errors/repo-005/#look-for-unusual-files","title":"Look for unusual files","text":"<p>Identify potentially problematic files in the repository:</p> <pre><code># Find very large files\nfind . -type f -size +10M\n\n# Find files with unusual extensions\nfind . -type f | grep -v -E '\\.(py|js|html|css|md|json|yaml|yml|txt|xml|csv|rst|ini|cfg|conf)$'\n\n# Find files without extensions\nfind . -type f -not -path \"*/\\.*\" | grep -v \"\\..*$\"\n</code></pre>"},{"location":"errors/repo-005/#check-symlinks","title":"Check symlinks","text":"<p>Identify and check symbolic links:</p> <pre><code># Find symbolic links\nfind . -type l\n\n# Check if symlinks are valid\nfind . -type l -exec ls -la {} \\;\n</code></pre>"},{"location":"errors/repo-005/#verify-file-permissions","title":"Verify file permissions","text":"<p>Check file permissions:</p> <pre><code># Find files with unusual permissions\nfind . -type f -not -perm -644\n</code></pre>"},{"location":"errors/repo-005/#file-type-considerations","title":"File Type Considerations","text":"<p>Different types of files have different considerations for processing:</p> File Type Considerations Text files Usually process well, but may have encoding issues Source code Generally well-supported, but very large files may cause issues Markdown/documentation Usually process well Binary files May cause processing errors; often should be excluded Generated files May be large or have unusual formats; consider excluding Configuration files Usually small and process well Data files May be very large or have complex formats"},{"location":"errors/repo-005/#tips-for-handling-problematic-files","title":"Tips for Handling Problematic Files","text":""},{"location":"errors/repo-005/#for-large-files","title":"For Large Files","text":"<ul> <li>Split large files into smaller ones if possible</li> <li>Process only the most relevant sections</li> <li>Use summarization tools before processing</li> </ul>"},{"location":"errors/repo-005/#for-binary-files","title":"For Binary Files","text":"<ul> <li>Exclude binary files from processing</li> <li>Use specific tools designed for the binary format</li> <li>Convert to text representation if possible</li> </ul>"},{"location":"errors/repo-005/#for-encoding-issues","title":"For Encoding Issues","text":"<ul> <li>Convert files to UTF-8 encoding</li> <li>Add proper encoding declarations to source files</li> <li>Use encoding detection tools</li> </ul>"},{"location":"errors/repo-005/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils repo https://github.com/username/repo-name --debug\n</code></pre></p> </li> <li> <p>Check the logs for specific file errors:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log | grep -A 5 \"file error\"\n</code></pre></p> </li> <li> <p>Try limiting scope to a particular directory:    <pre><code>cursor-utils repo https://github.com/username/repo-name --subdir docs/\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Information about the problematic file (if known)</li> <li>The repository URL</li> <li>What solutions you've already tried </li> </ol>"},{"location":"errors/update-001/","title":"UPDATE_FAILED (update-001)","text":""},{"location":"errors/update-001/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue during the update process. The update may fail due to network issues, permission problems, dependency conflicts, or other update-related problems.</p>"},{"location":"errors/update-001/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Failed to update Cursor Utils\n  Code: update-001\n\n  Causes:\n  - Network connectivity issues\n  - Insufficient permissions\n  - Dependency conflicts\n  - Corrupted installation\n  - Package repository issues\n\n  Suggestion: Check your internet connection and permissions, then try again\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/update-001.md\n</code></pre>"},{"location":"errors/update-001/#common-causes","title":"Common Causes","text":"<ol> <li>Network Issues: Problems connecting to the package repository or GitHub.</li> <li>Permission Problems: Insufficient permissions to update files.</li> <li>Dependency Conflicts: Conflicts with other installed packages.</li> <li>Corrupted Installation: The existing installation is in an inconsistent state.</li> <li>Version Problems: Issues with version detection or compatibility.</li> <li>Disk Space: Insufficient disk space for the updated files.</li> </ol>"},{"location":"errors/update-001/#solutions","title":"Solutions","text":""},{"location":"errors/update-001/#check-internet-connection","title":"Check internet connection","text":"<p>Ensure you have a stable internet connection:</p> <pre><code># Test connection to GitHub\nping github.com\n\n# Test connection to PyPI\nping pypi.org\n</code></pre>"},{"location":"errors/update-001/#run-with-elevated-privileges","title":"Run with elevated privileges","text":"<p>If updating in a system location, try running with elevated privileges:</p> <pre><code># Linux/macOS\nsudo cursor-utils update\n\n# Windows (run as Administrator)\n</code></pre>"},{"location":"errors/update-001/#check-disk-space","title":"Check disk space","text":"<p>Ensure you have sufficient disk space:</p> <pre><code># Linux/macOS\ndf -h\n\n# Windows (PowerShell)\nGet-PSDrive C\n</code></pre>"},{"location":"errors/update-001/#try-a-specific-version","title":"Try a specific version","text":"<p>If the latest version is causing problems, you can try updating to a specific version:</p> <pre><code>cursor-utils update --version X.Y.Z\n</code></pre>"},{"location":"errors/update-001/#clear-cache-and-try-again","title":"Clear cache and try again","text":"<p>Clear package caches and try updating again:</p> <pre><code># Clear pip cache\npip cache purge\n\n# For UV users (recommended)\nuv cache clear\n</code></pre>"},{"location":"errors/update-001/#force-reinstallation","title":"Force reinstallation","text":"<p>Force a clean reinstallation:</p> <pre><code>pip uninstall -y cursor-utils\npip install --no-cache-dir cursor-utils\ncursor-utils install --force\n</code></pre>"},{"location":"errors/update-001/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils install --help</code> - Show help for the install command</li> <li><code>cursor-utils --version</code> - Check your current version</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/update-001/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>UNKNOWN_ERROR (update-999) - Unknown error during update</li> <li>VERSION_ERROR (version-001) - General version error</li> <li>INVALID_VERSION (version-002) - Invalid version format</li> </ul>"},{"location":"errors/update-001/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/update-001/#check-update-logs","title":"Check update logs","text":"<p>Check the update logs for more detailed information:</p> <pre><code>cat ~/.cursor-utils/logs/update.log\ncat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre>"},{"location":"errors/update-001/#check-installed-version","title":"Check installed version","text":"<p>Verify your currently installed version:</p> <pre><code>cursor-utils --version\npip show cursor-utils\n</code></pre>"},{"location":"errors/update-001/#check-for-network-proxy-issues","title":"Check for network proxy issues","text":"<p>If you're behind a proxy, ensure it's properly configured:</p> <pre><code># Check proxy environment variables\necho $HTTP_PROXY\necho $HTTPS_PROXY\n\n# Configure proxy for pip if needed\npip config set global.proxy http://user:password@proxy:port\n</code></pre>"},{"location":"errors/update-001/#try-updating-dependencies-separately","title":"Try updating dependencies separately","text":"<p>Update dependencies separately before updating Cursor Utils:</p> <pre><code>pip install --upgrade pip setuptools wheel\n</code></pre>"},{"location":"errors/update-001/#check-for-conflicts-with-other-packages","title":"Check for conflicts with other packages","text":"<p>Look for package conflicts:</p> <pre><code>pip check\n</code></pre>"},{"location":"errors/update-001/#update-strategies","title":"Update Strategies","text":""},{"location":"errors/update-001/#standard-update","title":"Standard Update","text":"<p>The default update method:</p> <pre><code>cursor-utils update\n</code></pre>"},{"location":"errors/update-001/#clean-update","title":"Clean Update","text":"<p>Performs a more thorough update by clearing caches:</p> <pre><code>cursor-utils update --clean\n</code></pre>"},{"location":"errors/update-001/#development-update","title":"Development Update","text":"<p>For development installations:</p> <pre><code>cd /path/to/cursor-utils\ngit pull\npip install -e .\n</code></pre>"},{"location":"errors/update-001/#manual-files-update","title":"Manual Files Update","text":"<p>If the package update succeeds but file updates fail:</p> <pre><code>cursor-utils files update\n</code></pre>"},{"location":"errors/update-001/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run the update with debug logging:    <pre><code>cursor-utils update --debug\n</code></pre></p> </li> <li> <p>Try a complete removal and fresh installation:    <pre><code># Remove everything\npip uninstall -y cursor-utils\nrm -rf ~/.cursor-utils\n\n# Fresh install\npip install cursor-utils\ncursor-utils install\n</code></pre></p> </li> <li> <p>Check GitHub for known issues:    GitHub Issues</p> </li> <li> <p>Submit a bug report with:</p> </li> <li>Your operating system and version</li> <li>Your Cursor Utils version (<code>cursor-utils --version</code>)</li> <li>Complete error message</li> <li>Debug logs</li> <li>Steps to reproduce the error </li> </ol>"},{"location":"errors/update-999/","title":"UNKNOWN_ERROR (update-999)","text":""},{"location":"errors/update-999/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an unexpected or unclassified error during the update process that doesn't match any of the more specific error types. These errors typically represent edge cases or rare combinations of issues.</p>"},{"location":"errors/update-999/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Encountered an unknown error during update\n  Code: update-999\n\n  Causes:\n  - Unexpected system state\n  - Rare combination of conditions\n  - Bug in the update process\n  - System interruption during update\n\n  Suggestion: Check logs for detailed information and report this issue\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/update-999.md\n</code></pre>"},{"location":"errors/update-999/#common-causes","title":"Common Causes","text":"<ol> <li>Unexpected Errors: Errors that weren't anticipated in the error handling logic.</li> <li>System Interruptions: The update process was interrupted unexpectedly (e.g., power loss, system crash).</li> <li>Resource Limitations: Unexpected resource constraints (memory, CPU, disk, etc.).</li> <li>Environment Inconsistencies: Unusual system environment configurations.</li> <li>Software Bugs: Bugs in the update code itself.</li> <li>Corrupted State: The installation is in a corrupted or unexpected state.</li> </ol>"},{"location":"errors/update-999/#solutions","title":"Solutions","text":""},{"location":"errors/update-999/#check-the-logs","title":"Check the logs","text":"<p>Examine the logs for more detailed information about the error:</p> <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\ncat ~/.cursor-utils/logs/update.log\n</code></pre> <p>Look for specific error messages, stack traces, or exception information that might provide more context about the unknown error.</p>"},{"location":"errors/update-999/#run-with-debug-mode","title":"Run with debug mode","text":"<p>Run the update with debug logging enabled:</p> <pre><code>cursor-utils update --debug\n</code></pre> <p>This will produce much more detailed logs that can help identify the issue.</p>"},{"location":"errors/update-999/#clean-installation","title":"Clean installation","text":"<p>Try a complete reinstallation:</p> <pre><code># Remove existing installation\npip uninstall -y cursor-utils\nrm -rf ~/.cursor-utils  # Be careful with rm -rf commands!\n\n# Reinstall\npip install cursor-utils\ncursor-utils install\n</code></pre>"},{"location":"errors/update-999/#try-updating-to-a-specific-version","title":"Try updating to a specific version","text":"<p>If the problem is with the latest version, try updating to a known stable version:</p> <pre><code>cursor-utils update --version X.Y.Z\n</code></pre>"},{"location":"errors/update-999/#check-system-resources","title":"Check system resources","text":"<p>Ensure your system has adequate resources:</p> <pre><code># Check disk space\ndf -h\n\n# Check memory (Linux)\nfree -h\n\n# Check memory (Windows PowerShell)\nGet-CimInstance Win32_OperatingSystem | Select-Object FreePhysicalMemory, TotalVisibleMemorySize\n</code></pre>"},{"location":"errors/update-999/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils update --help</code> - Show help for the update command</li> <li><code>cursor-utils --version</code> - Check your current version</li> <li><code>cursor-utils install --force</code> - Force a fresh installation</li> </ul>"},{"location":"errors/update-999/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>UPDATE_FAILED (update-001) - General update failure</li> <li>VERSION_ERROR (version-001) - General version error</li> <li>GENERAL_ERROR (general-001) - General error</li> </ul>"},{"location":"errors/update-999/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/update-999/#temporary-workarounds","title":"Temporary workarounds","text":"<p>While you're troubleshooting the unknown error, you might want to use alternative approaches:</p> <ol> <li> <p>Manual Installation: Clone and install from source    <pre><code>git clone https://github.com/gweidart/cursor-utils.git\ncd cursor-utils\npip install -e .\n</code></pre></p> </li> <li> <p>Offline Installation: If network issues are suspected    <pre><code># Download the package on a working machine\npip download cursor-utils -d ./packages\n\n# Copy ./packages to the target machine and install\npip install --no-index --find-links ./packages cursor-utils\n</code></pre></p> </li> <li> <p>Component-Specific Updates: Update specific components only    <pre><code>cursor-utils config update\ncursor-utils templates update\n</code></pre></p> </li> </ol>"},{"location":"errors/update-999/#environment-isolation","title":"Environment isolation","text":"<p>Try using a virtual environment:</p> <pre><code># Create virtual environment\npython -m venv cursor_utils_env\n\n# Activate environment\n# On Linux/macOS:\nsource cursor_utils_env/bin/activate\n# On Windows:\ncursor_utils_env\\Scripts\\activate\n\n# Install in the virtual environment\npip install cursor-utils\ncursor-utils install\n</code></pre>"},{"location":"errors/update-999/#check-for-environmental-factors","title":"Check for environmental factors","text":"<p>Some unknown errors can be caused by system-specific factors:</p> <ol> <li> <p>Environment Variables: Check for unusual environment variables    <pre><code>env | grep -i cursor\nenv | grep -i python\n</code></pre></p> </li> <li> <p>System Time: Ensure your system time is accurate    <pre><code>date\n</code></pre></p> </li> <li> <p>Network Configuration: Check for firewall or proxy issues    <pre><code>curl -v https://github.com\ncurl -v https://pypi.org\n</code></pre></p> </li> </ol>"},{"location":"errors/update-999/#reporting-this-error","title":"Reporting This Error","text":"<p>Unknown errors are particularly important to report to help improve Cursor Utils. When reporting:</p> <ol> <li> <p>Provide complete logs: Include the full output of:    <pre><code>cursor-utils update --debug\n</code></pre></p> </li> <li> <p>System information:    <pre><code># OS information\nuname -a  # Linux/macOS\nsysteminfo  # Windows\n\n# Python information\npython --version\npip list\n</code></pre></p> </li> <li> <p>Reproduction steps: Detailed steps to reproduce the error</p> </li> <li> <p>Environment details:</p> </li> <li>Are you using a virtual environment?</li> <li>Any non-standard Python configurations?</li> <li>Custom installation options used?</li> </ol>"},{"location":"errors/update-999/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Check if this is a known issue:    GitHub Issues</p> </li> <li> <p>Submit a detailed bug report:</p> </li> <li>Include all information mentioned in the \"Reporting This Error\" section</li> <li>Mention any workarounds you've tried</li> <li>Note whether the issue is consistent or intermittent</li> <li> <p>Include your cursor-utils version and installation method</p> </li> <li> <p>Try the latest development version as a temporary solution:    <pre><code>pip install git+https://github.com/gweidart/cursor-utils.git@main\n</code></pre></p> </li> </ol>"},{"location":"errors/version-001/","title":"VERSION_ERROR (version-001)","text":""},{"location":"errors/version-001/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters a general issue related to version handling, such as incompatible versions, version detection failures, or version-related conflicts that don't fall into more specific error categories.</p>"},{"location":"errors/version-001/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Version-related error encountered\n  Code: version-001\n\n  Causes:\n  - Version mismatch between components\n  - Cannot determine installed version\n  - Version incompatibility with system\n  - Minimum version requirements not met\n\n  Suggestion: Check installed versions and ensure compatibility\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/version-001.md\n</code></pre>"},{"location":"errors/version-001/#common-causes","title":"Common Causes","text":"<ol> <li>Component Version Mismatch: Different components of Cursor Utils have incompatible versions.</li> <li>Version Detection Failure: The system cannot determine the installed version.</li> <li>Dependency Version Conflicts: Conflicts between Cursor Utils version and its dependencies.</li> <li>Minimum Requirements: The current version doesn't meet minimum requirements for a feature.</li> <li>Inconsistent Installation: Parts of the installation were updated but others weren't.</li> <li>Python Version Incompatibility: The installed version is incompatible with your Python version.</li> </ol>"},{"location":"errors/version-001/#solutions","title":"Solutions","text":""},{"location":"errors/version-001/#check-current-version","title":"Check current version","text":"<p>Verify your currently installed version:</p> <pre><code>cursor-utils --version\npip show cursor-utils\n</code></pre>"},{"location":"errors/version-001/#update-to-the-latest-version","title":"Update to the latest version","text":"<p>Update to the latest version to resolve version conflicts:</p> <pre><code>cursor-utils update\n</code></pre>"},{"location":"errors/version-001/#check-python-version-compatibility","title":"Check Python version compatibility","text":"<p>Ensure your Python version is compatible:</p> <pre><code>python --version\n</code></pre> <p>Cursor Utils requires Python 3.7 or higher. If you're using an older version, you'll need to upgrade Python or use a compatible Cursor Utils version.</p>"},{"location":"errors/version-001/#reinstall-with-a-specific-version","title":"Reinstall with a specific version","text":"<p>If needed, install a specific version:</p> <pre><code>pip uninstall -y cursor-utils\npip install cursor-utils==X.Y.Z\n</code></pre>"},{"location":"errors/version-001/#check-component-versions","title":"Check component versions","text":"<p>Check the versions of all components:</p> <pre><code>cursor-utils components versions\n</code></pre>"},{"location":"errors/version-001/#force-consistent-versions","title":"Force consistent versions","text":"<p>Force all components to use consistent versions:</p> <pre><code>cursor-utils install --force\n</code></pre>"},{"location":"errors/version-001/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils update</code> - Update to the latest version</li> <li><code>cursor-utils --version</code> - Check the current version</li> <li><code>cursor-utils install --force</code> - Force a fresh installation with consistent versions</li> </ul>"},{"location":"errors/version-001/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>INVALID_VERSION (version-002) - Invalid version format</li> <li>UPDATE_FAILED (update-001) - Update process failed</li> <li>UNKNOWN_ERROR (update-999) - Unknown error during update</li> </ul>"},{"location":"errors/version-001/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/version-001/#check-version-constraints","title":"Check version constraints","text":"<p>Examine version constraints in the package:</p> <pre><code>pip show cursor-utils\n</code></pre> <p>Look for the \"Requires\" section to see dependency version constraints.</p>"},{"location":"errors/version-001/#check-for-conflicting-packages","title":"Check for conflicting packages","text":"<p>Identify packages that might conflict with Cursor Utils:</p> <pre><code>pip list | grep cursor\npip check\n</code></pre>"},{"location":"errors/version-001/#examine-version-information-in-detail","title":"Examine version information in detail","text":"<p>Get detailed version information:</p> <pre><code>cursor-utils --version --verbose\n</code></pre>"},{"location":"errors/version-001/#check-for-partial-updates","title":"Check for partial updates","text":"<p>If a previous update was interrupted, some components might have different versions:</p> <pre><code>find ~/.cursor-utils -name \"version.txt\" -exec cat {} \\;\n</code></pre>"},{"location":"errors/version-001/#version-compatibility-matrix","title":"Version Compatibility Matrix","text":"<p>Here's a quick reference for version compatibility:</p> Cursor Utils Version Python Version Key Dependencies 0.1.x 3.7+ click, rich, requests 0.2.x 3.8+ click, rich, requests, pyyaml 0.3.x+ 3.9+ click, rich, requests, pyyaml, typing-extensions"},{"location":"errors/version-001/#environment-specific-considerations","title":"Environment-specific considerations","text":""},{"location":"errors/version-001/#linuxmacos","title":"Linux/macOS","text":"<p>On Linux/macOS, check for system Python vs. user Python:</p> <pre><code>which -a python\nwhich -a pip\n</code></pre> <p>Make sure you're using the intended Python installation.</p>"},{"location":"errors/version-001/#windows","title":"Windows","text":"<p>On Windows, check for multiple Python installations:</p> <pre><code>where python\nwhere pip\npy --list\n</code></pre>"},{"location":"errors/version-001/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug mode to get more detailed information:    <pre><code>cursor-utils --version --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try a complete reinstallation:    <pre><code>pip uninstall -y cursor-utils\nrm -rf ~/.cursor-utils\npip install cursor-utils\ncursor-utils install\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>Complete error message</li> <li>Output of <code>cursor-utils --version</code></li> <li>Output of <code>python --version</code></li> <li>Output of <code>pip list</code></li> <li>Operating system and version</li> <li>Installation method used </li> </ol>"},{"location":"errors/version-002/","title":"INVALID_VERSION (version-002)","text":""},{"location":"errors/version-002/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an invalid version format or specification. This typically happens when an incorrect version string is provided to commands that require version information, or when the version string in the configuration is malformed.</p>"},{"location":"errors/version-002/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Invalid version format\n  Code: version-002\n\n  Causes:\n  - The specified version string does not follow semantic versioning\n  - The version contains invalid characters\n  - The version format is incompatible with Cursor Utils\n  - The version string is empty or malformed\n\n  Suggestion: Use a valid version format (e.g., 1.2.3 or 1.2.3-beta.1)\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/version-002.md\n</code></pre>"},{"location":"errors/version-002/#common-causes","title":"Common Causes","text":"<ol> <li>Invalid Format: The version string doesn't follow semantic versioning (SemVer) standards.</li> <li>Invalid Characters: The version string contains characters that aren't allowed.</li> <li>Empty Version: The version string is empty or only contains whitespace.</li> <li>Incorrect Prefix: The version string has an incorrect prefix (e.g., \"v1.0.0\" instead of \"1.0.0\").</li> <li>Too Many/Few Components: The version has too many or too few components (e.g., \"1.2.3.4\").</li> <li>Corrupted Version File: The version information in the installation is corrupted.</li> </ol>"},{"location":"errors/version-002/#solutions","title":"Solutions","text":""},{"location":"errors/version-002/#use-the-correct-version-format","title":"Use the correct version format","text":"<p>Cursor Utils follows Semantic Versioning (SemVer). Valid version formats include:</p> <pre><code>1.0.0\n1.2.3\n0.1.0\n2.0.0-alpha\n1.0.0-beta.1\n1.0.0-rc.2\n</code></pre> <p>When specifying a version, use one of these formats:</p> <pre><code>cursor-utils update --version 1.2.3\n</code></pre>"},{"location":"errors/version-002/#check-current-version","title":"Check current version","text":"<p>Verify the currently installed version format:</p> <pre><code>cursor-utils --version\n</code></pre>"},{"location":"errors/version-002/#reinstall-with-a-valid-version","title":"Reinstall with a valid version","text":"<p>If you're trying to install a specific version, make sure to use a valid version string:</p> <pre><code>pip uninstall -y cursor-utils\npip install cursor-utils==1.2.3\n</code></pre>"},{"location":"errors/version-002/#fix-version-file","title":"Fix version file","text":"<p>If the version file is corrupted, you can try fixing it:</p> <pre><code># Find the version file\nfind ~/.cursor-utils -name \"version.txt\"\n\n# Fix the version file (replace X.Y.Z with a valid version)\necho \"X.Y.Z\" &gt; ~/.cursor-utils/version.txt\n</code></pre>"},{"location":"errors/version-002/#update-to-the-latest-version","title":"Update to the latest version","text":"<p>If you're unsure about version numbers, simply update to the latest version:</p> <pre><code>cursor-utils update\n</code></pre>"},{"location":"errors/version-002/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils --version</code> - Check the current version</li> <li><code>cursor-utils update</code> - Update to the latest version</li> <li><code>cursor-utils update --version X.Y.Z</code> - Update to a specific version</li> </ul>"},{"location":"errors/version-002/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>VERSION_ERROR (version-001) - General version error</li> <li>UPDATE_FAILED (update-001) - Update process failed</li> </ul>"},{"location":"errors/version-002/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/version-002/#understanding-semantic-versioning","title":"Understanding Semantic Versioning","text":"<p>Semantic Versioning (SemVer) uses a three-part version number: MAJOR.MINOR.PATCH</p> <ol> <li>MAJOR version increments when incompatible API changes are made</li> <li>MINOR version increments when functionality is added in a backward-compatible manner</li> <li>PATCH version increments when backward-compatible bug fixes are made</li> </ol> <p>Pre-release versions can be denoted by appending a hyphen and identifiers: - <code>1.0.0-alpha</code> - <code>1.0.0-beta.1</code> - <code>1.0.0-rc.1</code></p>"},{"location":"errors/version-002/#check-version-constraints","title":"Check version constraints","text":"<p>Examine version constraints in the package:</p> <pre><code>pip show cursor-utils\n</code></pre>"},{"location":"errors/version-002/#check-git-tags","title":"Check Git tags","text":"<p>If you're working with a Git repository, check available version tags:</p> <pre><code>git tag\n</code></pre>"},{"location":"errors/version-002/#manually-set-version-for-development","title":"Manually set version for development","text":"<p>For development installations, you can set the version manually:</p> <pre><code># In your cursor-utils directory\nbump-my-version set X.Y.Z\n</code></pre>"},{"location":"errors/version-002/#common-version-format-errors","title":"Common Version Format Errors","text":"Invalid Format Issue Correct Format <code>v1.0.0</code> Includes \"v\" prefix <code>1.0.0</code> <code>1.0</code> Missing patch version <code>1.0.0</code> <code>1</code> Missing minor and patch <code>1.0.0</code> <code>1.0.0.0</code> Too many components <code>1.0.0</code> <code>1.0.0alpha</code> Missing hyphen for pre-release <code>1.0.0-alpha</code> <code>latest</code> Not a version number Specify an actual version <code>1.0.0+build.1</code> Build metadata not supported <code>1.0.0</code>"},{"location":"errors/version-002/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Try a complete reinstallation with a specific, known-good version:    <pre><code>pip uninstall -y cursor-utils\npip install cursor-utils==0.1.0  # Adjust with a known good version\ncursor-utils install\n</code></pre></p> </li> <li> <p>Check the logs for more details:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>The version string you were trying to use</li> <li>Output of <code>cursor-utils --version</code></li> <li>Commands you were running when the error occurred </li> </ol>"},{"location":"errors/web-001/","title":"WEB_API_ERROR (web-001)","text":""},{"location":"errors/web-001/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue with the Perplexity API while executing a web command. The error typically indicates that there was a problem with the API request, response, or authentication.</p>"},{"location":"errors/web-001/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Failed to complete web search request\n  Code: web-001\n\n  Causes:\n  - Invalid or missing Perplexity API key\n  - Perplexity API service may be unavailable\n  - Network connectivity issues\n  - Rate limit exceeded\n\n  Suggestion: Check your API key and internet connection, then try again\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/web-001.md\n</code></pre>"},{"location":"errors/web-001/#common-causes","title":"Common Causes","text":"<ol> <li>Invalid API Key: Your Perplexity API key is incorrect, expired, or not properly configured.</li> <li>Missing API Key: You haven't set up a Perplexity API key.</li> <li>API Service Issues: The Perplexity API service might be experiencing downtime or issues.</li> <li>Network Problems: There might be network connectivity issues between your system and the Perplexity API servers.</li> <li>Rate Limiting: You might have exceeded the rate limits for your Perplexity API key.</li> <li>Request Format: The request format might be invalid or contain unsupported parameters.</li> </ol>"},{"location":"errors/web-001/#solutions","title":"Solutions","text":""},{"location":"errors/web-001/#check-your-api-key","title":"Check your API key","text":"<p>Verify that your Perplexity API key is correctly set up:</p> <pre><code>cursor-utils config api_keys\n</code></pre> <p>If your API key is not set or needs to be updated, you can set it with:</p> <pre><code>cursor-utils config api_keys --type PERPLEXITY\n</code></pre>"},{"location":"errors/web-001/#check-api-key-in-environment","title":"Check API key in environment","text":"<p>Ensure the API key is correctly set in your environment:</p> <pre><code># Linux/macOS\ngrep PERPLEXITY_API_KEY ~/.env\n</code></pre> <pre><code># Windows (PowerShell)\nGet-Content ~/.env | Select-String PERPLEXITY_API_KEY\n</code></pre>"},{"location":"errors/web-001/#test-your-internet-connection","title":"Test your internet connection","text":"<p>Verify that you have a working internet connection:</p> <pre><code>ping api.perplexity.ai\n</code></pre>"},{"location":"errors/web-001/#check-api-status","title":"Check API status","text":"<p>Visit the Perplexity Status Page to see if there are any reported service issues.</p>"},{"location":"errors/web-001/#reduce-request-complexity","title":"Reduce request complexity","text":"<p>If you're hitting rate limits, try: - Simplifying your query - Breaking complex requests into smaller parts - Adding delays between requests</p>"},{"location":"errors/web-001/#run-in-debug-mode","title":"Run in debug mode","text":"<p>Execute the command with the debug flag to get more detailed error information:</p> <pre><code>cursor-utils web \"your query\" --debug\n</code></pre>"},{"location":"errors/web-001/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils web --help</code> - Show help for the web command</li> <li><code>cursor-utils config api_keys</code> - Manage API keys</li> <li><code>cursor-utils config show</code> - Display current configuration</li> </ul>"},{"location":"errors/web-001/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>WEB_CONFIG_ERROR (web-002) - Error with web command configuration</li> <li>WEB_CONNECTION_ERROR (web-003) - Connection error during web command</li> <li>WEB_TIMEOUT_ERROR (web-004) - Timeout during web command</li> <li>INVALID_API_KEY (config-001) - Invalid API key</li> </ul>"},{"location":"errors/web-001/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/web-001/#check-request-and-response-details","title":"Check request and response details","text":"<p>When running in debug mode, you can see the full request and response details in the logs:</p> <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre> <p>Look for entries with \"WEB_API_ERROR\" or related to the Perplexity API.</p>"},{"location":"errors/web-001/#check-for-json-parsing-errors","title":"Check for JSON parsing errors","text":"<p>If the API response is valid but cannot be parsed, there might be an issue with JSON parsing. Look for error messages like \"JSON decode error\" in the logs.</p>"},{"location":"errors/web-001/#api-parameters","title":"API Parameters","text":"<p>Ensure you're using supported parameters for the Perplexity API:</p> <ul> <li>Models: sonar, sonar-pro, sonar-reasoning, sonar-pro-reasoning</li> <li>Modes: copilot, concise</li> <li>Search focuses: internet, scholar, writing, wolfram, youtube, reddit</li> </ul> <p>You can specify these parameters in your configuration file or via command-line options.</p>"},{"location":"errors/web-001/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Update Cursor Utils to the latest version:    <pre><code>cursor-utils update\n</code></pre></p> </li> <li> <p>Check if your issue is already reported in the GitHub Issues.</p> </li> <li> <p>If not, submit a new bug report with:</p> </li> <li>The exact command you were trying to run</li> <li>The complete error message</li> <li>Your Cursor Utils version (<code>cursor-utils --version</code>)</li> <li>Debug logs (<code>~/.cursor-utils/logs/cursor-utils.log</code>) with sensitive information redacted</li> <li>Your operating system and version </li> </ol>"},{"location":"errors/web-002/","title":"WEB_CONFIG_ERROR (web-002)","text":""},{"location":"errors/web-002/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters a configuration issue specific to the web command. This could be due to invalid or missing configuration options for the web command, such as model selection, search focus, or other web command-specific settings.</p>"},{"location":"errors/web-002/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Web command configuration error\n  Code: web-002\n\n  Causes:\n  - Invalid model specified in configuration\n  - Invalid search focus specified\n  - Invalid mode specified\n  - Missing required web command configuration\n\n  Suggestion: Check your web command configuration and specify valid options\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/web-002.md\n</code></pre>"},{"location":"errors/web-002/#common-causes","title":"Common Causes","text":"<ol> <li>Invalid Model: The specified model for the web command is not supported or is invalid.</li> <li>Invalid Search Focus: The specified search focus is not supported.</li> <li>Invalid Mode: The specified mode is not supported.</li> <li>Missing Configuration: Required web command configuration is missing.</li> <li>Type Mismatch: Configuration values have incorrect types (e.g., number instead of string).</li> <li>Deprecated Options: Using deprecated configuration options that are no longer supported.</li> </ol>"},{"location":"errors/web-002/#solutions","title":"Solutions","text":""},{"location":"errors/web-002/#check-web-configuration","title":"Check web configuration","text":"<p>View your current web command configuration:</p> <pre><code>cursor-utils config show | grep -A 10 \"web:\"\n\n# Windows (PowerShell)\ncursor-utils config show | Select-String -Context 0,10 \"web:\"\n</code></pre>"},{"location":"errors/web-002/#set-correct-web-configuration","title":"Set correct web configuration","text":"<p>Update your web configuration with valid values:</p> <pre><code># Set the model (valid values: sonar, sonar-pro, sonar-reasoning, sonar-pro-reasoning)\ncursor-utils config set web.model sonar-pro\n\n# Set the mode (valid values: copilot, concise)\ncursor-utils config set web.mode copilot\n\n# Set the search focus (valid values: internet, scholar, writing, wolfram, youtube, reddit)\ncursor-utils config set web.search_focus internet\n</code></pre>"},{"location":"errors/web-002/#reset-to-default-web-configuration","title":"Reset to default web configuration","text":"<p>Reset the web configuration to defaults:</p> <pre><code>cursor-utils config reset web\n</code></pre>"},{"location":"errors/web-002/#specify-options-in-the-command","title":"Specify options in the command","text":"<p>Override configuration by specifying options directly in the command:</p> <pre><code>cursor-utils web \"your query\" --model sonar-pro --mode copilot --search-focus internet\n</code></pre>"},{"location":"errors/web-002/#check-configuration-file-directly","title":"Check configuration file directly","text":"<p>Examine and edit your configuration file directly:</p> <pre><code># Linux/macOS\nnano ~/cursor-utils.yaml\n\n# Windows (PowerShell)\nnotepad \"$HOME\\cursor-utils.yaml\"\n</code></pre> <p>Ensure the web section is properly configured:</p> <pre><code>web:\n  model: \"sonar-pro\"\n  mode: \"copilot\"\n  search_focus: \"internet\"\n</code></pre>"},{"location":"errors/web-002/#valid-configuration-values","title":"Valid Configuration Values","text":""},{"location":"errors/web-002/#web-models","title":"Web Models","text":"Model Description <code>sonar</code> Basic model for simple queries <code>sonar-pro</code> Enhanced model with better comprehension <code>sonar-reasoning</code> Model with improved reasoning capabilities <code>sonar-pro-reasoning</code> Most advanced model with best reasoning"},{"location":"errors/web-002/#web-modes","title":"Web Modes","text":"Mode Description <code>copilot</code> Interactive, conversational mode <code>concise</code> Brief, to-the-point answers"},{"location":"errors/web-002/#search-focus","title":"Search Focus","text":"Search Focus Description <code>internet</code> General internet search (default) <code>scholar</code> Academic and scholarly content <code>writing</code> Writing and content creation focus <code>wolfram</code> Mathematical and computational focus <code>youtube</code> Video content focus <code>reddit</code> Community discussions focus"},{"location":"errors/web-002/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils web --help</code> - Show help for the web command</li> <li><code>cursor-utils config show</code> - Display current configuration</li> <li><code>cursor-utils config set</code> - Set a configuration value</li> <li><code>cursor-utils config reset</code> - Reset configuration to defaults</li> </ul>"},{"location":"errors/web-002/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>WEB_API_ERROR (web-001) - Error with Perplexity API</li> <li>CONFIG_FILE_ERROR (config-005) - Error with configuration file</li> <li>INVALID_API_KEY (config-001) - Invalid API key</li> </ul>"},{"location":"errors/web-002/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/web-002/#validate-yaml-syntax","title":"Validate YAML syntax","text":"<p>Ensure your configuration YAML has valid syntax:</p> <pre><code># Using Python\npython -c \"import yaml, sys; yaml.safe_load(open('~/cursor-utils.yaml'))\"\n</code></pre>"},{"location":"errors/web-002/#check-for-typos-in-configuration-keys","title":"Check for typos in configuration keys","text":"<p>Common typos include: - <code>model</code> vs <code>models</code> - <code>mode</code> vs <code>modes</code> - <code>search_focus</code> vs <code>search-focus</code> - <code>seach_focus</code> vs <code>search_focus</code> (missing 'r')</p>"},{"location":"errors/web-002/#check-for-case-sensitivity","title":"Check for case sensitivity","text":"<p>Configuration keys and values might be case-sensitive: - Use <code>sonar-pro</code> not <code>Sonar-Pro</code> - Use <code>copilot</code> not <code>CoPilot</code> - Use <code>internet</code> not <code>Internet</code></p>"},{"location":"errors/web-002/#try-command-line-options-without-configuration","title":"Try command-line options without configuration","text":"<p>Bypass configuration by using command-line options only:</p> <pre><code>cursor-utils web \"your query\" --model sonar-pro --mode copilot --search-focus internet --debug\n</code></pre>"},{"location":"errors/web-002/#configuration-examples","title":"Configuration Examples","text":""},{"location":"errors/web-002/#minimal-web-configuration","title":"Minimal Web Configuration","text":"<pre><code>web:\n  model: \"sonar-pro\"\n  mode: \"copilot\"\n  search_focus: \"internet\"\n</code></pre>"},{"location":"errors/web-002/#complete-web-configuration","title":"Complete Web Configuration","text":"<pre><code>web:\n  model: \"sonar-pro\"           # Model to use\n  mode: \"copilot\"              # Response mode\n  search_focus: \"internet\"     # Search focus\n  temperature: 0.7             # Optional: model temperature\n  max_tokens: 2048             # Optional: maximum output tokens\n  save_to_file: true           # Optional: save responses to files\n  save_path: \"~/web-results\"   # Optional: path to save results\n</code></pre>"},{"location":"errors/web-002/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with debug logging:    <pre><code>cursor-utils web \"test query\" --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Create a minimal configuration:    <pre><code>cat &gt; ~/cursor-utils.yaml.minimal &lt;&lt; EOF\nversion: \"1.0.0\"\nsettings:\n  debug: true\n  log_level: \"DEBUG\"\nweb:\n  model: \"sonar-pro\"\n  mode: \"copilot\"\n  search_focus: \"internet\"\nEOF\n\ncursor-utils web \"test query\" --config ~/cursor-utils.yaml.minimal\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Your current web configuration (<code>cursor-utils config show | grep -A 10 \"web:\"</code>)</li> <li>The command you were trying to run</li> <li>Output of debug logs </li> </ol>"},{"location":"errors/web-003/","title":"WEB_CONNECTION_ERROR (web-003)","text":""},{"location":"errors/web-003/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters a connection issue while trying to communicate with the Perplexity API during a web command. This could be due to network problems, DNS issues, firewall restrictions, or unavailability of the Perplexity API service.</p>"},{"location":"errors/web-003/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Failed to connect to the Perplexity API\n  Code: web-003\n\n  Causes:\n  - Network connectivity issues\n  - DNS resolution problems\n  - Firewall or proxy restrictions\n  - Perplexity API service outage\n\n  Suggestion: Check your internet connection and try again later\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/web-003.md\n</code></pre>"},{"location":"errors/web-003/#common-causes","title":"Common Causes","text":"<ol> <li>Network Issues: Your internet connection is down or unstable.</li> <li>DNS Problems: Cannot resolve the Perplexity API domain.</li> <li>Firewall Restrictions: Your firewall is blocking connections to the Perplexity API.</li> <li>Proxy Issues: Proxy server configuration is preventing the connection.</li> <li>Service Outage: The Perplexity API service is experiencing downtime.</li> <li>TLS/SSL Issues: Problems with TLS/SSL certificate validation.</li> </ol>"},{"location":"errors/web-003/#solutions","title":"Solutions","text":""},{"location":"errors/web-003/#check-internet-connection","title":"Check internet connection","text":"<p>Verify that you have a working internet connection:</p> <pre><code># Test general connectivity\nping google.com\n\n# Test connectivity to Perplexity\nping api.perplexity.ai\n</code></pre>"},{"location":"errors/web-003/#check-dns-resolution","title":"Check DNS resolution","text":"<p>Ensure that the Perplexity API domain resolves correctly:</p> <pre><code># Linux/macOS\ndig api.perplexity.ai\n\n# Windows\nnslookup api.perplexity.ai\n</code></pre>"},{"location":"errors/web-003/#check-for-firewall-restrictions","title":"Check for firewall restrictions","text":"<p>Make sure your firewall allows connections to the Perplexity API:</p> <pre><code># Linux (check if outbound connections are allowed)\nsudo iptables -L OUTPUT\n\n# Windows (check Windows Firewall settings)\n# Start &gt; Windows Defender Firewall &gt; Advanced Settings &gt; Outbound Rules\n</code></pre>"},{"location":"errors/web-003/#test-api-endpoint-directly","title":"Test API endpoint directly","text":"<p>Try to connect to the API endpoint directly:</p> <pre><code># Using curl (if available)\ncurl -v https://api.perplexity.ai/health\n\n# Using PowerShell (Windows)\nInvoke-WebRequest -Uri https://api.perplexity.ai/health\n</code></pre>"},{"location":"errors/web-003/#check-proxy-settings","title":"Check proxy settings","text":"<p>If you're using a proxy, ensure it's correctly configured:</p> <pre><code># Check proxy environment variables\necho $HTTP_PROXY\necho $HTTPS_PROXY\n\n# Set proxy if needed\nexport HTTP_PROXY=http://proxy:port\nexport HTTPS_PROXY=http://proxy:port\n</code></pre>"},{"location":"errors/web-003/#try-with-retry-and-increased-timeout","title":"Try with retry and increased timeout","text":"<p>Use retry and increased timeout options:</p> <pre><code>cursor-utils web \"your query\" --retries 3 --timeout 30\n</code></pre>"},{"location":"errors/web-003/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils web --help</code> - Show help for the web command</li> <li><code>cursor-utils config show</code> - Display current configuration</li> <li><code>cursor-utils test connection</code> - Test API connectivity</li> </ul>"},{"location":"errors/web-003/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>WEB_API_ERROR (web-001) - Error with Perplexity API</li> <li>WEB_TIMEOUT_ERROR (web-004) - Timeout during web command</li> <li>WEB_STREAM_ERROR (web-005) - Error with streaming response</li> </ul>"},{"location":"errors/web-003/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/web-003/#check-tlsssl-configuration","title":"Check TLS/SSL configuration","text":"<p>TLS/SSL issues can cause connection problems:</p> <pre><code># Test TLS connection\nopenssl s_client -connect api.perplexity.ai:443\n\n# Windows (PowerShell)\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n</code></pre>"},{"location":"errors/web-003/#check-network-latency","title":"Check network latency","text":"<p>High latency can cause connection issues:</p> <pre><code># Linux/macOS\ntraceroute api.perplexity.ai\n\n# Windows\ntracert api.perplexity.ai\n</code></pre>"},{"location":"errors/web-003/#check-for-ip-blocking","title":"Check for IP blocking","text":"<p>Your IP might be blocked by the API service:</p> <pre><code># Try from a different network\n# Or use a VPN service temporarily\n</code></pre>"},{"location":"errors/web-003/#use-a-network-traffic-analyzer","title":"Use a network traffic analyzer","text":"<p>Tools like Wireshark can help diagnose connection issues:</p> <pre><code># Install and run Wireshark\n# Filter for traffic to/from api.perplexity.ai\n</code></pre>"},{"location":"errors/web-003/#common-network-issues-and-solutions","title":"Common Network Issues and Solutions","text":"Issue Symptoms Solution DNS failure Cannot resolve hostname Try using a different DNS server (e.g., 8.8.8.8) Firewall blocking Connection refused Configure firewall to allow outbound HTTPS connections Proxy issues Slow or failed connections Configure proxy settings or bypass proxy TLS/SSL errors Handshake failures Update your system's CA certificates IP blocking Consistent connection failures Try from a different network or use a VPN Bandwidth issues Slow, timed out connections Try during off-peak hours or from a different network"},{"location":"errors/web-003/#platform-specific-troubleshooting","title":"Platform-Specific Troubleshooting","text":""},{"location":"errors/web-003/#linuxmacos","title":"Linux/macOS","text":"<ol> <li> <p>Check system certificate store:    <pre><code>ls -la /etc/ssl/certs\n</code></pre></p> </li> <li> <p>Test with cURL with verbose output:    <pre><code>curl -v https://api.perplexity.ai/health\n</code></pre></p> </li> <li> <p>Check system hosts file:    <pre><code>cat /etc/hosts | grep perplexity\n</code></pre></p> </li> </ol>"},{"location":"errors/web-003/#windows","title":"Windows","text":"<ol> <li>Check Windows certificate store:</li> <li> <p>Start &gt; Run &gt; certmgr.msc</p> </li> <li> <p>Reset network stack:    <pre><code>netsh winsock reset\nnetsh int ip reset\nipconfig /flushdns\n</code></pre></p> </li> <li> <p>Check network adapter settings:</p> </li> <li>Control Panel &gt; Network and Internet &gt; Network Connections</li> </ol>"},{"location":"errors/web-003/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li>Check if the Perplexity API service is experiencing issues:</li> <li> <p>Perplexity Status Page</p> </li> <li> <p>Run with debug logging:    <pre><code>cursor-utils web \"test query\" --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try a different network (e.g., mobile hotspot, different Wi-Fi network).</p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Network diagnostics (ping, traceroute, etc.)</li> <li>Your operating system and version</li> <li>ISP and network configuration details (if relevant) </li> </ol>"},{"location":"errors/web-004/","title":"WEB_TIMEOUT_ERROR (web-004)","text":""},{"location":"errors/web-004/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils experiences a timeout while waiting for a response from the Perplexity API during a web command. The request was initiated successfully, but the API took too long to respond, causing the connection to time out.</p>"},{"location":"errors/web-004/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Timed out waiting for response from Perplexity API\n  Code: web-004\n\n  Causes:\n  - Slow network connection\n  - Perplexity API service is experiencing high load\n  - Complex query requiring extended processing time\n  - Network interruption during response\n\n  Suggestion: Try a simpler query or try again later\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/web-004.md\n</code></pre>"},{"location":"errors/web-004/#common-causes","title":"Common Causes","text":"<ol> <li>Slow Network: Your internet connection is slow or unstable.</li> <li>High API Load: The Perplexity API is experiencing high load or performance issues.</li> <li>Complex Query: Your query is particularly complex, requiring extensive processing time.</li> <li>Network Interruption: Your network connection was interrupted during the API response.</li> <li>Default Timeout Too Short: The configured timeout value is too short for your network conditions.</li> <li>Server-Side Processing Delay: The server is taking longer than expected to process the request.</li> </ol>"},{"location":"errors/web-004/#solutions","title":"Solutions","text":""},{"location":"errors/web-004/#check-your-internet-connection-speed","title":"Check your internet connection speed","text":"<p>Verify that your internet connection is fast and stable:</p> <pre><code># Using speedtest-cli (if installed)\nspeedtest-cli\n\n# Or visit speedtest.net in a browser\n</code></pre>"},{"location":"errors/web-004/#increase-the-timeout-value","title":"Increase the timeout value","text":"<p>Set a longer timeout for your request:</p> <pre><code>cursor-utils web \"your query\" --timeout 60\n</code></pre> <p>This sets the timeout to 60 seconds (default is usually 30 seconds).</p>"},{"location":"errors/web-004/#simplify-your-query","title":"Simplify your query","text":"<p>Complex queries may take longer to process. Try simplifying your query:</p> <ul> <li>Break long, complex questions into simpler ones</li> <li>Remove unnecessary details</li> <li>Focus on a specific aspect of your question</li> </ul>"},{"location":"errors/web-004/#try-retry-options","title":"Try retry options","text":"<p>Use retry options to automatically retry failed requests:</p> <pre><code>cursor-utils web \"your query\" --retries 3 --retry-delay 5\n</code></pre> <p>This attempts the request up to 3 times with a 5-second delay between retries.</p>"},{"location":"errors/web-004/#check-api-status","title":"Check API status","text":"<p>Check if the Perplexity API is experiencing issues:</p> <ul> <li>Visit Perplexity Status Page</li> <li>Check for announcements on the Perplexity website</li> </ul>"},{"location":"errors/web-004/#use-a-different-network","title":"Use a different network","text":"<p>If possible, try using a different network connection: - Switch from Wi-Fi to wired connection - Try a mobile hotspot - Use a different Wi-Fi network</p>"},{"location":"errors/web-004/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils web --help</code> - Show help for the web command</li> <li><code>cursor-utils config show</code> - Display current configuration</li> <li><code>cursor-utils test connection</code> - Test API connectivity</li> </ul>"},{"location":"errors/web-004/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>WEB_API_ERROR (web-001) - Error with Perplexity API</li> <li>WEB_CONNECTION_ERROR (web-003) - Connection error during web command</li> <li>WEB_STREAM_ERROR (web-005) - Error with streaming response</li> </ul>"},{"location":"errors/web-004/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/web-004/#configure-persistent-timeout-settings","title":"Configure persistent timeout settings","text":"<p>Set a default timeout value in your configuration:</p> <pre><code>cursor-utils config set web.timeout 60\n</code></pre> <p>This sets the default timeout to 60 seconds for all web commands.</p>"},{"location":"errors/web-004/#check-network-quality","title":"Check network quality","text":"<p>Network quality issues can cause timeouts:</p> <pre><code># Check for packet loss\nping -c 100 api.perplexity.ai | grep \"packet loss\"\n\n# Check for latency\nping -c 10 api.perplexity.ai | grep \"avg\"\n</code></pre>"},{"location":"errors/web-004/#debug-the-request","title":"Debug the request","text":"<p>Run the command with debug logging to see detailed request information:</p> <pre><code>cursor-utils web \"your query\" --debug\n</code></pre>"},{"location":"errors/web-004/#check-for-network-congestion","title":"Check for network congestion","text":"<p>Network congestion can cause timeouts:</p> <pre><code># Linux/macOS\nmtr api.perplexity.ai\n\n# Windows (if pathping is available)\npathping api.perplexity.ai\n</code></pre>"},{"location":"errors/web-004/#optimizing-for-reliable-performance","title":"Optimizing for Reliable Performance","text":""},{"location":"errors/web-004/#use-a-wired-connection","title":"Use a wired connection","text":"<p>Wired connections are generally more stable than wireless connections: - Connect your computer directly to your router with an Ethernet cable - This can reduce latency and packet loss</p>"},{"location":"errors/web-004/#optimize-for-slower-connections","title":"Optimize for slower connections","text":"<p>If you're on a slower connection:</p> <pre><code># Use concise mode for shorter responses\ncursor-utils web \"your query\" --mode concise\n\n# Use a simpler model\ncursor-utils web \"your query\" --model sonar\n</code></pre>"},{"location":"errors/web-004/#schedule-demanding-queries","title":"Schedule demanding queries","text":"<p>For complex queries or during peak usage times: - Run queries during off-peak hours - Use the <code>--save-to</code> option to save results for later viewing   <pre><code>cursor-utils web \"complex query\" --save-to results.md\n</code></pre></p>"},{"location":"errors/web-004/#common-timeout-scenarios-and-solutions","title":"Common Timeout Scenarios and Solutions","text":"Scenario Symptoms Solution Large query Timeout with complex, multi-part questions Break into smaller, focused queries Peak usage Timeouts during business hours Try during off-peak hours Slow connection Consistent timeouts with any query Increase timeout, use simpler models Intermittent timeouts Some queries work, others time out Use retry options, check for network issues Geography-based Timeouts from certain locations Consider using a VPN or proxy closer to API servers"},{"location":"errors/web-004/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Run with maximum debug information:    <pre><code>cursor-utils web \"test query\" --debug --timeout 120\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try with a minimal test query:    <pre><code>cursor-utils web \"Hello world\" --timeout 120\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Your query (or a simplified version of it)</li> <li>Network diagnostics (ping, traceroute, speedtest results)</li> <li>The timeout values you've tried</li> <li>Your operating system and network configuration </li> </ol>"},{"location":"errors/web-005/","title":"WEB_STREAM_ERROR (web-005)","text":""},{"location":"errors/web-005/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters a problem with the streaming response from the Perplexity API during a web command. The connection was established successfully, and the API began streaming a response, but the stream was interrupted or contained errors.</p>"},{"location":"errors/web-005/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Error while streaming response from Perplexity API\n  Code: web-005\n\n  Causes:\n  - Network connection was interrupted during streaming\n  - Perplexity API returned a malformed response\n  - Streaming session timed out\n  - Server-side error occurred during response generation\n\n  Suggestion: Check your network stability and try again\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/web-005.md\n</code></pre>"},{"location":"errors/web-005/#common-causes","title":"Common Causes","text":"<ol> <li>Network Interruption: Your network connection was interrupted during the streaming response.</li> <li>Malformed Response: The API returned a response that couldn't be properly parsed or processed.</li> <li>Streaming Timeout: The streaming session exceeded the maximum allowed time.</li> <li>Server-Side Error: An error occurred on the server while generating the response.</li> <li>Client-Side Processing: Issues with processing or displaying the streaming response.</li> <li>Connection Throttling: Your network provider or a middlebox is throttling the connection.</li> </ol>"},{"location":"errors/web-005/#solutions","title":"Solutions","text":""},{"location":"errors/web-005/#check-network-stability","title":"Check network stability","text":"<p>Ensure your network connection is stable:</p> <pre><code># Test continuous connectivity (Ctrl+C to stop)\nping -c 100 api.perplexity.ai\n\n# Check for packet loss\nping -c 100 api.perplexity.ai | grep \"packet loss\"\n</code></pre>"},{"location":"errors/web-005/#try-non-streaming-mode","title":"Try non-streaming mode","text":"<p>If streaming is causing issues, try using non-streaming mode:</p> <pre><code>cursor-utils web \"your query\" --no-stream\n</code></pre>"},{"location":"errors/web-005/#reduce-response-size","title":"Reduce response size","text":"<p>Limit the size of the response to reduce streaming issues:</p> <pre><code>cursor-utils web \"your query\" --max-tokens 1000\n</code></pre>"},{"location":"errors/web-005/#save-response-to-file","title":"Save response to file","text":"<p>Save the response to a file instead of displaying it in the terminal:</p> <pre><code>cursor-utils web \"your query\" --save-to response.md\n</code></pre>"},{"location":"errors/web-005/#check-for-rate-limiting","title":"Check for rate limiting","text":"<p>If you're making many requests, you might be rate-limited:</p> <pre><code># Space out your requests\nsleep 30 &amp;&amp; cursor-utils web \"your query\"\n</code></pre>"},{"location":"errors/web-005/#update-cursor-utils","title":"Update Cursor Utils","text":"<p>Make sure you're using the latest version:</p> <pre><code>cursor-utils update\n</code></pre>"},{"location":"errors/web-005/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils web --help</code> - Show help for the web command</li> <li><code>cursor-utils config show</code> - Display current configuration</li> <li><code>cursor-utils update</code> - Update to the latest version</li> </ul>"},{"location":"errors/web-005/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>WEB_API_ERROR (web-001) - Error with Perplexity API</li> <li>WEB_CONNECTION_ERROR (web-003) - Connection error during web command</li> <li>WEB_TIMEOUT_ERROR (web-004) - Timeout during web command</li> <li>WEB_MODEL_ERROR (web-006) - Error with model selection</li> </ul>"},{"location":"errors/web-005/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/web-005/#debug-streaming-issues","title":"Debug streaming issues","text":"<p>Run with debug mode to get more information about the streaming process:</p> <pre><code>cursor-utils web \"your query\" --debug\n</code></pre>"},{"location":"errors/web-005/#check-terminal-capabilities","title":"Check terminal capabilities","text":"<p>Some terminal emulators might have issues with streaming displays:</p> <pre><code># Try with a simpler terminal\nexport TERM=xterm-basic\ncursor-utils web \"your query\"\n</code></pre>"},{"location":"errors/web-005/#monitor-network-during-streaming","title":"Monitor network during streaming","text":"<p>Monitor your network activity during the streaming process:</p> <pre><code># In another terminal window (Linux/macOS)\nwatch -n 1 netstat -an | grep perplexity\n</code></pre>"},{"location":"errors/web-005/#check-for-proxy-interference","title":"Check for proxy interference","text":"<p>Proxies or firewalls might interfere with streaming connections:</p> <pre><code># Temporarily disable proxy settings\nunset HTTP_PROXY HTTPS_PROXY http_proxy https_proxy\ncursor-utils web \"your query\"\n</code></pre>"},{"location":"errors/web-005/#understanding-streaming-responses","title":"Understanding Streaming Responses","text":"<p>Streaming responses work differently from regular API responses:</p> <ol> <li>The API sends partial responses as they're generated</li> <li>Cursor Utils processes and displays these chunks in real-time</li> <li>The connection must remain open until the complete response is received</li> </ol> <p>This approach has benefits (faster initial response, real-time updates) but is more sensitive to network issues.</p>"},{"location":"errors/web-005/#common-streaming-issues","title":"Common Streaming Issues","text":"Issue Symptoms Solution Partial response Response cuts off unexpectedly Use <code>--save-to</code> to save partial responses Corrupted output Garbled text or control characters Use <code>--no-stream</code> option Rate limiting Frequent disconnects when making multiple requests Add delays between requests Network jitter Stuttering display or periodic pauses Use a more stable network connection Terminal rendering Display issues in specific terminals Try a different terminal or use <code>--save-to</code>"},{"location":"errors/web-005/#platform-specific-considerations","title":"Platform-Specific Considerations","text":""},{"location":"errors/web-005/#linuxmacos","title":"Linux/macOS","text":"<ol> <li> <p>Terminal capabilities can affect streaming display:    <pre><code># Try different TERM settings\nexport TERM=xterm-256color  # or xterm or vt100\n</code></pre></p> </li> <li> <p>Network manager might interfere with long-lived connections:    <pre><code># Check NetworkManager settings\nnmcli connection show\n</code></pre></p> </li> </ol>"},{"location":"errors/web-005/#windows","title":"Windows","text":"<ol> <li>Windows Firewall might inspect and interfere with streaming:</li> <li>Check Windows Defender Firewall settings</li> <li> <p>Consider temporarily disabling for testing</p> </li> <li> <p>Some Windows terminals handle streaming better than others:</p> </li> <li>Try Windows Terminal instead of cmd.exe</li> <li>Try PowerShell instead of Command Prompt</li> </ol>"},{"location":"errors/web-005/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li> <p>Collect debugging information:    <pre><code>cursor-utils web \"test query\" --debug --save-to debug-output.txt\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>Try with a minimal query and non-streaming mode:    <pre><code>cursor-utils web \"Hello world\" --no-stream\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>Your query</li> <li>Debug logs</li> <li>When during the response the error occurred (beginning, middle, end)</li> <li>Network environment details (ISP, connection type, etc.) </li> </ol>"},{"location":"errors/web-006/","title":"WEB_MODEL_ERROR (web-006)","text":""},{"location":"errors/web-006/#error-description","title":"Error Description","text":"<p>This error occurs when Cursor Utils encounters an issue with the specified model during a web command. This could be due to an invalid model name, a model that is unavailable or deprecated, or other model-related issues.</p>"},{"location":"errors/web-006/#example-error","title":"Example Error","text":"<pre><code>\u00d7 ERROR: Error with web model\n  Code: web-006\n\n  Causes:\n  - Invalid model name specified\n  - The requested model is not available\n  - The model is deprecated\n  - The model requires additional permissions\n  - The model capacity is currently full\n\n  Suggestion: Check the model name and try a different model\n\n  For more information: https://gweidart.github.io/cursor-utils/errors/web-006.md\n</code></pre>"},{"location":"errors/web-006/#common-causes","title":"Common Causes","text":"<ol> <li>Invalid Model Name: The specified model name is not valid or contains typos.</li> <li>Unavailable Model: The requested model is not available to your API key or account.</li> <li>Deprecated Model: The model has been deprecated and is no longer supported.</li> <li>Permission Issues: Your API key doesn't have permission to use the requested model.</li> <li>Capacity Limits: The model is at capacity and cannot accept new requests temporarily.</li> <li>API Version Mismatch: The model is not compatible with the API version being used.</li> </ol>"},{"location":"errors/web-006/#solutions","title":"Solutions","text":""},{"location":"errors/web-006/#check-available-models","title":"Check available models","text":"<p>Verify which models are available to your API key:</p> <pre><code>cursor-utils web models list\n</code></pre>"},{"location":"errors/web-006/#use-a-default-model","title":"Use a default model","text":"<p>If you're unsure which model to use, let Cursor Utils use the default model:</p> <pre><code>cursor-utils web \"your query\"  # Without specifying a model\n</code></pre>"},{"location":"errors/web-006/#try-a-different-model","title":"Try a different model","text":"<p>If one model is not working, try another supported model:</p> <pre><code>cursor-utils web \"your query\" --model sonar  # Basic model\ncursor-utils web \"your query\" --model sonar-pro  # Enhanced model\n</code></pre>"},{"location":"errors/web-006/#check-model-name-spelling","title":"Check model name spelling","text":"<p>Ensure the model name is spelled correctly:</p> <pre><code># Correct\ncursor-utils web \"your query\" --model sonar-pro\n\n# Incorrect\ncursor-utils web \"your query\" --model SonarPro  # Wrong format\ncursor-utils web \"your query\" --model sonar_pro  # Wrong format\n</code></pre>"},{"location":"errors/web-006/#update-your-configuration","title":"Update your configuration","text":"<p>Update your web configuration with a valid model:</p> <pre><code>cursor-utils config set web.model sonar-pro\n</code></pre>"},{"location":"errors/web-006/#update-cursor-utils","title":"Update Cursor Utils","text":"<p>Make sure you're using the latest version:</p> <pre><code>cursor-utils update\n</code></pre>"},{"location":"errors/web-006/#valid-model-options","title":"Valid Model Options","text":"Model Description Notes <code>sonar</code> Basic model Good for simple queries, fastest <code>sonar-pro</code> Enhanced model Better comprehension, recommended for most uses <code>sonar-reasoning</code> Reasoning model Improved logical reasoning capabilities <code>sonar-pro-reasoning</code> Pro reasoning model Best for complex analytical questions"},{"location":"errors/web-006/#related-commands","title":"Related Commands","text":"<ul> <li><code>cursor-utils web --help</code> - Show help for the web command</li> <li><code>cursor-utils web models list</code> - List available models</li> <li><code>cursor-utils config show</code> - Display current configuration</li> <li><code>cursor-utils config set web.model [MODEL]</code> - Set the default model</li> </ul>"},{"location":"errors/web-006/#related-error-codes","title":"Related Error Codes","text":"<ul> <li>WEB_API_ERROR (web-001) - Error with Perplexity API</li> <li>WEB_CONFIG_ERROR (web-002) - Error with web command configuration</li> <li>INVALID_API_KEY (config-001) - Invalid API key</li> </ul>"},{"location":"errors/web-006/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"errors/web-006/#check-api-documentation","title":"Check API documentation","text":"<p>Refer to the Perplexity API documentation for the latest information on supported models: - Perplexity API Documentation</p>"},{"location":"errors/web-006/#debug-model-selection","title":"Debug model selection","text":"<p>Run with debug mode to see model selection details:</p> <pre><code>cursor-utils web \"your query\" --model sonar-pro --debug\n</code></pre>"},{"location":"errors/web-006/#check-for-api-updates","title":"Check for API updates","text":"<p>The Perplexity API might have changed since your version of Cursor Utils was released:</p> <pre><code># Check your Cursor Utils version\ncursor-utils --version\n\n# Update to the latest version\ncursor-utils update\n</code></pre>"},{"location":"errors/web-006/#check-api-key-capabilities","title":"Check API key capabilities","text":"<p>Some API keys might be restricted to certain models. Check your API key's capabilities:</p> <pre><code>cursor-utils test api_key --type PERPLEXITY\n</code></pre>"},{"location":"errors/web-006/#model-selection-considerations","title":"Model Selection Considerations","text":""},{"location":"errors/web-006/#performance-vs-quality","title":"Performance vs Quality","text":"<p>Different models offer different trade-offs: - Basic models (sonar): Faster responses, lower resource usage, less detailed answers - Pro models (sonar-pro): More detailed responses, higher resource usage, might be slower</p>"},{"location":"errors/web-006/#task-appropriateness","title":"Task Appropriateness","text":"<p>Choose models based on your task: - Factual questions: sonar or sonar-pro is usually sufficient - Analytical questions: sonar-reasoning or sonar-pro-reasoning may be better - Simple instructions: sonar is faster and efficient - Complex reasoning: sonar-pro-reasoning provides more thorough analysis</p>"},{"location":"errors/web-006/#api-costs","title":"API Costs","text":"<p>Different models may have different costs associated with them: - Higher-tier models might use more tokens or cost more per query - Check your Perplexity account for specific pricing details</p>"},{"location":"errors/web-006/#still-having-issues","title":"Still Having Issues?","text":"<p>If you've tried the solutions above and still encounter the error, please:</p> <ol> <li>Check the current status of the Perplexity API:</li> <li> <p>Perplexity Status Page</p> </li> <li> <p>Run with debug logging:    <pre><code>cursor-utils web \"test query\" --model sonar --debug\n</code></pre></p> </li> <li> <p>Check the logs:    <pre><code>cat ~/.cursor-utils/logs/cursor-utils.log\n</code></pre></p> </li> <li> <p>If the issue persists, please submit a bug report with:</p> </li> <li>The complete error message</li> <li>The model you tried to use</li> <li>Other models you've tested (and whether they worked)</li> <li>Your Cursor Utils version (<code>cursor-utils --version</code>)</li> <li>Debug log output </li> </ol>"}]}